AutoGen Definitions dummy;
class = {
  cp-id     = 'class_s_i4735';
  cp-name   = 'SI4735';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a818c60896490631e4311452c99ff361f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SI4735';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '924';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This is a library for the SI4735, BROADCAST AM/FM/SW RADIO RECEIVER, IC from Silicon Labs for the 
Arduino development environment.  It works with I2C protocol. 
This library is intended to provide an easier interface for controlling the SI4735.
@see documentation on https://github.com/pu2clr/SI4735.

@see also: 
 Si47XX PROGRAMMING GUIDE; AN332
 AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; AMENDMENT FOR SI4735-D60 SSB AND NBFM PATCHES

Pay attention: 
According to Si47XX PROGRAMMING GUIDE; AN332; page 207, "For write operations, the system controller next 
sends a data byte on SDIO, which is captured by the device on rising edges of SCLK. The device acknowledges 
each data byte by driving SDIO low for one cycle on the next falling edge of SCLK. 
The system controller may write up to 8 data bytes in a single 2-wire transaction. 
The first byte is a command, and the next seven bytes are arguments. Writing more than 8 bytes results 
in unpredictable device behavior". So, If you are extending this library, consider that restriction presented earlier.

ATTENTION: Some methods were implemented usin inline resource. Inline methods are implemented in SI4735.h

By Ricardo Lima Caratti, Nov 2019.
Construct a new SI4735::SI4735 object
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1adc6014674bd4d1ee3aab56c605926db1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'reset';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '925';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Reset the SI473X   
<br>
@see Si47XX PROGRAMMING GUIDE; AN332;
_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a6f045d3725a457116236ee92d41c4265';
        sec-mem-ref-line = '2105';
        sec-mem-ref-name = 'ssbSetup';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a7b45c1b22c3c1a3f2326bee913d1e1e0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'waitToSend';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '926';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Wait for the si473x is ready (Clear to Send (CTS) status bit have to be 1).  
<br>
This function should be used before sending any command to a SI47XX device.
@see Si47XX PROGRAMMING GUIDE; AN332; pages 63, 128
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aa99cdde8dd65eb92f2ada159cc215c98';
        sec-mem-ref-line = '2228';
        sec-mem-ref-name = 'downloadPatch';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aaae187575b9868ff427c063c3a6cca2a';
        sec-mem-ref-line = '885';
        sec-mem-ref-name = 'getAutomaticGainControl';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1abf59183da13c72384093fc238c3114cf';
        sec-mem-ref-line = '974';
        sec-mem-ref-name = 'getCurrentReceivedSignalQuality';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a2fbc7e2187a7c645879623100dbc8502';
        sec-mem-ref-line = '250';
        sec-mem-ref-name = 'getFirmware';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a350a2033671a7620d4b9290a2347e185';
        sec-mem-ref-line = '1350';
        sec-mem-ref-name = 'getRdsStatus';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a5c0f4036a7fbbd11a26f1f6f4579d3cd';
        sec-mem-ref-line = '841';
        sec-mem-ref-name = 'getStatus';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1afaabd6c73b7ad7c20ae959d5b75c1e71';
        sec-mem-ref-line = '2090';
        sec-mem-ref-name = 'patchPowerUp';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aa554b3390fb6c5a4d6661b96afae73ae';
        sec-mem-ref-line = '236';
        sec-mem-ref-name = 'powerDown';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1adfc2c82524918224cf19fec5b7fcf6d1';
        sec-mem-ref-line = '2053';
        sec-mem-ref-name = 'queryLibraryId';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a3e228da65641f4dcf4253262e19bde9b';
        sec-mem-ref-line = '206';
        sec-mem-ref-name = 'radioPowerUp';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a3280b98b8331f00b4d0158ef1b076533';
        sec-mem-ref-line = '1033';
        sec-mem-ref-name = 'seekStation';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae351181347f8c512b625d98ef7844961';
        sec-mem-ref-line = '603';
        sec-mem-ref-name = 'sendProperty';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae1d866bfc4cb37c4268c8942b4b4d062';
        sec-mem-ref-line = '2006';
        sec-mem-ref-name = 'sendSSBModeProperty';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a27c22f5671ce3229e925e5fbe93ba0a6';
        sec-mem-ref-line = '926';
        sec-mem-ref-name = 'setAutomaticGainControl';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a8755743a36d2d4662c8db918d02ee4e1';
        sec-mem-ref-line = '557';
        sec-mem-ref-name = 'setBandwidth';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a63d205f2d3169ba877a2bd2ee28d224f';
        sec-mem-ref-line = '376';
        sec-mem-ref-name = 'setFrequency';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ad9718a85c79a311c26997bbda20f2351';
        sec-mem-ref-line = '1265';
        sec-mem-ref-name = 'setRdsConfig';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a530e64d00d95b4ceb13ce33aa74c63cb';
        sec-mem-ref-line = '1309';
        sec-mem-ref-name = 'setRdsIntSource';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a55cf9a091d314a1aa21552f2254f756f';
        sec-mem-ref-line = '1790';
        sec-mem-ref-name = 'setSSBBfo';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a0fcfd8e487c594707b3f2aaa71a86d68';
        sec-mem-ref-line = '2116';
        sec-mem-ref-name = 'ssbPowerUp';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a944ed704e2175a6cf660ad65ca5bbad5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setup';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'resetPin';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'defaultFunction';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '929';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Starts the Si473X device.  
<br>
Use this setup if you are not using interrupt resource

@param uint8_t resetPin Digital Arduino Pin used to RESET command 
@param uint8_t defaultFunction
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a95fd37277dbb8b16b5ae7a996a5f9eba';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setup';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'resetPin';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'interruptPin';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'defaultFunction';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'audioMode';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
SI473X_ANALOG_AUDIO
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '930';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Starts the Si473X device. 

If the audio mode parameter is not entered, analog mode will be considered.


@param uint8_t resetPin Digital Arduino Pin used to RESET command 
@param uint8_t interruptPin interrupt Arduino Pin (see your Arduino pinout). If less than 0, iterrupt disabled
@param uint8_t defaultFunction
@param uint8_t audioMode default SI473X_ANALOG_AUDIO (Analog Audio). Use SI473X_ANALOG_AUDIO or SI473X_DIGITAL_AUDIO
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1af8f8123888060f858c74ba08a29ff38b';
        sec-mem-ref-line = '886';
        sec-mem-ref-name = 'interruptPin';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a8bc001cb28dc8fbd88ba0fa7024eca39';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setPowerUp';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'CTSIEN';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'GPO2OEN';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'PATCH';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'XOSCEN';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'FUNC';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'OPMODE';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '932';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set the Power Up parameters for si473X. 
Use this method to chenge the defaul behavior of the Si473X. Use it before PowerUp()

@see Si47XX PROGRAMMING GUIDE; AN332; pages 65 and 129

@param uint8_t CTSIEN sets Interrupt anabled or disabled (1 = anabled and 0 = disabled )
@param uint8_t GPO2OEN sets GP02 Si473X pin enabled (1 = anabled and 0 = disabled )
@param uint8_t PATCH  Used for firmware patch updates. Use it always 0 here. 
@param uint8_t XOSCEN sets external Crystal enabled or disabled 
@param uint8_t FUNC sets the receiver function have to be used [0 = FM Receive; 1 = AM (LW/MW/SW) and SSB (if SSB patch apllied)]
@param uint8_t OPMODE set the kind of audio mode you want to use.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a9aee8ee0d04a6a7e732210fdea987d2c';
        sec-mem-ref-line = '232';
        sec-mem-ref-name = 'si47x_set_frequency::ANTCAPH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a712fdd01147dcef829431bc2fc94a012';
        sec-mem-ref-line = '233';
        sec-mem-ref-name = 'si47x_set_frequency::ANTCAPL';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a21297439eccc575f7c0a3228a4061fa7';
        sec-mem-ref-line = '181';
        sec-mem-ref-name = 'si473x_powerup::CTSIEN';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a8253ae2f3c87a6943776f8a63a691ca3';
        sec-mem-ref-line = '901';
        sec-mem-ref-name = 'currentFrequencyParams';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1acc3d3a411d181e08846219661dbde1c4';
        sec-mem-ref-line = '888';
        sec-mem-ref-name = 'currentTune';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a0f58c9f3ce774e07a2acc9ba4e968c85';
        sec-mem-ref-line = '228';
        sec-mem-ref-name = 'si47x_set_frequency::DUMMY1';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ad419130c085839f718f6530e18943c23';
        sec-mem-ref-line = '227';
        sec-mem-ref-name = 'si47x_set_frequency::FREEZE';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a6da21e782c18e0d15791f712e602bf0f';
        sec-mem-ref-line = '180';
        sec-mem-ref-name = 'si473x_powerup::GPO2OEN';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a5deeab3cdc44cc652b6e8867dd8e9833';
        sec-mem-ref-line = '183';
        sec-mem-ref-name = 'si473x_powerup::OPMODE';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1aff3f1655e972eff4630c66f0b4ec7704';
        sec-mem-ref-line = '179';
        sec-mem-ref-name = 'si473x_powerup::PATCH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a1331b701088bda20bf0844e2e38be142';
        sec-mem-ref-line = '909';
        sec-mem-ref-name = 'powerUp';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ae68c435fb0ff2ad54bc17ac794a482c1';
        sec-mem-ref-line = '178';
        sec-mem-ref-name = 'si473x_powerup::XOSCEN';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a753390952a1f2c2a98343979f1f3daa0';
        sec-mem-ref-line = '458';
        sec-mem-ref-name = 'setAM';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1acd89e7b8adefcbc4e89f802acb915906';
        sec-mem-ref-line = '478';
        sec-mem-ref-name = 'setFM';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a3e907ddf560a0c8286fa55768701b3da';
        sec-mem-ref-line = '1960';
        sec-mem-ref-name = 'setSSB';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a3e228da65641f4dcf4253262e19bde9b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'radioPowerUp';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '933';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Powerup the Si47XX
Before call this function call the setPowerUp to set up the parameters.
Parameters you have to set up with setPowerUp

CTSIEN   Interrupt anabled or disabled;
GPO2OEN  GPO2 Output Enable or disabled;
PATCH    Boot normally or patch;
XOSCEN   Use external crystal oscillator;
FUNC     defaultFunction = 0 = FM Receive; 1 = AM (LW/MW/SW) Receiver.
OPMODE   SI473X_ANALOG_AUDIO (B00000101) or SI473X_DIGITAL_AUDIO (B00001011)

@see  SI4735::setPowerUp()
@see  Si47XX PROGRAMMING GUIDE; AN332; pages 64, 129
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a1331b701088bda20bf0844e2e38be142';
        sec-mem-ref-line = '909';
        sec-mem-ref-name = 'powerUp';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7b45c1b22c3c1a3f2326bee913d1e1e0';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'waitToSend';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a412f51386c47a17cf04fd0a3c3078726';
        sec-mem-ref-line = '225';
        sec-mem-ref-name = 'analogPowerUp';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a753390952a1f2c2a98343979f1f3daa0';
        sec-mem-ref-line = '458';
        sec-mem-ref-name = 'setAM';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1acd89e7b8adefcbc4e89f802acb915906';
        sec-mem-ref-line = '478';
        sec-mem-ref-name = 'setFM';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a3e907ddf560a0c8286fa55768701b3da';
        sec-mem-ref-line = '1960';
        sec-mem-ref-name = 'setSSB';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a412f51386c47a17cf04fd0a3c3078726';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'analogPowerUp';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '934';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Powerup in Analog Mode. It will be deprecated. Consider use radioPowerUp instead.
Actually this function works fo Digital and Analog modes. 
You have to call setPowerUp method before. 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a3e228da65641f4dcf4253262e19bde9b';
        sec-mem-ref-line = '206';
        sec-mem-ref-name = 'radioPowerUp';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1aa554b3390fb6c5a4d6661b96afae73ae';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'powerDown';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '935';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Moves the device from powerup to powerdown mode.
After Power Down command, only the Power Up command is accepted.

@see Si47XX PROGRAMMING GUIDE; AN332; pages 67, 132
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7b45c1b22c3c1a3f2326bee913d1e1e0';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'waitToSend';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1adfc2c82524918224cf19fec5b7fcf6d1';
        sec-mem-ref-line = '2053';
        sec-mem-ref-name = 'queryLibraryId';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a753390952a1f2c2a98343979f1f3daa0';
        sec-mem-ref-line = '458';
        sec-mem-ref-name = 'setAM';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1acd89e7b8adefcbc4e89f802acb915906';
        sec-mem-ref-line = '478';
        sec-mem-ref-name = 'setFM';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a63d205f2d3169ba877a2bd2ee28d224f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFrequency';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'freq';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '937';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set the frequency to the corrent function of the Si4735 (FM, AM or SSB)
You have to call setup or setPowerUp before call setFrequency.

@see Si47XX PROGRAMMING GUIDE; AN332; pages 70, 135
@see AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; page 13

@param uint16_t  freq Is the frequency to change. For example, FM => 10390 = 103.9 MHz; AM => 810 = 810 KHz.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a9aee8ee0d04a6a7e732210fdea987d2c';
        sec-mem-ref-line = '232';
        sec-mem-ref-name = 'si47x_set_frequency::ANTCAPH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a712fdd01147dcef829431bc2fc94a012';
        sec-mem-ref-line = '233';
        sec-mem-ref-name = 'si47x_set_frequency::ANTCAPL';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a4439c40db789f02371ea0fb9b22650c5';
        sec-mem-ref-line = '900';
        sec-mem-ref-name = 'currentFrequency';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a8253ae2f3c87a6943776f8a63a691ca3';
        sec-mem-ref-line = '901';
        sec-mem-ref-name = 'currentFrequencyParams';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1acc3d3a411d181e08846219661dbde1c4';
        sec-mem-ref-line = '888';
        sec-mem-ref-name = 'currentTune';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a9da4f3df9e5e6b0448eff15e12f690dd';
        sec-mem-ref-line = '892';
        sec-mem-ref-name = 'currentWorkFrequency';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a0f58c9f3ce774e07a2acc9ba4e968c85';
        sec-mem-ref-line = '228';
        sec-mem-ref-name = 'si47x_set_frequency::DUMMY1';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ad419130c085839f718f6530e18943c23';
        sec-mem-ref-line = '227';
        sec-mem-ref-name = 'si47x_set_frequency::FREEZE';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ae85fcb4329c600511e2127e1c5029f8c';
        sec-mem-ref-line = '198';
        sec-mem-ref-name = 'si47x_frequency::FREQH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a55e3e49406688a65d9e90427ba3290cd';
        sec-mem-ref-line = '230';
        sec-mem-ref-name = 'si47x_set_frequency::FREQH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a0b7fcda4891b52509b53168d581936e3';
        sec-mem-ref-line = '231';
        sec-mem-ref-name = 'si47x_set_frequency::FREQL';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a224ff2b8897867521dc7e83e4a7aadae';
        sec-mem-ref-line = '229';
        sec-mem-ref-name = 'si47x_set_frequency::USBLSB';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7b45c1b22c3c1a3f2326bee913d1e1e0';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'waitToSend';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a93fff524a6f900ac91eb1222ce73f9ba';
        sec-mem-ref-line = '442';
        sec-mem-ref-name = 'frequencyDown';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ac0fcfd64dcf30b11d4dc219d9f7fc5d9';
        sec-mem-ref-line = '427';
        sec-mem-ref-name = 'frequencyUp';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a43c5ea36995a3897820e0170d94c81f4';
        sec-mem-ref-line = '499';
        sec-mem-ref-name = 'setAM';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a673bc4b17d564bb6e7f3e9a61d35fbb3';
        sec-mem-ref-line = '524';
        sec-mem-ref-name = 'setFM';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a3cf856c44fcfffb3d81b22b1d09b881f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getStatus';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '940';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Gets the current status  of the Si4735 (AM or FM)

@see Si47XX PROGRAMMING GUIDE; AN332; pages 73 (FM) and 139 (AM)
_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7e88bb573604d465536c13554d5c61f8';
        sec-mem-ref-line = '809';
        sec-mem-ref-name = 'getFrequency';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a5c0f4036a7fbbd11a26f1f6f4579d3cd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getStatus';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'INTACK';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'CANCEL';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '941';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Gets the current status  of the Si4735 (AM or FM)
@see Si47XX PROGRAMMING GUIDE; AN332; pages 73 (FM) and 139 (AM)

@param uint8_t INTACK Seek/Tune Interrupt Clear. If set, clears the seek/tune complete interrupt status indicator;
@param uint8_t CANCEL Cancel seek. If set, aborts a seek currently in progress;
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ae6d5968d62f9c0eec44528e7b050f0bf';
        sec-mem-ref-line = '378';
        sec-mem-ref-name = 'si47x_tune_status::CANCEL';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a7ad35ba002b73b66e9ce97b304854695';
        sec-mem-ref-line = '903';
        sec-mem-ref-name = 'currentStatus';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1acc3d3a411d181e08846219661dbde1c4';
        sec-mem-ref-line = '888';
        sec-mem-ref-name = 'currentTune';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7b45c1b22c3c1a3f2326bee913d1e1e0';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'waitToSend';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a7e88bb573604d465536c13554d5c61f8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getFrequency';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '944';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Device Status Information
Gets the current frequency of the Si4735 (AM or FM)
The method status do it an more. See getStatus below. 

@see Si47XX PROGRAMMING GUIDE; AN332; pages 73 (FM) and 139 (AM)
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a7ad35ba002b73b66e9ce97b304854695';
        sec-mem-ref-line = '903';
        sec-mem-ref-name = 'currentStatus';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a9da4f3df9e5e6b0448eff15e12f690dd';
        sec-mem-ref-line = '892';
        sec-mem-ref-name = 'currentWorkFrequency';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ae85fcb4329c600511e2127e1c5029f8c';
        sec-mem-ref-line = '198';
        sec-mem-ref-name = 'si47x_frequency::FREQH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a3cf856c44fcfffb3d81b22b1d09b881f';
        sec-mem-ref-line = '872';
        sec-mem-ref-name = 'getStatus';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a7d5ca536d8706e6cc9df2c8d5aea268e';
        sec-mem-ref-line = '282';
        sec-mem-ref-name = 'si47x_response_status::READFREQH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a6d5f612fc40df215e9f4c6a94b68e2e6';
        sec-mem-ref-line = '284';
        sec-mem-ref-name = 'si47x_response_status::READFREQL';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a1eeaa09670cdbdc7ddd724c940d2506b';
        sec-mem-ref-line = '1078';
        sec-mem-ref-name = 'seekStationDown';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aad5211e3fff28141473442f59008e415';
        sec-mem-ref-line = '1066';
        sec-mem-ref-name = 'seekStationUp';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a8240278970ae8bf7283e14714b4329ad';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getCurrentFrequency';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '945';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Gets the current frequency saved in memory. 
Unlike getFrequency, this method gets the current frequency recorded after the last setFrequency command. 
This method avoids bus traffic and CI processing.
However, you can not get others status information like RSSI.

@see getFrequency()
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a9da4f3df9e5e6b0448eff15e12f690dd';
        sec-mem-ref-line = '892';
        sec-mem-ref-name = 'currentWorkFrequency';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ad194137a6a712a599e3c26e5b6357594';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getSignalQualityInterrupt';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '953';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
STATUS RESPONSE
Set of methods to get current status information. Call them after getStatus or getFrequency or seekStation
See Si47XX PROGRAMMING GUIDE; AN332; pages 63
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a7ad35ba002b73b66e9ce97b304854695';
        sec-mem-ref-line = '903';
        sec-mem-ref-name = 'currentStatus';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a301f61dac86d37ec2fc74c79c98254ab';
        sec-mem-ref-line = '272';
        sec-mem-ref-name = 'si47x_response_status::RSQINT';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a97dc44d9927ea58730a18fb6baa6867f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRadioDataSystemInterrupt';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '954';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets Received Signal Quality Interrupt(RSQINT)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a7ad35ba002b73b66e9ce97b304854695';
        sec-mem-ref-line = '903';
        sec-mem-ref-name = 'currentStatus';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a2cc659bddc5efc7695f2a6031c2edd4b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getTuneCompleteTriggered';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '955';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets Radio Data System (RDS) Interrupt.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a7ad35ba002b73b66e9ce97b304854695';
        sec-mem-ref-line = '903';
        sec-mem-ref-name = 'currentStatus';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a69723840497ed693d6f9a4e840ab07c9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getStatusError';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '956';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Seek/Tune Complete Interrupt; 1 = Tune complete has been triggered.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a7ad35ba002b73b66e9ce97b304854695';
        sec-mem-ref-line = '903';
        sec-mem-ref-name = 'currentStatus';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1afcb38f53b6eb71cadcefa0bb472ca943';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getStatusCTS';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '957';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Return the Error flag (true or false) of status of the least Tune or Seek.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a7ad35ba002b73b66e9ce97b304854695';
        sec-mem-ref-line = '903';
        sec-mem-ref-name = 'currentStatus';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a6816e97ec06655d72350b83eae0e9f4c';
        sec-mem-ref-line = '275';
        sec-mem-ref-name = 'si47x_response_status::CTS';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ab8a51de592fd40fdd872039b3c70716f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getACFIndicator';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '958';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets the Error flag of status response.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a7ad35ba002b73b66e9ce97b304854695';
        sec-mem-ref-line = '903';
        sec-mem-ref-name = 'currentStatus';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1acc8c563c2eaf6702c36961fd300fecfb';
        sec-mem-ref-line = '278';
        sec-mem-ref-name = 'si47x_response_status::AFCRL';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a19e96565a2dec7ec68469f45c8d3e084';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getBandLimit';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '959';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns true if the AFC rails (AFC Rail Indicator).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a7ad35ba002b73b66e9ce97b304854695';
        sec-mem-ref-line = '903';
        sec-mem-ref-name = 'currentStatus';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1afb19da8a05320d7f38cca8325725edfd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getStatusValid';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '960';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns true if a seek hit the band limit (WRAP = 0 in FM_START_SEEK) or wrapped to the original frequency(WRAP = 1).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a7ad35ba002b73b66e9ce97b304854695';
        sec-mem-ref-line = '903';
        sec-mem-ref-name = 'currentStatus';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1aa4da6ef23dc23e40e9dcfc582ac7a53e';
        sec-mem-ref-line = '277';
        sec-mem-ref-name = 'si47x_response_status::VALID';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1aeeefd12b49dbc764e0f45fe208441482';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getReceivedSignalStrengthIndicator';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '961';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns true if the channel is currently valid as determined by the seek/tune properties (0x1403, 0x1404, 0x1108)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a7ad35ba002b73b66e9ce97b304854695';
        sec-mem-ref-line = '903';
        sec-mem-ref-name = 'currentStatus';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a524207ce1b79627d69f94049ba8c614d';
        sec-mem-ref-line = '286';
        sec-mem-ref-name = 'si47x_response_status::RSSI';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ac0bd4daaa321ef8956dca4d1e4e5cd3c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getStatusSNR';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '962';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns integer Received Signal Strength Indicator (dBμV).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a7ad35ba002b73b66e9ce97b304854695';
        sec-mem-ref-line = '903';
        sec-mem-ref-name = 'currentStatus';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a14f5ce9ed117d45a2230b6f87b88a4cb';
        sec-mem-ref-line = '288';
        sec-mem-ref-name = 'si47x_response_status::SNR';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a0f9b5438a6f92c8f2e538ee640f353ab';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getStatusMULT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '963';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns integer containing the SNR metric when tune is complete (dB).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a7ad35ba002b73b66e9ce97b304854695';
        sec-mem-ref-line = '903';
        sec-mem-ref-name = 'currentStatus';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a1ee21104ab8a4a13619ee5c3f7fb3f2f';
        sec-mem-ref-line = '290';
        sec-mem-ref-name = 'si47x_response_status::MULT';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a3905d6551992b4dd51d13f05978d9081';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getAntennaTuningCapacitor';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '964';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns integer containing the multipath metric when tune is complete.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a7ad35ba002b73b66e9ce97b304854695';
        sec-mem-ref-line = '903';
        sec-mem-ref-name = 'currentStatus';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1acd0a9f2982a84c43b8127f5e54982f19';
        sec-mem-ref-line = '292';
        sec-mem-ref-name = 'si47x_response_status::READANTCAP';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1aaae187575b9868ff427c063c3a6cca2a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getAutomaticGainControl';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '966';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns integer containing the current antenna tuning capacitor value.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Queries AGC STATUS

@see Si47XX PROGRAMMING GUIDE; AN332; For FM page 80; for AM page 142.
@see AN332 REV 0.8 Universal Programming Guide Amendment for SI4735-D60 SSB and NBFM patches; page 18. 

After call this method, you can call isAgcEnabled to know the AGC status and getAgcGainIndex to know the gain index value.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1adf2d1f37ec9edf95e14aecb3cdc7417d';
        sec-mem-ref-line = '906';
        sec-mem-ref-name = 'currentAgcStatus';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1acc3d3a411d181e08846219661dbde1c4';
        sec-mem-ref-line = '888';
        sec-mem-ref-name = 'currentTune';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7b45c1b22c3c1a3f2326bee913d1e1e0';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'waitToSend';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a98d12da4b801493a350ecf770f4f2d8b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setAvcAmMaxGain';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'gain';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '968';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets the maximum gain for automatic volume control.
If no parameter is sent, it will be consider 48dB.

@see Si47XX PROGRAMMING GUIDE; AN332; page 152

@param uint8_t gain  Select a value between 12 and 192.  Defaul value 48dB.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a650490ab792c1853c97f600661ecdaa1';
        sec-mem-ref-line = '898';
        sec-mem-ref-name = 'currentAvcAmMaxGain';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae351181347f8c512b625d98ef7844961';
        sec-mem-ref-line = '603';
        sec-mem-ref-name = 'sendProperty';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a98d12da4b801493a350ecf770f4f2d8b';
        sec-mem-ref-line = '956';
        sec-mem-ref-name = 'setAvcAmMaxGain';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a753390952a1f2c2a98343979f1f3daa0';
        sec-mem-ref-line = '458';
        sec-mem-ref-name = 'setAM';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a98d12da4b801493a350ecf770f4f2d8b';
        sec-mem-ref-line = '956';
        sec-mem-ref-name = 'setAvcAmMaxGain';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a6e1e0e48d71e09debb07fc6dbe884829';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setAvcAmMaxGain';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '969';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a27dd7dfd46583eb5be91cfc9461807ff';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getCurrentAvcAmMaxGain';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '970';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1acc57f6bde08e94462a9d75fe28a66ea8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setAmSoftMuteMaxAttenuation';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'smattn';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '972';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ac1af311f799e8a007cbd048a88f1abe9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setAmSoftMuteMaxAttenuation';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '973';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ad357ccc5f207ec11d36d9569046c098f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setSsbSoftMuteMaxAttenuation';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'smattn';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '975';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1afd057daf737a78a50ad1a03a6b43a111';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setSsbSoftMuteMaxAttenuation';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '976';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1aea08b7e553212cbe01bf6f4ec9e02de7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'isAgcEnabled';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '979';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a4eceaf5745e87fcca6cf31c04c5635bd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getAgcGainIndex';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '980';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a27c22f5671ce3229e925e5fbe93ba0a6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setAutomaticGainControl';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'AGCDIS';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'AGCIDX';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '981';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
If FM, overrides AGC setting by disabling the AGC and forcing the LNA to have a certain gain that ranges between 0 
(minimum attenuation) and 26 (maximum attenuation);
If AM/SSB, Overrides the AM AGC setting by disabling the AGC and forcing the gain index that ranges between 0 
(minimum attenuation) and 37+ATTN_BACKUP (maximum attenuation);

@see Si47XX PROGRAMMING GUIDE; AN332; For FM page 81; for AM page 143 

@param uint8_t AGCDIS This param selects whether the AGC is enabled or disabled (0 = AGC enabled; 1 = AGC disabled);
@param uint8_t AGCIDX AGC Index (0 = Minimum attenuation (max gain); 1 – 36 = Intermediate attenuation); 
               if >greater than 36 - Maximum attenuation (min gain) ).
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1acc3d3a411d181e08846219661dbde1c4';
        sec-mem-ref-line = '888';
        sec-mem-ref-name = 'currentTune';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7b45c1b22c3c1a3f2326bee913d1e1e0';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'waitToSend';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1abf59183da13c72384093fc238c3114cf';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getCurrentReceivedSignalQuality';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'INTACK';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '983';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Queries the status of the Received Signal Quality (RSQ) of the current channel.
This method sould be called berore call getCurrentRSSI(), getCurrentSNR() etc.
Command FM_RSQ_STATUS

@see Si47XX PROGRAMMING GUIDE; AN332; pages 75 and 141

@param INTACK Interrupt Acknowledge. 
       0 = Interrupt status preserved; 
       1 = Clears RSQINT, BLENDINT, SNRHINT, SNRLINT, RSSIHINT, RSSILINT, MULTHINT, MULTLINT.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1acc3d3a411d181e08846219661dbde1c4';
        sec-mem-ref-line = '888';
        sec-mem-ref-name = 'currentTune';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7b45c1b22c3c1a3f2326bee913d1e1e0';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'waitToSend';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a7393fa4f9d7811c8d0c0f48283ef6435';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getCurrentReceivedSignalQuality';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '984';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Queries the status of the Received Signal Quality (RSQ) of the current channel
Command FM_RSQ_STATUS

@see Si47XX PROGRAMMING GUIDE; AN332; pages 75 and 141

@param INTACK Interrupt Acknowledge. 
       0 = Interrupt status preserved; 
       1 = Clears RSQINT, BLENDINT, SNRHINT, SNRLINT, RSSIHINT, RSSILINT, MULTHINT, MULTLINT.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a4f5abf562ec00767a3b84f74eba5ac4d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getCurrentRSSI';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '987';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1adb3fe55583dafeac7439a303b637d162';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getCurrentSNR';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '988';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
current receive signal strength (0–127 dBμV).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a5663dde3abbab045bc4a535cfe796eff';
        sec-mem-ref-line = '443';
        sec-mem-ref-name = 'si47x_rqs_status::SNR';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a0c9ae82012cdc97c4080b84e37fa1820';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getCurrentRssiDetectLow';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '989';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
current SNR metric (0–127 dB).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1adf11a66236392ca107b5d52a8747f838';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getCurrentRssiDetectHigh';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '990';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RSSI Detect Low.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1aaf3f6a82b0878afbd7a4a18544577552';
        sec-mem-ref-line = '425';
        sec-mem-ref-name = 'si47x_rqs_status::RSSIHINT';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a1296592571c85b89ed59a4ee2324bd52';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getCurrentSnrDetectLow';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '991';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RSSI Detect High.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a6429b6373a1aabce38b2ddde7cdae2a7';
        sec-mem-ref-line = '426';
        sec-mem-ref-name = 'si47x_rqs_status::SNRLINT';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1aec3c71a3252dd6660e5bceebc0d1f988';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getCurrentSnrDetectHigh';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '992';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
SNR Detect Low.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a3ec547d32d35e825bd3cc8dc6aa04371';
        sec-mem-ref-line = '427';
        sec-mem-ref-name = 'si47x_rqs_status::SNRHINT';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a5ce1abf8c9d53c027f6b0870efedda1b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getCurrentValidChannel';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '993';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
SNR Detect High.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ac5a8820c2556ca30ddb6fae020a837dd';
        sec-mem-ref-line = '433';
        sec-mem-ref-name = 'si47x_rqs_status::VALID';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1affe5cee9daf44677802a94f96d893c94';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getCurrentAfcRailIndicator';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '994';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Valid Channel.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a9961f89a4da7115916a5c84b66a80d80';
        sec-mem-ref-line = '434';
        sec-mem-ref-name = 'si47x_rqs_status::AFCRL';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a76e8485292878c1294e5910601f4575f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getCurrentSoftMuteIndicator';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '995';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
AFC Rail Indicator.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1acaafab62dd411dc9b79f9fb96e8c8832';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getCurrentStereoBlend';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '997';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Soft Mute Indicator. Indicates soft mute is engaged.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a127fa3d2f9b7d57169bbef95703fb4c9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getCurrentPilot';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '998';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Indicates amount of stereo blend in % (100 = full stereo, 0 = full mono).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a52b82f9f286b136af201ded7600cc48d';
        sec-mem-ref-line = '440';
        sec-mem-ref-name = 'si47x_rqs_status::PILOT';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a6d521bb5c7ef7811e57c7128cb2106b3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getCurrentMultipath';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '999';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Indicates stereo pilot presence.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1aa537fb8dcc34e82a937bf4d522a7ace0';
        sec-mem-ref-line = '444';
        sec-mem-ref-name = 'si47x_rqs_status::MULT';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a2b3bfeca3b545f5741b1ed70a1dba077';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getCurrentSignedFrequencyOffset';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1000';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Contains the current multipath metric. (0 = no multipath; 100 = full multipath)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ab332136092ea1ced84e916f4fc791679';
        sec-mem-ref-line = '445';
        sec-mem-ref-name = 'si47x_rqs_status::FREQOFF';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ad194a5c915620c6a1b8b3d6d7ed645d9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getCurrentMultipathDetectLow';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1001';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Signed frequency offset (kHz).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ab8511df192966df4c4c30fd5fbd85a8d';
        sec-mem-ref-line = '428';
        sec-mem-ref-name = 'si47x_rqs_status::MULTLINT';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a82d0865cf348deb0c9f81a2f12222fb0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getCurrentMultipathDetectHigh';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1002';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Multipath Detect Low.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a1c7edf40697da61d47979d5c6945a7be';
        sec-mem-ref-line = '429';
        sec-mem-ref-name = 'si47x_rqs_status::MULTHINT';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a16107a2f2e51cce5a7e2b1b303425118';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getCurrentBlendDetectInterrupt';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1003';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Multipath Detect High.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ab26fbd99452daaf18875ff1c3c35d081';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getFirmwarePN';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1011';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Blend Detect Interrupt.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ad03d545e53a7ca2fe072a7b03d60910e';
        sec-mem-ref-line = '904';
        sec-mem-ref-name = 'firmwareInfo';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ac2f451cb7320b66d8e08698dcacd50d0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getFirmwareFWMAJOR';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1012';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP1 - Part Number (HEX)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ad03d545e53a7ca2fe072a7b03d60910e';
        sec-mem-ref-line = '904';
        sec-mem-ref-name = 'firmwareInfo';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ace4719bdaf8df7e8b46c149032146ff9';
        sec-mem-ref-line = '318';
        sec-mem-ref-name = 'si47x_firmware_information::FWMAJOR';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a74b68fcd5718520fc0683977dfc18fc8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getFirmwareFWMINOR';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1013';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP2 - Returns the Firmware Major Revision (ASCII).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ad03d545e53a7ca2fe072a7b03d60910e';
        sec-mem-ref-line = '904';
        sec-mem-ref-name = 'firmwareInfo';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a6ea81f71d748770422b1d0da50225cc9';
        sec-mem-ref-line = '319';
        sec-mem-ref-name = 'si47x_firmware_information::FWMINOR';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a58b99a8d5ec2199cb5f2105675aa7a56';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getFirmwarePATCHH';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1014';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP3 - Returns the Firmware Minor Revision (ASCII).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ad03d545e53a7ca2fe072a7b03d60910e';
        sec-mem-ref-line = '904';
        sec-mem-ref-name = 'firmwareInfo';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ac0d0b792ff45f27e75530c6a1a7395e5';
        sec-mem-ref-line = '320';
        sec-mem-ref-name = 'si47x_firmware_information::PATCHH';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ac10b3cd3875985e2c129fea14e2bc47a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getFirmwarePATCHL';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1015';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP4 -  Returns the Patch ID High byte (HEX).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ad03d545e53a7ca2fe072a7b03d60910e';
        sec-mem-ref-line = '904';
        sec-mem-ref-name = 'firmwareInfo';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1adb11fe484e59e3f8bb77d675d9b03950';
        sec-mem-ref-line = '321';
        sec-mem-ref-name = 'si47x_firmware_information::PATCHL';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ab57870d69969e73265e9cffe2a73d868';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getFirmwareCMPMAJOR';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1016';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP5 - Returns the Patch ID Low byte (HEX).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ad03d545e53a7ca2fe072a7b03d60910e';
        sec-mem-ref-line = '904';
        sec-mem-ref-name = 'firmwareInfo';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ac18795035fa07c597e8a6c3f10745984';
        sec-mem-ref-line = '322';
        sec-mem-ref-name = 'si47x_firmware_information::CMPMAJOR';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a883645d266a612ce07d71fdb2cd81e5f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getFirmwareCMPMINOR';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1017';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP6 -  Returns the Component Major Revision (ASCII).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ad03d545e53a7ca2fe072a7b03d60910e';
        sec-mem-ref-line = '904';
        sec-mem-ref-name = 'firmwareInfo';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a66dcdf7f96777f5ca05fdadfd3c6f764';
        sec-mem-ref-line = '323';
        sec-mem-ref-name = 'si47x_firmware_information::CMPMINOR';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1acd363d9111e4a57cf2e1167634bc1b5f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getFirmwareCHIPREV';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1018';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP7 - Returns the Component Minor Revision (ASCII).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ad03d545e53a7ca2fe072a7b03d60910e';
        sec-mem-ref-line = '904';
        sec-mem-ref-name = 'firmwareInfo';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1aa88ca593c77a71ca1726ab48ebd70ee3';
        sec-mem-ref-line = '324';
        sec-mem-ref-name = 'si47x_firmware_information::CHIPREV';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a3b7543657dfd36da962267bb8692b796';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setVolume';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'volume';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1021';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP8 -  Returns the Chip Revision (ASCII).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets volume level (0  to 63)

@see Si47XX PROGRAMMING GUIDE; AN332; pages 62, 123, 170, 173 and 204

@param uint8_t volume (domain: 0 - 63) 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae351181347f8c512b625d98ef7844961';
        sec-mem-ref-line = '603';
        sec-mem-ref-name = 'sendProperty';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a753390952a1f2c2a98343979f1f3daa0';
        sec-mem-ref-line = '458';
        sec-mem-ref-name = 'setAM';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1acd89e7b8adefcbc4e89f802acb915906';
        sec-mem-ref-line = '478';
        sec-mem-ref-name = 'setFM';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a3e907ddf560a0c8286fa55768701b3da';
        sec-mem-ref-line = '1960';
        sec-mem-ref-name = 'setSSB';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a23d49ab35895b76e0898405fac086c09';
        sec-mem-ref-line = '1187';
        sec-mem-ref-name = 'volumeDown';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a5e3e8cf04ca99c6be2dbe15d72b4efa3';
        sec-mem-ref-line = '1175';
        sec-mem-ref-name = 'volumeUp';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1acf79be50a01fe91abd498e5d42d83317';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getVolume';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1022';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Gets the current volume level.

@see setVolume()

@return volume (domain: 0 - 63) 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a23d49ab35895b76e0898405fac086c09';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'volumeDown';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1023';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Set sound volume level Down   
<br>

@see setVolume() 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a3b7543657dfd36da962267bb8692b796';
        sec-mem-ref-line = '1140';
        sec-mem-ref-name = 'setVolume';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a5e3e8cf04ca99c6be2dbe15d72b4efa3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'volumeUp';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1024';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Set sound volume level Up   
<br>

@see setVolume()
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a3b7543657dfd36da962267bb8692b796';
        sec-mem-ref-line = '1140';
        sec-mem-ref-name = 'setVolume';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a430b86ccfd4d6c89da9202a538e0cfc9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getCurrentVolume';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1025';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a12d4e173d096b1568e4209a63534d4f6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setAudioMute';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'off';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1026';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns the current volume level.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets the audio on or off

@see See Si47XX PROGRAMMING GUIDE; AN332; pages 62, 123, 171 

@param value if true, mute the audio; if false unmute the audio.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae351181347f8c512b625d98ef7844961';
        sec-mem-ref-line = '603';
        sec-mem-ref-name = 'sendProperty';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1aea652d358b4b586b6d5964ceb8eb7c81';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'digitalOutputFormat';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'OSIZE';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'OMONO';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'OMODE';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'OFALL';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1029';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Digital Audio Setup
Configures the digital audio output format. 
Options: DCLK edge, data format, force mono, and sample precision.

@see Si47XX PROGRAMMING GUIDE; AN332; page 195. 

@param uint8_t OSIZE Digital Output Audio Sample Precision (0=16 bits, 1=20 bits, 2=24 bits, 3=8bits).
@param uint8_t OMONO Digital Output Mono Mode (0=Use mono/stereo blend ).
@param uint8_t OMODE Digital Output Mode (0=I2S, 6 = Left-justified, 8 = MSB at second DCLK after DFS pulse, 12 = MSB at first DCLK after DFS pulse).
@param uint8_t OFALL Digital Output DCLK Edge (0 = use DCLK rising edge, 1 = use DCLK falling edge)
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a43a50ac17d929c197fae422f1fd648e3';
        sec-mem-ref-line = '808';
        sec-mem-ref-name = 'si4735_digital_output_format::OFALL';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ae2f67694a90085fc652649e37b3984b1';
        sec-mem-ref-line = '807';
        sec-mem-ref-name = 'si4735_digital_output_format::OMODE';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a810bfc21a334fbf3bf53b8dd934bb603';
        sec-mem-ref-line = '806';
        sec-mem-ref-name = 'si4735_digital_output_format::OMONO';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae351181347f8c512b625d98ef7844961';
        sec-mem-ref-line = '603';
        sec-mem-ref-name = 'sendProperty';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a1a404ca11fb32b457be2d7cfe484dd03';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'digitalOutputSampleRate';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'DOSR';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1030';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Enables digital audio output and configures digital audio output sample rate in samples per second (sps).

@see Si47XX PROGRAMMING GUIDE; AN332; page 196. 

@param uint16_t DOSR Digital Output Sample Rate(32–48 ksps .0 to disable digital audio output).
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae351181347f8c512b625d98ef7844961';
        sec-mem-ref-line = '603';
        sec-mem-ref-name = 'sendProperty';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a753390952a1f2c2a98343979f1f3daa0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setAM';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1033';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets the radio to AM function. It means: LW MW and SW.

@see Si47XX PROGRAMMING GUIDE; AN332; page 129.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a650490ab792c1853c97f600661ecdaa1';
        sec-mem-ref-line = '898';
        sec-mem-ref-name = 'currentAvcAmMaxGain';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a157e4ae8cd53396973584aa10888cd47';
        sec-mem-ref-line = '896';
        sec-mem-ref-name = 'lastMode';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aa554b3390fb6c5a4d6661b96afae73ae';
        sec-mem-ref-line = '236';
        sec-mem-ref-name = 'powerDown';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a3e228da65641f4dcf4253262e19bde9b';
        sec-mem-ref-line = '206';
        sec-mem-ref-name = 'radioPowerUp';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a98d12da4b801493a350ecf770f4f2d8b';
        sec-mem-ref-line = '956';
        sec-mem-ref-name = 'setAvcAmMaxGain';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a8bc001cb28dc8fbd88ba0fa7024eca39';
        sec-mem-ref-line = '163';
        sec-mem-ref-name = 'setPowerUp';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a3b7543657dfd36da962267bb8692b796';
        sec-mem-ref-line = '1140';
        sec-mem-ref-name = 'setVolume';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a43c5ea36995a3897820e0170d94c81f4';
        sec-mem-ref-line = '499';
        sec-mem-ref-name = 'setAM';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1acd89e7b8adefcbc4e89f802acb915906';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFM';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1034';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets the radio to FM function

@see Si47XX PROGRAMMING GUIDE; AN332; page 64. 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae4683e9a9fc7a633305b18dae54fbd83';
        sec-mem-ref-line = '749';
        sec-mem-ref-name = 'disableFmDebug';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a157e4ae8cd53396973584aa10888cd47';
        sec-mem-ref-line = '896';
        sec-mem-ref-name = 'lastMode';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aa554b3390fb6c5a4d6661b96afae73ae';
        sec-mem-ref-line = '236';
        sec-mem-ref-name = 'powerDown';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a3e228da65641f4dcf4253262e19bde9b';
        sec-mem-ref-line = '206';
        sec-mem-ref-name = 'radioPowerUp';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a8bc001cb28dc8fbd88ba0fa7024eca39';
        sec-mem-ref-line = '163';
        sec-mem-ref-name = 'setPowerUp';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a3b7543657dfd36da962267bb8692b796';
        sec-mem-ref-line = '1140';
        sec-mem-ref-name = 'setVolume';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a673bc4b17d564bb6e7f3e9a61d35fbb3';
        sec-mem-ref-line = '524';
        sec-mem-ref-name = 'setFM';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a43c5ea36995a3897820e0170d94c81f4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setAM';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'fromFreq';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'toFreq';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'intialFreq';
        sec-mem-param-defname = 'initialFreq';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'step';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1035';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets the radio to AM (LW/MW/SW) function. 

@see setAM()

@param fromFreq minimum frequency for the band
@param toFreq maximum frequency for the band
@param initialFreq initial frequency 
@param step step used to go to the next channel 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1aa3d41ad3fdb9d821a721a8acfaf47670';
        sec-mem-ref-line = '891';
        sec-mem-ref-name = 'currentMaximumFrequency';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a4663c1c92d980472556368944cb2fc68';
        sec-mem-ref-line = '890';
        sec-mem-ref-name = 'currentMinimumFrequency';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ad72759f246cceb147bf031b72173b0ca';
        sec-mem-ref-line = '894';
        sec-mem-ref-name = 'currentStep';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a9da4f3df9e5e6b0448eff15e12f690dd';
        sec-mem-ref-line = '892';
        sec-mem-ref-name = 'currentWorkFrequency';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a753390952a1f2c2a98343979f1f3daa0';
        sec-mem-ref-line = '458';
        sec-mem-ref-name = 'setAM';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a63d205f2d3169ba877a2bd2ee28d224f';
        sec-mem-ref-line = '376';
        sec-mem-ref-name = 'setFrequency';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a673bc4b17d564bb6e7f3e9a61d35fbb3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFM';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'fromFreq';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'toFreq';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'initialFreq';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'step';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1036';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets the radio to FM function. 

@see setFM()

@param fromFreq minimum frequency for the band
@param toFreq maximum frequency for the band
@param initialFreq initial frequency (default frequency)
@param step step used to go to the next channel   
<br>
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1aa3d41ad3fdb9d821a721a8acfaf47670';
        sec-mem-ref-line = '891';
        sec-mem-ref-name = 'currentMaximumFrequency';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a4663c1c92d980472556368944cb2fc68';
        sec-mem-ref-line = '890';
        sec-mem-ref-name = 'currentMinimumFrequency';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ad72759f246cceb147bf031b72173b0ca';
        sec-mem-ref-line = '894';
        sec-mem-ref-name = 'currentStep';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a9da4f3df9e5e6b0448eff15e12f690dd';
        sec-mem-ref-line = '892';
        sec-mem-ref-name = 'currentWorkFrequency';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1acd89e7b8adefcbc4e89f802acb915906';
        sec-mem-ref-line = '478';
        sec-mem-ref-name = 'setFM';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a63d205f2d3169ba877a2bd2ee28d224f';
        sec-mem-ref-line = '376';
        sec-mem-ref-name = 'setFrequency';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a8755743a36d2d4662c8db918d02ee4e1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setBandwidth';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'AMCHFLT';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'AMPLFLT';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1038';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Selects the bandwidth of the channel filter for AM reception. The choices are 6, 4, 3, 2, 2.5, 1.8, or 1 (kHz). 
The default bandwidth is 2 kHz.
Works only in AM / SSB (LW/MW/SW) 

@see Si47XX PROGRAMMING GUIDE; AN332; pages 125, 151, 277, 181.

@param AMCHFLT the choices are:   0 = 6 kHz Bandwidth                    
<br>
                                  1 = 4 kHz Bandwidth
                                  2 = 3 kHz Bandwidth
                                  3 = 2 kHz Bandwidth
                                  4 = 1 kHz Bandwidth
                                  5 = 1.8 kHz Bandwidth
                                  6 = 2.5 kHz Bandwidth, gradual roll off
                                  7–15 = Reserved (Do not use).
@param AMPLFLT Enables the AM Power Line Noise Rejection Filter.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1acc3d3a411d181e08846219661dbde1c4';
        sec-mem-ref-line = '888';
        sec-mem-ref-name = 'currentTune';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7b45c1b22c3c1a3f2326bee913d1e1e0';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'waitToSend';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a794f6fe7987e146a0135b8e6fabec55c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFrequencyStep';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'step';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1040';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets the current step value. 

ATTENTION: This function does not check the limits of the current band. 
           Please, don't take a step bigger than your legs.

@param step if you are using FM, 10 means 100KHz. If you are using AM 10 means 10KHz
            For AM, 1 (1KHz) to 1000 (1MHz) are valid values.
            For FM 5 (50KHz) and 10 (100KHz) are valid values.  
<br>
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ad72759f246cceb147bf031b72173b0ca';
        sec-mem-ref-line = '894';
        sec-mem-ref-name = 'currentStep';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a8c54bfc1fcf1dd989e697cc9b7094f59';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getTuneFrequencyFast';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1042';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a51d816112d974f10306d9d001667395a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setTuneFrequencyFast';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'FAST';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1043';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns the FAST tuning status.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a8253ae2f3c87a6943776f8a63a691ca3';
        sec-mem-ref-line = '901';
        sec-mem-ref-name = 'currentFrequencyParams';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a667fead0c7b2658c2b932370ad4e4f88';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getTuneFrequencyFreeze';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1044';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
FAST Tuning.  If set, executes fast and invalidated tune. The tune status will not be accurate.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a8253ae2f3c87a6943776f8a63a691ca3';
        sec-mem-ref-line = '901';
        sec-mem-ref-name = 'currentFrequencyParams';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ad419130c085839f718f6530e18943c23';
        sec-mem-ref-line = '227';
        sec-mem-ref-name = 'si47x_set_frequency::FREEZE';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1aee22a5ce06d4948fad2365a7b62fbd8d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setTuneFrequencyFreeze';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'FREEZE';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1045';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns the FREEZE status.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a8253ae2f3c87a6943776f8a63a691ca3';
        sec-mem-ref-line = '901';
        sec-mem-ref-name = 'currentFrequencyParams';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ad419130c085839f718f6530e18943c23';
        sec-mem-ref-line = '227';
        sec-mem-ref-name = 'si47x_set_frequency::FREEZE';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1aaceadaaf0835e3db124d1b36f2aebd3c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setTuneFrequencyAntennaCapacitor';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'capacitor';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1046';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Only FM. Freeze Metrics During Alternate Frequency Jump.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Selects the tuning capacitor value.

For FM, Antenna Tuning Capacitor is valid only when using TXO/LPI pin as the antenna input.

@see Si47XX PROGRAMMING GUIDE; AN332; pages 71 and 136

@param capacitor If zero, the tuning capacitor value is selected automatically. 
                 If the value is set to anything other than 0:
                 AM - the tuning capacitance is manually set as 95 fF x ANTCAP + 7 pF. 
                      ANTCAP manual range is 1–6143;
                 FM - the valid range is 0 to 191.    
<br>
                 According to Silicon Labs, automatic capacitor tuning is recommended (value 0). 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a26952301dd2779d1976f92c2e521c476';
        sec-mem-ref-line = '211';
        sec-mem-ref-name = 'si47x_antenna_capacitor::ANTCAPH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a9aee8ee0d04a6a7e732210fdea987d2c';
        sec-mem-ref-line = '232';
        sec-mem-ref-name = 'si47x_set_frequency::ANTCAPH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a712fdd01147dcef829431bc2fc94a012';
        sec-mem-ref-line = '233';
        sec-mem-ref-name = 'si47x_set_frequency::ANTCAPL';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a8253ae2f3c87a6943776f8a63a691ca3';
        sec-mem-ref-line = '901';
        sec-mem-ref-name = 'currentFrequencyParams';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1acc3d3a411d181e08846219661dbde1c4';
        sec-mem-ref-line = '888';
        sec-mem-ref-name = 'currentTune';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a0f58c9f3ce774e07a2acc9ba4e968c85';
        sec-mem-ref-line = '228';
        sec-mem-ref-name = 'si47x_set_frequency::DUMMY1';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ad419130c085839f718f6530e18943c23';
        sec-mem-ref-line = '227';
        sec-mem-ref-name = 'si47x_set_frequency::FREEZE';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ac0fcfd64dcf30b11d4dc219d9f7fc5d9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'frequencyUp';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1048';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Increments the current frequency on current band/function by using the current step.

@see setFrequencyStep()
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1aa3d41ad3fdb9d821a721a8acfaf47670';
        sec-mem-ref-line = '891';
        sec-mem-ref-name = 'currentMaximumFrequency';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a4663c1c92d980472556368944cb2fc68';
        sec-mem-ref-line = '890';
        sec-mem-ref-name = 'currentMinimumFrequency';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ad72759f246cceb147bf031b72173b0ca';
        sec-mem-ref-line = '894';
        sec-mem-ref-name = 'currentStep';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a9da4f3df9e5e6b0448eff15e12f690dd';
        sec-mem-ref-line = '892';
        sec-mem-ref-name = 'currentWorkFrequency';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a63d205f2d3169ba877a2bd2ee28d224f';
        sec-mem-ref-line = '376';
        sec-mem-ref-name = 'setFrequency';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a93fff524a6f900ac91eb1222ce73f9ba';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'frequencyDown';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1049';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Decrements the current frequency on current band/function by using the current step.

@see setFrequencyStep
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1aa3d41ad3fdb9d821a721a8acfaf47670';
        sec-mem-ref-line = '891';
        sec-mem-ref-name = 'currentMaximumFrequency';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a4663c1c92d980472556368944cb2fc68';
        sec-mem-ref-line = '890';
        sec-mem-ref-name = 'currentMinimumFrequency';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ad72759f246cceb147bf031b72173b0ca';
        sec-mem-ref-line = '894';
        sec-mem-ref-name = 'currentStep';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a9da4f3df9e5e6b0448eff15e12f690dd';
        sec-mem-ref-line = '892';
        sec-mem-ref-name = 'currentWorkFrequency';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a63d205f2d3169ba877a2bd2ee28d224f';
        sec-mem-ref-line = '376';
        sec-mem-ref-name = 'setFrequency';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ae7ca2ffa6ad68ca69e4f35a3c40bbc3c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'isCurrentTuneFM';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1050';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returns true if the current function is FM (FM_TUNE_FREQ).

@return true if the current function is FM (FM_TUNE_FREQ).
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1acc3d3a411d181e08846219661dbde1c4';
        sec-mem-ref-line = '888';
        sec-mem-ref-name = 'currentTune';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a2fbc7e2187a7c645879623100dbc8502';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getFirmware';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1051';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Gets firmware information 

@see Si47XX PROGRAMMING GUIDE; AN332; pages 66, 131
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ad03d545e53a7ca2fe072a7b03d60910e';
        sec-mem-ref-line = '904';
        sec-mem-ref-name = 'firmwareInfo';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7b45c1b22c3c1a3f2326bee913d1e1e0';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'waitToSend';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a39f0e95a5efe5bd9add926c6f538528a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFunction';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'FUNC';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1053';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a3280b98b8331f00b4d0158ef1b076533';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'seekStation';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'SEEKUP';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'WRAP';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1054';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Look for a station 

@see Si47XX PROGRAMMING GUIDE; AN332; pages 55, 72, 125 and 137

@param SEEKUP Seek Up/Down. Determines the direction of the search, either UP = 1, or DOWN = 0. 
@param Wrap/Halt. Determines whether the seek should Wrap = 1, or Halt = 0 when it hits the band limit.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1acc3d3a411d181e08846219661dbde1c4';
        sec-mem-ref-line = '888';
        sec-mem-ref-name = 'currentTune';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1acd509f67721224c4b0ad0ebdfad56dad';
        sec-mem-ref-line = '250';
        sec-mem-ref-name = 'si47x_seek::SEEKUP';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7b45c1b22c3c1a3f2326bee913d1e1e0';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'waitToSend';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a1eeaa09670cdbdc7ddd724c940d2506b';
        sec-mem-ref-line = '1078';
        sec-mem-ref-name = 'seekStationDown';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aad5211e3fff28141473442f59008e415';
        sec-mem-ref-line = '1066';
        sec-mem-ref-name = 'seekStationUp';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1aad5211e3fff28141473442f59008e415';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'seekStationUp';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1055';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Search for the next station 

@see seekStation(uint8_t SEEKUP, uint8_t WRAP)
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7e88bb573604d465536c13554d5c61f8';
        sec-mem-ref-line = '809';
        sec-mem-ref-name = 'getFrequency';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a3280b98b8331f00b4d0158ef1b076533';
        sec-mem-ref-line = '1033';
        sec-mem-ref-name = 'seekStation';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a1eeaa09670cdbdc7ddd724c940d2506b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'seekStationDown';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1056';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Search the previous station

@see seekStation(uint8_t SEEKUP, uint8_t WRAP)
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7e88bb573604d465536c13554d5c61f8';
        sec-mem-ref-line = '809';
        sec-mem-ref-name = 'getFrequency';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a3280b98b8331f00b4d0158ef1b076533';
        sec-mem-ref-line = '1033';
        sec-mem-ref-name = 'seekStation';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a6b901d5cd729364dbda6e5b811dc9ec2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setSeekAmLimits';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'bottom';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'top';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1057';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets the bottom frequency and top frequency of the AM band for seek. Default is 520 to 1710.

@see Si47XX PROGRAMMING GUIDE; AN332; pages 127, 161, and 162

@param uint16_t bottom - the bottom of the AM band for seek
@param uint16_t    top - the top of the AM band for seek
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae351181347f8c512b625d98ef7844961';
        sec-mem-ref-line = '603';
        sec-mem-ref-name = 'sendProperty';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a6f8218c0bbdcb75ea54bc8af2a60dcc6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setSeekAmSpacing';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'spacing';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1058';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Selects frequency spacingfor AM seek. Default is 10 kHz spacing.

@see Si47XX PROGRAMMING GUIDE; AN332; pages 163, 229 and 283

@param uint16_t spacing - step in KHz
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae351181347f8c512b625d98ef7844961';
        sec-mem-ref-line = '603';
        sec-mem-ref-name = 'sendProperty';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1aeef76371500acdbdc17ca8dc980e1fff';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setSeekSrnThreshold';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1059';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets the SNR threshold for a valid AM Seek/Tune. 
If the value is zero then SNR threshold is not considered when doing a seek. Default value is 5 dB.

@see Si47XX PROGRAMMING GUIDE; AN332; page 127
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae351181347f8c512b625d98ef7844961';
        sec-mem-ref-line = '603';
        sec-mem-ref-name = 'sendProperty';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a13397b273f7ab6fa7d5f48f116edac9b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setSeekRssiThreshold';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1060';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets the RSSI threshold for a valid AM Seek/Tune. 
If the value is zero then RSSI threshold is not considered when doing a seek. Default value is 25 dBμV.

@see Si47XX PROGRAMMING GUIDE; AN332; page 127
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae351181347f8c512b625d98ef7844961';
        sec-mem-ref-line = '603';
        sec-mem-ref-name = 'sendProperty';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ac598865516ca09db7dbfa6a84da7f179';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFmBlendStereoThreshold';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'parameter';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1062';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets RSSI threshold for stereo blend (Full stereo above threshold, blend below threshold). 
To force stereo, set this to 0. To force mono, set this to 127.

@see Si47XX PROGRAMMING GUIDE; AN332; page 90. 

@param parameter  valid values: 0 to 127
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae351181347f8c512b625d98ef7844961';
        sec-mem-ref-line = '603';
        sec-mem-ref-name = 'sendProperty';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1adf4c5ec4473fd8486dd2ec7a19a10d24';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFmBlendMonoThreshold';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'parameter';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1063';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets RSSI threshold for mono blend (Full mono below threshold, blend above threshold). 
To force stereo set this to 0. To force mono set this to 127. Default value is 30 dBμV.

@see Si47XX PROGRAMMING GUIDE; AN332; page 56.

@param parameter valid values: 0 to 127
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae351181347f8c512b625d98ef7844961';
        sec-mem-ref-line = '603';
        sec-mem-ref-name = 'sendProperty';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ab063630466dccea3becc11d60d122904';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFmBlendRssiStereoThreshold';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'parameter';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1064';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets RSSI threshold for stereo blend. (Full stereo above threshold, blend below threshold.) 
To force stereo, set this to 0. To force mono, set this to 127. Default value is 49 dBμV.
@see Si47XX PROGRAMMING GUIDE; AN332; page 59. 

@param parameter valid values: 0 to 127
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae351181347f8c512b625d98ef7844961';
        sec-mem-ref-line = '603';
        sec-mem-ref-name = 'sendProperty';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a1b134a94138b3bf993a5d3eb5f8ed5c6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFmBLendRssiMonoThreshold';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'parameter';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1065';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets RSSI threshold for mono blend (Full mono below threshold, blend above threshold). 
To force stereo, set this to 0. To force mono, set this to 127. Default value is 30 dBμV.

@see Si47XX PROGRAMMING GUIDE; AN332; page 59.  
<br>

@param parameter valid values: 0 to 127
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae351181347f8c512b625d98ef7844961';
        sec-mem-ref-line = '603';
        sec-mem-ref-name = 'sendProperty';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a1d1a5eed976370d99827ba55d08b9293';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFmBlendSnrStereoThreshold';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'parameter';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1066';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets SNR threshold for stereo blend (Full stereo above threshold, blend below threshold). 
To force stereo, set this to 0. To force mono, set this to 127. Default value is 27 dB.

@see Si47XX PROGRAMMING GUIDE; AN332; page 59.  
<br>

@param parameter valid values: 0 to 127
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae351181347f8c512b625d98ef7844961';
        sec-mem-ref-line = '603';
        sec-mem-ref-name = 'sendProperty';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ae2c30536e59f6691d990a2b9cf21f07e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFmBLendSnrMonoThreshold';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'parameter';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1067';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets SNR threshold for mono blend (Full mono below threshold, blend above threshold). 
To force stereo, set this to 0. To force mono, set this to 127. Default value is 14 dB.

@see Si47XX PROGRAMMING GUIDE; AN332; page 59. 

@param parameter valid values: 0 to 127 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae351181347f8c512b625d98ef7844961';
        sec-mem-ref-line = '603';
        sec-mem-ref-name = 'sendProperty';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a0ed776a193fb2fcff783d4a82ff714e5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFmBlendMultiPathStereoThreshold';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'parameter';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1068';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets multipath threshold for stereo blend (Full stereo below threshold, blend above threshold). 
To force stereo, set this to 100. To force mono, set this to 0. Default value is 20.

@see Si47XX PROGRAMMING GUIDE; AN332; page 60.

@param parameter valid values: 0 to 100 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae351181347f8c512b625d98ef7844961';
        sec-mem-ref-line = '603';
        sec-mem-ref-name = 'sendProperty';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1acc9fd27b38f49f167facfcc4f6216c5e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFmBlendMultiPathMonoThreshold';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'parameter';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1069';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets Multipath threshold for mono blend (Full mono above threshold, blend below threshold). 
To force stereo, set to 100. To force mono, set to 0. The default is 60.

@see Si47XX PROGRAMMING GUIDE; AN332; page 60.

@param parameter valid values: 0 to 100 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae351181347f8c512b625d98ef7844961';
        sec-mem-ref-line = '603';
        sec-mem-ref-name = 'sendProperty';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a52c7b7b1f0ed9121b0e64516b2bd2a55';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFmStereoOn';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1070';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Turn Off Stereo operation.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a59ce1008944ff9a51b6c5baeb3a3e2cb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFmStereoOff';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1071';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Turn Off Stereo operation.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1affdba9ca9fb9bf5bb671ac3d448a7e89';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RdsInit';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1074';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
RDS implementation 
Starts the control variables for RDS.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1adede134b96fd5650b87673ce413babb2';
        sec-mem-ref-line = '1232';
        sec-mem-ref-name = 'clearRdsBuffer0A';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ac65c552004f5e5e646638e37a5a68213';
        sec-mem-ref-line = '1213';
        sec-mem-ref-name = 'clearRdsBuffer2A';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aed0988165057aa2880f41b88ac236cd7';
        sec-mem-ref-line = '1223';
        sec-mem-ref-name = 'clearRdsBuffer2B';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1abd965c0e49493bc2c7c37547d36dcc96';
        sec-mem-ref-line = '884';
        sec-mem-ref-name = 'lastTextFlagAB';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a11477d1eb13efb348395a4984b67f392';
        sec-mem-ref-line = '880';
        sec-mem-ref-name = 'rdsTextAdress0A';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a1c7ec3559a78c5ef1bda49cb0abdf1de';
        sec-mem-ref-line = '878';
        sec-mem-ref-name = 'rdsTextAdress2A';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1adecc2478d73cd7d18e1f88fd70d1488d';
        sec-mem-ref-line = '879';
        sec-mem-ref-name = 'rdsTextAdress2B';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ad9718a85c79a311c26997bbda20f2351';
        sec-mem-ref-line = '1265';
        sec-mem-ref-name = 'setRdsConfig';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a530e64d00d95b4ceb13ce33aa74c63cb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setRdsIntSource';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'RDSNEWBLOCKB';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'RDSNEWBLOCKA';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'RDSSYNCFOUND';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'RDSSYNCLOST';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'RDSRECV';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1075';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Configures interrupt related to RDS

Use this method if want to use interrupt

@see Si47XX PROGRAMMING GUIDE; AN332; page 103

@param RDSRECV If set, generate RDSINT when RDS FIFO has at least FM_RDS_INT_FIFO_COUNT entries.
@param RDSSYNCLOST If set, generate RDSINT when RDS loses synchronization.
@param RDSSYNCFOUND set, generate RDSINT when RDS gains synchronization.
@param RDSNEWBLOCKA If set, generate an interrupt when Block A data is found or subsequently changed
@param RDSNEWBLOCKB If set, generate an interrupt when Block B data is found or subsequently changed
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1acc3d3a411d181e08846219661dbde1c4';
        sec-mem-ref-line = '888';
        sec-mem-ref-name = 'currentTune';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ac5de9b6d946471e6ff768bd87988125b';
        sec-mem-ref-line = '537';
        sec-mem-ref-name = 'si47x_rds_int_source::DUMMY1';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a1244e55bf5f7da541ebc7ef17880ffaa';
        sec-mem-ref-line = '540';
        sec-mem-ref-name = 'si47x_rds_int_source::DUMMY2';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a6363c0e46e99336e8381bc0cc4ccacf7';
        sec-mem-ref-line = '538';
        sec-mem-ref-name = 'si47x_rds_int_source::RDSNEWBLOCKA';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1abe78350d5e3cb85a60859f52ce279efd';
        sec-mem-ref-line = '539';
        sec-mem-ref-name = 'si47x_rds_int_source::RDSNEWBLOCKB';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1adb4e16cc0024b4c0338d163a83ec43ec';
        sec-mem-ref-line = '536';
        sec-mem-ref-name = 'si47x_rds_int_source::RDSSYNCFOUND';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a0bb106ab53cfba94833fefd596a5d1cf';
        sec-mem-ref-line = '535';
        sec-mem-ref-name = 'si47x_rds_int_source::RDSSYNCLOST';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7b45c1b22c3c1a3f2326bee913d1e1e0';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'waitToSend';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a350a2033671a7620d4b9290a2347e185';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsStatus';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'INTACK';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'MTFIFO';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'STATUSONLY';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1076';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Gets the RDS status. Store the status in currentRdsStatus member. 
RDS COMMAND FM_RDS_STATUS

@see Si47XX PROGRAMMING GUIDE; AN332; pages 55 and 77

@param INTACK Interrupt Acknowledge; 0 = RDSINT status preserved. 1 = Clears RDSINT.
@param MTFIFO 0 = If FIFO not empty, read and remove oldest FIFO entry; 1 = Clear RDS Receive FIFO.
@param STATUSONLY Determines if data should be removed from the RDS FIFO.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1adede134b96fd5650b87673ce413babb2';
        sec-mem-ref-line = '1232';
        sec-mem-ref-name = 'clearRdsBuffer0A';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ac65c552004f5e5e646638e37a5a68213';
        sec-mem-ref-line = '1213';
        sec-mem-ref-name = 'clearRdsBuffer2A';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aed0988165057aa2880f41b88ac236cd7';
        sec-mem-ref-line = '1223';
        sec-mem-ref-name = 'clearRdsBuffer2B';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a42d5c6991d90ea1c8ae35b74f8bccc48';
        sec-mem-ref-line = '905';
        sec-mem-ref-name = 'currentRdsStatus';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1acc3d3a411d181e08846219661dbde1c4';
        sec-mem-ref-line = '888';
        sec-mem-ref-name = 'currentTune';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a9da4f3df9e5e6b0448eff15e12f690dd';
        sec-mem-ref-line = '892';
        sec-mem-ref-name = 'currentWorkFrequency';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7b45c1b22c3c1a3f2326bee913d1e1e0';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'waitToSend';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a94cce3834f85fc127e8c2dab3a03e875';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsStatus';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1077';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Gets RDS Status.
Same result of calling getRdsStatus(0,0,0);

@see SI4735::getRdsStatus(uint8_t INTACK, uint8_t MTFIFO, uint8_t STATUSONLY)

Please, call getRdsStatus(uint8_t INTACK, uint8_t MTFIFO, uint8_t STATUSONLY) instead getRdsStatus() 
if you want other behaviour
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a6e8405ea5846fab586080a7be696178e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsReceived';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1078';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ac283a8a89cc885c2740c65a7128ff7ef';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsSyncLost';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1079';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1 = FIFO filled to minimum number of groups
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a42d5c6991d90ea1c8ae35b74f8bccc48';
        sec-mem-ref-line = '905';
        sec-mem-ref-name = 'currentRdsStatus';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a2fbbcc16519fdfb6ef16620f68f1f2e6';
        sec-mem-ref-line = '489';
        sec-mem-ref-name = 'si47x_rds_status::RDSSYNCLOST';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a78e906f12771490771c624be1777784d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsSyncFound';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1080';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1 = Lost RDS synchronization
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a42d5c6991d90ea1c8ae35b74f8bccc48';
        sec-mem-ref-line = '905';
        sec-mem-ref-name = 'currentRdsStatus';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a724e174d22e1b23c09ebfb49cbf75c8c';
        sec-mem-ref-line = '490';
        sec-mem-ref-name = 'si47x_rds_status::RDSSYNCFOUND';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a561a052a8c737302368274c774d8c129';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsNewBlockA';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1081';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1 = Found RDS synchronization
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a42d5c6991d90ea1c8ae35b74f8bccc48';
        sec-mem-ref-line = '905';
        sec-mem-ref-name = 'currentRdsStatus';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1af1e67b201799a9e8d7208a32a65656b5';
        sec-mem-ref-line = '1412';
        sec-mem-ref-name = 'getRdsPI';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1aff740d85cc04c257f53c7e910bd45fcf';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsNewBlockB';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1082';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1 = Valid Block A data has been received.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a42d5c6991d90ea1c8ae35b74f8bccc48';
        sec-mem-ref-line = '905';
        sec-mem-ref-name = 'currentRdsStatus';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a72d5e07659bcf0026efc05f8d434ea1d';
        sec-mem-ref-line = '493';
        sec-mem-ref-name = 'si47x_rds_status::RDSNEWBLOCKB';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a6e899b37cbc3dcd0ab969724e4008f0f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsSync';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1083';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1 = Valid Block B data has been received.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a42d5c6991d90ea1c8ae35b74f8bccc48';
        sec-mem-ref-line = '905';
        sec-mem-ref-name = 'currentRdsStatus';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a8db437efc42a81466d8daf4dcc35c50c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getGroupLost';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1084';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1 = RDS currently synchronized.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a42d5c6991d90ea1c8ae35b74f8bccc48';
        sec-mem-ref-line = '905';
        sec-mem-ref-name = 'currentRdsStatus';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a819c370ff03c52a527fbc85f9877f526';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getNumRdsFifoUsed';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1085';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1 = One or more RDS groups discarded due to FIFO overrun.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a42d5c6991d90ea1c8ae35b74f8bccc48';
        sec-mem-ref-line = '905';
        sec-mem-ref-name = 'currentRdsStatus';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ad9718a85c79a311c26997bbda20f2351';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setRdsConfig';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'RDSEN';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'BLETHA';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'BLETHB';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'BLETHC';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'BLETHD';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1087';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP3 - RDS FIFO Used; Number of groups remaining in the RDS FIFO (0 if empty).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets RDS property  (FM_RDS_CONFIG)
Configures RDS settings to enable RDS processing (RDSEN) and set RDS block error thresholds. 
When a RDS Group is received, all block errors must be less than or equal the associated block 
error threshold for the group to be stored in the RDS FIFO. 

@see Si47XX PROGRAMMING GUIDE; AN332; page 104

MPORTANT: 
All block errors must be less than or equal the associated block error threshold 
for the group to be stored in the RDS FIFO. 
0 = No errors.
1 = 1–2 bit errors detected and corrected. 
2 = 3–5 bit errors detected and corrected. 
3 = Uncorrectable.
Recommended Block Error Threshold options:
 2,2,2,2 = No group stored if any errors are uncorrected.
 3,3,3,3 = Group stored regardless of errors.
 0,0,0,0 = No group stored containing corrected or uncorrected errors.
 3,2,3,3 = Group stored with corrected errors on B, regardless of errors on A, C, or D.

@param uint8_t RDSEN RDS Processing Enable; 1 = RDS processing enabled.
@param uint8_t BLETHA Block Error Threshold BLOCKA.   
<br>
@param uint8_t BLETHB Block Error Threshold BLOCKB.  
<br>
@param uint8_t BLETHC Block Error Threshold BLOCKC.  
<br>
@param uint8_t BLETHD Block Error Threshold BLOCKD. 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a985f772fda4648f338757b919de189f0';
        sec-mem-ref-line = '570';
        sec-mem-ref-name = 'si47x_rds_config::BLETHA';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a8fde60b58e168d978e259f3899ce5e0b';
        sec-mem-ref-line = '569';
        sec-mem-ref-name = 'si47x_rds_config::BLETHB';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a2a243d520165c64e15fbad8b7ac2f5d9';
        sec-mem-ref-line = '568';
        sec-mem-ref-name = 'si47x_rds_config::BLETHC';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a849a3b2c92974fdfb9542db006e0976d';
        sec-mem-ref-line = '566';
        sec-mem-ref-name = 'si47x_rds_config::DUMMY1';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1affdba9ca9fb9bf5bb671ac3d448a7e89';
        sec-mem-ref-line = '1201';
        sec-mem-ref-name = 'RdsInit';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7b45c1b22c3c1a3f2326bee913d1e1e0';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'waitToSend';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1af1e67b201799a9e8d7208a32a65656b5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsPI';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1088';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returns the programa type. 
Read the Block A content

@see Si47XX PROGRAMMING GUIDE; AN332; pages 77 and 78

@return BLOCKAL
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a307a99811323be2c6e64bf2473aaa8f2';
        sec-mem-ref-line = '503';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKAL';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a42d5c6991d90ea1c8ae35b74f8bccc48';
        sec-mem-ref-line = '905';
        sec-mem-ref-name = 'currentRdsStatus';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a561a052a8c737302368274c774d8c129';
        sec-mem-ref-line = '1081';
        sec-mem-ref-name = 'getRdsNewBlockA';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1aa35366e5cded7b864f7268a7e4a8dbe9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsGroupType';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1089';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returns the Group Type (extracted from the Block B) 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1afc7f4e06b12a6d9b8304a691deb4fc8e';
        sec-mem-ref-line = '504';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKBH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ac81b652130f0e91b2af8184e303b5d54';
        sec-mem-ref-line = '505';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKBL';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a42d5c6991d90ea1c8ae35b74f8bccc48';
        sec-mem-ref-line = '905';
        sec-mem-ref-name = 'currentRdsStatus';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a12d917629b78fffebac5ecf8f2936921';
        sec-mem-ref-line = '1594';
        sec-mem-ref-name = 'getRdsText0A';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae54d0f5562ca7615c3b90bee00c29ab4';
        sec-mem-ref-line = '1625';
        sec-mem-ref-name = 'getRdsText2A';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a806d5cfbbeb6ca1299ce20b1220fdb18';
        sec-mem-ref-line = '1657';
        sec-mem-ref-name = 'getRdsText2B';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aa8436bb156f3ac8321c65941be42fdba';
        sec-mem-ref-line = '1688';
        sec-mem-ref-name = 'getRdsTime';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a05f76a0a0ebda813483f1df24e890904';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsFlagAB';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1090';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returns the current Text Flag A/B  
<br>

@return uint8_t 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1afc7f4e06b12a6d9b8304a691deb4fc8e';
        sec-mem-ref-line = '504';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKBH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ac81b652130f0e91b2af8184e303b5d54';
        sec-mem-ref-line = '505';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKBL';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a42d5c6991d90ea1c8ae35b74f8bccc48';
        sec-mem-ref-line = '905';
        sec-mem-ref-name = 'currentRdsStatus';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1af9b6cb614d1b01b11bb23c19e6deb8b9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsVersionCode';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1091';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Gets the version code (extracted from the Block B)

@returns  0=A or 1=B
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1afc7f4e06b12a6d9b8304a691deb4fc8e';
        sec-mem-ref-line = '504';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKBH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ac81b652130f0e91b2af8184e303b5d54';
        sec-mem-ref-line = '505';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKBL';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a42d5c6991d90ea1c8ae35b74f8bccc48';
        sec-mem-ref-line = '905';
        sec-mem-ref-name = 'currentRdsStatus';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ac28fa3818d4f900c4f4ba6be10c1405b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsProgramType';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1092';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returns the Program Type (extracted from the Block B)

@see https://en.wikipedia.org/wiki/Radio_Data_System

@return program type (an integer betwenn 0 and 31)
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1afc7f4e06b12a6d9b8304a691deb4fc8e';
        sec-mem-ref-line = '504';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKBH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ac81b652130f0e91b2af8184e303b5d54';
        sec-mem-ref-line = '505';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKBL';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a42d5c6991d90ea1c8ae35b74f8bccc48';
        sec-mem-ref-line = '905';
        sec-mem-ref-name = 'currentRdsStatus';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ab1ed04a109330e7e9206483c7cdf5ef9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsTextSegmentAddress';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1093';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returns the address of the text segment.
2A - Each text segment in version 2A groups consists of four characters. A messages of this group can be 
     have up to 64 characters. 
2B - In version 2B groups, each text segment consists of only two characters. When the current RDS status is
     using this version, the maximum message length will be 32 characters.

@return uint8_t the address of the text segment.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1afc7f4e06b12a6d9b8304a691deb4fc8e';
        sec-mem-ref-line = '504';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKBH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ac81b652130f0e91b2af8184e303b5d54';
        sec-mem-ref-line = '505';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKBL';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a42d5c6991d90ea1c8ae35b74f8bccc48';
        sec-mem-ref-line = '905';
        sec-mem-ref-name = 'currentRdsStatus';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a71cbaa3e0c103db7cee5969d162bec5d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsText';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1095';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Gets the RDS Text when the message is of the Group Type 2 version A

@return char*  The string (char array) with the content (Text) received from group 2A 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1adb0a3c39aeacba0faf39aadd9465021f';
        sec-mem-ref-line = '1538';
        sec-mem-ref-name = 'getNext4Block';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a1c7ec3559a78c5ef1bda49cb0abdf1de';
        sec-mem-ref-line = '878';
        sec-mem-ref-name = 'rdsTextAdress2A';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a12d917629b78fffebac5ecf8f2936921';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsText0A';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1096';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Gets the station name and other messages. 

@return char* should return a string with the station name. 
        However, some stations send other kind of messages
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1afc7f4e06b12a6d9b8304a691deb4fc8e';
        sec-mem-ref-line = '504';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKBH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ac81b652130f0e91b2af8184e303b5d54';
        sec-mem-ref-line = '505';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKBL';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a42d5c6991d90ea1c8ae35b74f8bccc48';
        sec-mem-ref-line = '905';
        sec-mem-ref-name = 'currentRdsStatus';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ab1f4f137139b40fe386ca51586999e50';
        sec-mem-ref-line = '1506';
        sec-mem-ref-name = 'getNext2Block';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aa35366e5cded7b864f7268a7e4a8dbe9';
        sec-mem-ref-line = '1424';
        sec-mem-ref-name = 'getRdsGroupType';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ac24a8bbd39628c2981208cb452165a0e';
        sec-mem-ref-line = '875';
        sec-mem-ref-name = 'rds_buffer0A';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a11477d1eb13efb348395a4984b67f392';
        sec-mem-ref-line = '880';
        sec-mem-ref-name = 'rdsTextAdress0A';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ae54d0f5562ca7615c3b90bee00c29ab4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsText2A';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1097';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Gets the Text processed for the 2A group

@return char* string with the Text of the group A2  
<br>
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1afc7f4e06b12a6d9b8304a691deb4fc8e';
        sec-mem-ref-line = '504';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKBH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ac81b652130f0e91b2af8184e303b5d54';
        sec-mem-ref-line = '505';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKBL';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a42d5c6991d90ea1c8ae35b74f8bccc48';
        sec-mem-ref-line = '905';
        sec-mem-ref-name = 'currentRdsStatus';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1adb0a3c39aeacba0faf39aadd9465021f';
        sec-mem-ref-line = '1538';
        sec-mem-ref-name = 'getNext4Block';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aa35366e5cded7b864f7268a7e4a8dbe9';
        sec-mem-ref-line = '1424';
        sec-mem-ref-name = 'getRdsGroupType';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a1c7ec3559a78c5ef1bda49cb0abdf1de';
        sec-mem-ref-line = '878';
        sec-mem-ref-name = 'rdsTextAdress2A';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a806d5cfbbeb6ca1299ce20b1220fdb18';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsText2B';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1098';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Gets the Text processed for the 2B group

@return char* string with the Text of the group AB  
<br>
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1afc7f4e06b12a6d9b8304a691deb4fc8e';
        sec-mem-ref-line = '504';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKBH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ac81b652130f0e91b2af8184e303b5d54';
        sec-mem-ref-line = '505';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKBL';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a42d5c6991d90ea1c8ae35b74f8bccc48';
        sec-mem-ref-line = '905';
        sec-mem-ref-name = 'currentRdsStatus';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ab1f4f137139b40fe386ca51586999e50';
        sec-mem-ref-line = '1506';
        sec-mem-ref-name = 'getNext2Block';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aa35366e5cded7b864f7268a7e4a8dbe9';
        sec-mem-ref-line = '1424';
        sec-mem-ref-name = 'getRdsGroupType';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a7aa607f80e97d45ac7a80cdcbdeb09f9';
        sec-mem-ref-line = '874';
        sec-mem-ref-name = 'rds_buffer2B';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1adecc2478d73cd7d18e1f88fd70d1488d';
        sec-mem-ref-line = '879';
        sec-mem-ref-name = 'rdsTextAdress2B';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1aa8436bb156f3ac8321c65941be42fdba';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsTime';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1100';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Gets the RDS time and date when the Group type is 4 

@return char* a string with hh:mm +/- offset
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1afc7f4e06b12a6d9b8304a691deb4fc8e';
        sec-mem-ref-line = '504';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKBH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ac81b652130f0e91b2af8184e303b5d54';
        sec-mem-ref-line = '505';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKBL';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1acb3be1a907d57f35a5db5dc79d1c4603';
        sec-mem-ref-line = '506';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKCH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a9e02b88bb18b2111798c346c3f40e599';
        sec-mem-ref-line = '507';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKCL';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a6e7bcc48e5ad38ae9a4754d90735e0eb';
        sec-mem-ref-line = '508';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKDH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ab2c92efdeed49c5fe867771fb5cd5862';
        sec-mem-ref-line = '509';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKDL';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a42d5c6991d90ea1c8ae35b74f8bccc48';
        sec-mem-ref-line = '905';
        sec-mem-ref-name = 'currentRdsStatus';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aa35366e5cded7b864f7268a7e4a8dbe9';
        sec-mem-ref-line = '1424';
        sec-mem-ref-name = 'getRdsGroupType';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a1746daa81b363880dd106fa430784bf8';
        sec-mem-ref-line = '876';
        sec-mem-ref-name = 'rds_time';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ab1f4f137139b40fe386ca51586999e50';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getNext2Block';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'c';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1103';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Process data received from group 2B

@param c  char array reference to the "group 2B" text 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a6e7bcc48e5ad38ae9a4754d90735e0eb';
        sec-mem-ref-line = '508';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKDH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ab2c92efdeed49c5fe867771fb5cd5862';
        sec-mem-ref-line = '509';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKDL';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a42d5c6991d90ea1c8ae35b74f8bccc48';
        sec-mem-ref-line = '905';
        sec-mem-ref-name = 'currentRdsStatus';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a12d917629b78fffebac5ecf8f2936921';
        sec-mem-ref-line = '1594';
        sec-mem-ref-name = 'getRdsText0A';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a806d5cfbbeb6ca1299ce20b1220fdb18';
        sec-mem-ref-line = '1657';
        sec-mem-ref-name = 'getRdsText2B';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1adb0a3c39aeacba0faf39aadd9465021f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getNext4Block';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'c';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1104';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Process data received from group 2A

@param c  char array reference to the "group  2A" text 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1acb3be1a907d57f35a5db5dc79d1c4603';
        sec-mem-ref-line = '506';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKCH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a9e02b88bb18b2111798c346c3f40e599';
        sec-mem-ref-line = '507';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKCL';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a6e7bcc48e5ad38ae9a4754d90735e0eb';
        sec-mem-ref-line = '508';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKDH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ab2c92efdeed49c5fe867771fb5cd5862';
        sec-mem-ref-line = '509';
        sec-mem-ref-name = 'si47x_rds_status::BLOCKDL';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a42d5c6991d90ea1c8ae35b74f8bccc48';
        sec-mem-ref-line = '905';
        sec-mem-ref-name = 'currentRdsStatus';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a71cbaa3e0c103db7cee5969d162bec5d';
        sec-mem-ref-line = '1572';
        sec-mem-ref-name = 'getRdsText';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae54d0f5562ca7615c3b90bee00c29ab4';
        sec-mem-ref-line = '1625';
        sec-mem-ref-name = 'getRdsText2A';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a6f045d3725a457116236ee92d41c4265';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ssbSetup';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1109';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Starts the Si473X device on SSB (same AM Mode). 
Same SI4735::setup optimized to improve loading patch performance 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1adc6014674bd4d1ee3aab56c605926db1';
        sec-mem-ref-line = '126';
        sec-mem-ref-name = 'reset';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a55cf9a091d314a1aa21552f2254f756f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setSSBBfo';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'offset';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1110';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Single Side Band (SSB) implementation 

This implementation was tested only on Si4735-D60 device. 

SSB modulation is a refinement of amplitude modulation that one of the side band 
and the carrier are suppressed.

@see AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; pages 3 and 5 

First of all, it is important to say that the SSB patch content is not part of
this library. The paches used here were made available by Mr. Vadim Afonkin on 
his Dropbox repository. It is important to note that the author of this library
does not encourage anyone to use the SSB patches content for commercial purposes.
In other words, this library only supports SSB patches, the patches themselves 
are not part of this library.  
<br>

What does SSB patch means?
In this context, a patch is a piece of software used to change the behavior of 
the SI4735 device.
There is little information available about patching the SI4735.

The following information is the understanding of the author of this project and 
it is not necessarily correct. 

A patch is executed internally (run by internal MCU) of the device. Usually, 
patches are used to fixes bugs or add improvements and new features of the firmware
installed in the internal ROM of the device. Patches to the SI4735 are distributed
in binary form and have to be transferred to the internal RAM of the device by the 
host MCU (in this case Arduino boards). 
Since the RAM is volatile memory, the patch stored into the device gets lost when 
you turn off the system. Consequently, the content of the patch has to be transferred
again to the device each time after turn on the system or reset the device.

I would like to thank Mr Vadim Afonkin for making available the SSBRX patches for 
SI4735-D60 on his Dropbox repository. On this repository you have two files, 
amrx_6_0_1_ssbrx_patch_full_0x9D29.csg and amrx_6_0_1_ssbrx_patch_init_0xA902.csg. 
It is important to know that the patch content of the original files is constant 
hexadecimal representation used by the language C/C++. Actally, the original files 
are in ASCII format (not in binary format). 
If you are not using C/C++ or if you want to load the files directly to the SI4735, 
you must convert the values to numeric value of the hexadecimal constants. 
For example: 0x15 = 21 (00010101); 0x16 = 22 (00010110); 0x01 = 1 (00000001); 
0xFF = 255 (11111111);

ATTENTION: The author of this project does not guarantee that procedures shown 
here will work in your development environment. Given this, it is at your own risk 
to continue with the procedures suggested here. This library works with the I²C 
communication protocol and it is designed to apply a SSB extension PATCH to CI 
SI4735-D60. Once again, the author disclaims any liability for any damage this 
procedure may cause to your SI4735 or other devices that you are using.
Sets the SSB Beat Frequency Offset (BFO). 

@see AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; pages 5 and 23

@param offset 16-bit signed value (unit in Hz). The valid range is -16383 to +16383 Hz. 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1acc3d3a411d181e08846219661dbde1c4';
        sec-mem-ref-line = '888';
        sec-mem-ref-name = 'currentTune';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ae85fcb4329c600511e2127e1c5029f8c';
        sec-mem-ref-line = '198';
        sec-mem-ref-name = 'si47x_frequency::FREQH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7b45c1b22c3c1a3f2326bee913d1e1e0';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'waitToSend';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a9224e7d4ef14c887da96dbefd2dcefd3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setSSBConfig';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'AUDIOBW';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'SBCUTFLT';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'AVC_DIVIDER';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'AVCEN';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'SMUTESEL';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'DSP_AFCDIS';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1111';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set the SSB receiver mode details:
1) Enable or disable AFC track to carrier function for receiving normal AM signals;
2) Set the audio bandwidth;
3) Set the side band cutoff filter;
4) Set soft-mute based on RSSI or SNR;
5) Enable or disbable automatic volume control (AVC) function. 

@see AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; page 24 

@param AUDIOBW SSB Audio bandwidth; 0 = 1.2KHz (default); 1=2.2KHz; 2=3KHz; 3=4KHz; 4=500Hz; 5=1KHz.
@param SBCUTFLT SSB side band cutoff filter for band passand low pass filter
                if 0, the band pass filter to cutoff both the unwanted side band and high frequency 
                 component > 2KHz of the wanted side band (default).
@param AVC_DIVIDER set 0 for SSB mode; set 3 for SYNC mode.
@param AVCEN SSB Automatic Volume Control (AVC) enable; 0=disable; 1=enable (default).
@param SMUTESEL SSB Soft-mute Based on RSSI or SNR.
@param DSP_AFCDIS DSP AFC Disable or enable; 0=SYNC MODE, AFC enable; 1=SSB MODE, AFC disable. 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a3c4def7aad4a7f875bd189cfde29c733';
        sec-mem-ref-line = '785';
        sec-mem-ref-name = 'si47x_ssb_mode::AVC_DIVIDER';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1abdcac9b7553fc2d62f51262eacec0069';
        sec-mem-ref-line = '786';
        sec-mem-ref-name = 'si47x_ssb_mode::AVCEN';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a74ee9c99b1e092f7b1efa2f771f38324';
        sec-mem-ref-line = '907';
        sec-mem-ref-name = 'currentSSBMode';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1acc3d3a411d181e08846219661dbde1c4';
        sec-mem-ref-line = '888';
        sec-mem-ref-name = 'currentTune';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a12c18df3a3e8d78325292f50e222bd01';
        sec-mem-ref-line = '789';
        sec-mem-ref-name = 'si47x_ssb_mode::DSP_AFCDIS';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a5c337f3327b40a61d5ccc22141892651';
        sec-mem-ref-line = '788';
        sec-mem-ref-name = 'si47x_ssb_mode::DUMMY1';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ae22aa453dbf8787acceef11d30306dfd';
        sec-mem-ref-line = '784';
        sec-mem-ref-name = 'si47x_ssb_mode::SBCUTFLT';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae1d866bfc4cb37c4268c8942b4b4d062';
        sec-mem-ref-line = '2006';
        sec-mem-ref-name = 'sendSSBModeProperty';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1aeed76b90e22efa54ef80062032785bc2';
        sec-mem-ref-line = '787';
        sec-mem-ref-name = 'si47x_ssb_mode::SMUTESEL';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a7c48f2af416b1f89dbedbfbe9a637620';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setSSB';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'fromFreq';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'toFreq';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'intialFreq';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'step';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'usblsb';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1112';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a3e907ddf560a0c8286fa55768701b3da';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setSSB';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'usblsb';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1113';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set the radio to AM function. 
It means: LW MW and SW.

@see AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; pages 13 and 14 
@see setAM()
@see void SI4735::setFrequency(uint16_t freq)

@param usblsb upper or lower side band;  1 = LSB; 2 = USB
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a157e4ae8cd53396973584aa10888cd47';
        sec-mem-ref-line = '896';
        sec-mem-ref-name = 'lastMode';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a3e228da65641f4dcf4253262e19bde9b';
        sec-mem-ref-line = '206';
        sec-mem-ref-name = 'radioPowerUp';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a8bc001cb28dc8fbd88ba0fa7024eca39';
        sec-mem-ref-line = '163';
        sec-mem-ref-name = 'setPowerUp';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a3b7543657dfd36da962267bb8692b796';
        sec-mem-ref-line = '1140';
        sec-mem-ref-name = 'setVolume';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a6b2ad4d027463262350134490d16bf32';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setSSBAudioBandwidth';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'AUDIOBW';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1114';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
SSB Audio Bandwidth for SSB mode

0 = 1.2 kHz low-pass filter* . (default)
1 = 2.2 kHz low-pass filter* .
2 = 3.0 kHz low-pass filter.
3 = 4.0 kHz low-pass filter.
4 = 500 Hz band-pass filter for receiving CW signal, i.e. [250 Hz, 750 Hz]
    with center frequency at 500 Hz when USB is selected or [-250 Hz, -750 1Hz] with center 
    frequency at -500Hz when LSB is selected* .
5 = 1 kHz band-pass filter for receiving CW signal, i.e. [500 Hz, 1500 Hz] with center 
    frequency at 1 kHz when USB is selected or [-500 Hz, -1500 1 Hz] with center frequency 
    at -1kHz when LSB is selected* .
Other values = reserved.
Note:
  If audio bandwidth selected is about 2 kHz or below, it is recommended to set SBCUTFLT[3:0] to 0 
  to enable the band pass filter for better high- cut performance on the wanted side band. 
  Otherwise, set it to 1.

@see AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; page 24 

@param AUDIOBW the valid values are 0, 1, 2, 3, 4 or 5; see description above
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a74ee9c99b1e092f7b1efa2f771f38324';
        sec-mem-ref-line = '907';
        sec-mem-ref-name = 'currentSSBMode';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae1d866bfc4cb37c4268c8942b4b4d062';
        sec-mem-ref-line = '2006';
        sec-mem-ref-name = 'sendSSBModeProperty';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1acacf1dac4c0ec170d1da629dd1fd30cb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setSSBAutomaticVolumeControl';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'AVCEN';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1115';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets SSB Automatic Volume Control (AVC) for SSB mode

@see AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; page 24 

@param AVCEN 0 = Disable AVC; 1 = Enable AVC (default).
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1abdcac9b7553fc2d62f51262eacec0069';
        sec-mem-ref-line = '786';
        sec-mem-ref-name = 'si47x_ssb_mode::AVCEN';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a74ee9c99b1e092f7b1efa2f771f38324';
        sec-mem-ref-line = '907';
        sec-mem-ref-name = 'currentSSBMode';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae1d866bfc4cb37c4268c8942b4b4d062';
        sec-mem-ref-line = '2006';
        sec-mem-ref-name = 'sendSSBModeProperty';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ae9d50b24642784943fefedbac944a8e8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setSBBSidebandCutoffFilter';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'SBCUTFLT';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1116';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets SBB Sideband Cutoff Filter for band pass and low pass filters:
0 = Band pass filter to cutoff both the unwanted side band and high frequency components > 2.0 kHz of the wanted side band. (default)
1 = Low pass filter to cutoff the unwanted side band. 
Other values = not allowed.

@see AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; page 24 

@param SBCUTFLT 0 or 1; see above
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a74ee9c99b1e092f7b1efa2f771f38324';
        sec-mem-ref-line = '907';
        sec-mem-ref-name = 'currentSSBMode';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ae22aa453dbf8787acceef11d30306dfd';
        sec-mem-ref-line = '784';
        sec-mem-ref-name = 'si47x_ssb_mode::SBCUTFLT';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae1d866bfc4cb37c4268c8942b4b4d062';
        sec-mem-ref-line = '2006';
        sec-mem-ref-name = 'sendSSBModeProperty';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1afc5e87c50a1eba6de9504c114cc1cb70';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setSSBAvcDivider';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'AVC_DIVIDER';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1117';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets AVC Divider

@see AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; page 24  
<br>

@param AVC_DIVIDER  SSB mode, set divider = 0; SYNC mode, set divider = 3; Other values = not allowed.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a3c4def7aad4a7f875bd189cfde29c733';
        sec-mem-ref-line = '785';
        sec-mem-ref-name = 'si47x_ssb_mode::AVC_DIVIDER';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a74ee9c99b1e092f7b1efa2f771f38324';
        sec-mem-ref-line = '907';
        sec-mem-ref-name = 'currentSSBMode';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae1d866bfc4cb37c4268c8942b4b4d062';
        sec-mem-ref-line = '2006';
        sec-mem-ref-name = 'sendSSBModeProperty';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a6cde26a5abf759a628012d1457d85c72';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setSSBDspAfc';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'DSP_AFCDIS';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1118';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets DSP AFC disable or enable

@see AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; page 24 

@param DSP_AFCDIS 0 = SYNC mode, AFC enable; 1 = SSB mode, AFC disable
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a74ee9c99b1e092f7b1efa2f771f38324';
        sec-mem-ref-line = '907';
        sec-mem-ref-name = 'currentSSBMode';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a12c18df3a3e8d78325292f50e222bd01';
        sec-mem-ref-line = '789';
        sec-mem-ref-name = 'si47x_ssb_mode::DSP_AFCDIS';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae1d866bfc4cb37c4268c8942b4b4d062';
        sec-mem-ref-line = '2006';
        sec-mem-ref-name = 'sendSSBModeProperty';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a91251dfc2ff9488aaef3aa1a528097d9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setSSBSoftMute';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'SMUTESEL';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1119';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets SSB Soft-mute Based on RSSI or SNR Selection: 

@see AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; page 24 

@param SMUTESEL  0 = Soft-mute based on RSSI (default); 1 = Soft-mute based on SNR.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a74ee9c99b1e092f7b1efa2f771f38324';
        sec-mem-ref-line = '907';
        sec-mem-ref-name = 'currentSSBMode';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae1d866bfc4cb37c4268c8942b4b4d062';
        sec-mem-ref-line = '2006';
        sec-mem-ref-name = 'sendSSBModeProperty';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1aeed76b90e22efa54ef80062032785bc2';
        sec-mem-ref-line = '787';
        sec-mem-ref-name = 'si47x_ssb_mode::SMUTESEL';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1adfc2c82524918224cf19fec5b7fcf6d1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
si47x_firmware_query_library
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'queryLibraryId';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1124';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
SI47XX PATCH RESOURCES
Call it first if you are applying a patch on SI4735. 
Used to confirm if the patch is compatible with the internal device library revision.
See Si47XX PROGRAMMING GUIDE; AN332; pages 64 and 215-220.

@return a struct si47x_firmware_query_library (see it in SI4735.h)
Query the library information

You have to call this function if you are applying a patch on SI47XX (SI4735-D60)

The first command that is sent to the device is the POWER_UP command to confirm 
that the patch is compatible with the internal device library revision. 
The device moves into the powerup mode, returns the reply, and moves into the 
powerdown mode. The POWER_UP command is sent to the device again to configure 
the mode of the device and additionally is used to start the patching process.
When applying the patch, the PATCH bit in ARG1 of the POWER_UP command must be 
set to 1 to begin the patching process. [AN332 page 219].

@see Si47XX PROGRAMMING GUIDE; AN332; pages 214, 215, 216, 219
@see si47x_firmware_query_library in SI4735.h

@return si47x_firmware_query_library  Library Identification
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aa554b3390fb6c5a4d6661b96afae73ae';
        sec-mem-ref-line = '236';
        sec-mem-ref-name = 'powerDown';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7b45c1b22c3c1a3f2326bee913d1e1e0';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'waitToSend';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1afaabd6c73b7ad7c20ae959d5b75c1e71';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'patchPowerUp';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1125';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method can be used to prepare the device to apply SSBRX patch
Call queryLibraryId before call this method. 
Powerup the device by issuing the POWER_UP command with FUNC = 1 (AM/SW/LW Receive)

@see Si47XX PROGRAMMING GUIDE; AN332; pages 64 and 215-220 and
@see AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE AMENDMENT FOR SI4735-D60 SSB AND NBFM PATCHES; page 7.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7b45c1b22c3c1a3f2326bee913d1e1e0';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'waitToSend';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1afd1343bd8b4f0c290ef81c418222036c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'downloadPatch';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint8_t *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ssb_patch_content';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ssb_patch_content_size';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1126';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Transfers the content of a patch stored in a array of bytes to the SI4735 device. 
You must mount an array as shown below and know the size of that array as well.

It is importante to say  that patches to the SI4735 are distributed in binary form and 
have to be transferred to the internal RAM of the device by the host MCU (in this case Arduino).
Since the RAM is volatile memory, the patch stored into the device gets lost when you turn off 
the system. Consequently, the content of the patch has to be transferred again to the device 
each time after turn on the system or reset the device.

The disadvantage of this approach is the amount of memory used by the patch content. 
This may limit the use of other radio functions you want implemented in Arduino.

@see Si47XX PROGRAMMING GUIDE; AN332; pages 64 and 215-220.  
<br>

Example of content:
const PROGMEM uint8_t ssb_patch_content_full[] =
 { // SSB patch for whole SSBRX full download
     0x15, 0x00, 0x0F, 0xE0, 0xF2, 0x73, 0x76, 0x2F,
     0x16, 0x6F, 0x26, 0x1E, 0x00, 0x4B, 0x2C, 0x58,
     0x16, 0xA3, 0x74, 0x0F, 0xE0, 0x4C, 0x36, 0xE4,
        .
        .
        .
     0x16, 0x3B, 0x1D, 0x4A, 0xEC, 0x36, 0x28, 0xB7,
     0x16, 0x00, 0x3A, 0x47, 0x37, 0x00, 0x00, 0x00,
     0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9D, 0x29};   
<br>

const int size_content_full = sizeof ssb_patch_content_full;

@param ssb_patch_content point to array of bytes content patch.
@param ssb_patch_content_size array size (number of bytes). The maximum size allowed for a patch is 15856 bytes

@return false if an error is found.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1aa99cdde8dd65eb92f2ada159cc215c98';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'downloadPatch';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'eeprom_i2c_address';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1127';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Under construction... 
Transfers the content of a patch stored in a eeprom to the SI4735 device.

TO USE THIS METHOD YOU HAVE TO HAVE A EEPROM WRITEN WITH THE PATCH CONTENT

@see the sketch write_ssb_patch_eeprom.ino (TO DO)

@param eeprom_i2c_address 
@return false if an error is found.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7b45c1b22c3c1a3f2326bee913d1e1e0';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'waitToSend';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a0fcfd8e487c594707b3f2aaa71a86d68';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ssbPowerUp';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1128';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function can be useful for debug and teste. 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a21297439eccc575f7c0a3228a4061fa7';
        sec-mem-ref-line = '181';
        sec-mem-ref-name = 'si473x_powerup::CTSIEN';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a6da21e782c18e0d15791f712e602bf0f';
        sec-mem-ref-line = '180';
        sec-mem-ref-name = 'si473x_powerup::GPO2OEN';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a5deeab3cdc44cc652b6e8867dd8e9833';
        sec-mem-ref-line = '183';
        sec-mem-ref-name = 'si473x_powerup::OPMODE';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1aff3f1655e972eff4630c66f0b4ec7704';
        sec-mem-ref-line = '179';
        sec-mem-ref-name = 'si473x_powerup::PATCH';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a1331b701088bda20bf0844e2e38be142';
        sec-mem-ref-line = '909';
        sec-mem-ref-name = 'powerUp';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7b45c1b22c3c1a3f2326bee913d1e1e0';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'waitToSend';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ae68c435fb0ff2ad54bc17ac794a482c1';
        sec-mem-ref-line = '178';
        sec-mem-ref-name = 'si473x_powerup::XOSCEN';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1aecfcd50dbb3d95d66c8cdc77d52af63c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setI2CLowSpeedMode';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1136';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a00ade87631677b8cc88098d0b55cd5a4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setI2CStandardMode';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1137';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets I2C buss to 10KHz.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a7bb3214f70381cf26bb93f96729d641e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setI2CFastMode';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1138';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets I2C buss to 100KHz.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a7433b4e80fd3b501efeae7973d29c985';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setI2CFastModeCustom';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
long
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
500000
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1147';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets I2C buss to 400KHz.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets the I2C bus to a given value.

ATTENTION: use this function with cation

@param value in Hz. For example: The values 500000 sets the bus to 500KHz.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a748a4027f317972cb2fb1aed4865973b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setDeviceI2CAddress';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'senPin';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1149';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets the I2C Bus Address

ATTENTION: 
The parameter senPin is not the I2C bus address. It is the SEN pin setup of the schematic (eletronic circuit).
If it is connected to the ground, call this function with senPin = 0; else senPin = 1.
You do not need to use this function if the SEN PIN configured to ground (GND).

The default value is 0x11 (senPin = 0). In this case you have to ground the pin SEN of the SI473X. 
If you want to change this address, call this function with senPin = 1

@param senPin 0 -  when the pin SEN (16 on SSOP version or pin 6 on QFN version) is set to low (GND - 0V)
              1 -  when the pin SEN (16 on SSOP version or pin 6 on QFN version) is set to high (+3.3V)
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a8eddbfb3e62786aa4843d4bcd25da2b9';
        sec-mem-ref-line = '63';
        sec-mem-ref-name = 'getDeviceI2CAddress';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a8eddbfb3e62786aa4843d4bcd25da2b9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getDeviceI2CAddress';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'resetPin';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1150';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Scans for two possible addresses for the Si47XX (0x11 or 0x63 )
This function also sets the system to the found I2C bus address of Si47XX.

You do not need to use this function if the SEN PIN is configured to ground (GND). 
The default I2C address is 0x11.
Use this function if you do not know how the SEN pin is configured.

@param uint8_t  resetPin MCU Mater (Arduino) reset pin
@return int16_t 0x11   if the SEN pin of the Si47XX is low or 0x63 if the SEN pin of
                the Si47XX is HIGH or 0x0 if error.                
<br>
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a748a4027f317972cb2fb1aed4865973b';
        sec-mem-ref-line = '108';
        sec-mem-ref-name = 'setDeviceI2CAddress';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1a668008457910e916ebadf15bda2e5b29';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setDeviceOtherI2CAddress';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'i2cAddr';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '1151';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets the onther I2C Bus Address (for Si470X) 
You can set another I2C address different of 0x11  and 0x63
@param uint8_t i2cAddr (example 0x10)
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'protected-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ad2e95c88de0dfa58ff7aa36988071421';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'waitInterrupr';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '915';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
If you setup interrupt, this function will be called whenever the Si4735 changes. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ae351181347f8c512b625d98ef7844961';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'sendProperty';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'propertyValue';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'param';
        sec-mem-param-defname = 'parameter';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '916';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sends (sets) property to the SI47XX
This method is used for others to send generic properties and params to SI47XX

@see Si47XX PROGRAMMING GUIDE; AN332; pages 68, 124 and  133.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7b45c1b22c3c1a3f2326bee913d1e1e0';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'waitToSend';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aea652d358b4b586b6d5964ceb8eb7c81';
        sec-mem-ref-line = '777';
        sec-mem-ref-name = 'digitalOutputFormat';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a1a404ca11fb32b457be2d7cfe484dd03';
        sec-mem-ref-line = '794';
        sec-mem-ref-name = 'digitalOutputSampleRate';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a12d4e173d096b1568e4209a63534d4f6';
        sec-mem-ref-line = '1153';
        sec-mem-ref-name = 'setAudioMute';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a98d12da4b801493a350ecf770f4f2d8b';
        sec-mem-ref-line = '956';
        sec-mem-ref-name = 'setAvcAmMaxGain';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1adf4c5ec4473fd8486dd2ec7a19a10d24';
        sec-mem-ref-line = '644';
        sec-mem-ref-name = 'setFmBlendMonoThreshold';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1acc9fd27b38f49f167facfcc4f6216c5e';
        sec-mem-ref-line = '721';
        sec-mem-ref-name = 'setFmBlendMultiPathMonoThreshold';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a0ed776a193fb2fcff783d4a82ff714e5';
        sec-mem-ref-line = '708';
        sec-mem-ref-name = 'setFmBlendMultiPathStereoThreshold';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a1b134a94138b3bf993a5d3eb5f8ed5c6';
        sec-mem-ref-line = '669';
        sec-mem-ref-name = 'setFmBLendRssiMonoThreshold';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ab063630466dccea3becc11d60d122904';
        sec-mem-ref-line = '656';
        sec-mem-ref-name = 'setFmBlendRssiStereoThreshold';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae2c30536e59f6691d990a2b9cf21f07e';
        sec-mem-ref-line = '695';
        sec-mem-ref-name = 'setFmBLendSnrMonoThreshold';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a1d1a5eed976370d99827ba55d08b9293';
        sec-mem-ref-line = '682';
        sec-mem-ref-name = 'setFmBlendSnrStereoThreshold';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ac598865516ca09db7dbfa6a84da7f179';
        sec-mem-ref-line = '631';
        sec-mem-ref-name = 'setFmBlendStereoThreshold';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a6b901d5cd729364dbda6e5b811dc9ec2';
        sec-mem-ref-line = '1093';
        sec-mem-ref-name = 'setSeekAmLimits';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a6f8218c0bbdcb75ea54bc8af2a60dcc6';
        sec-mem-ref-line = '1106';
        sec-mem-ref-name = 'setSeekAmSpacing';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a13397b273f7ab6fa7d5f48f116edac9b';
        sec-mem-ref-line = '1128';
        sec-mem-ref-name = 'setSeekRssiThreshold';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aeef76371500acdbdc17ca8dc980e1fff';
        sec-mem-ref-line = '1117';
        sec-mem-ref-name = 'setSeekSrnThreshold';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a3b7543657dfd36da962267bb8692b796';
        sec-mem-ref-line = '1140';
        sec-mem-ref-name = 'setVolume';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ae1d866bfc4cb37c4268c8942b4b4d062';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'sendSSBModeProperty';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '917';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Just send the property SSB_MOD to the device. 
Internal use (privete method). 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a74ee9c99b1e092f7b1efa2f771f38324';
        sec-mem-ref-line = '907';
        sec-mem-ref-name = 'currentSSBMode';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7b45c1b22c3c1a3f2326bee913d1e1e0';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'waitToSend';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae9d50b24642784943fefedbac944a8e8';
        sec-mem-ref-line = '1914';
        sec-mem-ref-name = 'setSBBSidebandCutoffFilter';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a6b2ad4d027463262350134490d16bf32';
        sec-mem-ref-line = '1943';
        sec-mem-ref-name = 'setSSBAudioBandwidth';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1acacf1dac4c0ec170d1da629dd1fd30cb';
        sec-mem-ref-line = '1885';
        sec-mem-ref-name = 'setSSBAutomaticVolumeControl';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1afc5e87c50a1eba6de9504c114cc1cb70';
        sec-mem-ref-line = '1898';
        sec-mem-ref-name = 'setSSBAvcDivider';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a9224e7d4ef14c887da96dbefd2dcefd3';
        sec-mem-ref-line = '1835';
        sec-mem-ref-name = 'setSSBConfig';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a6cde26a5abf759a628012d1457d85c72';
        sec-mem-ref-line = '1858';
        sec-mem-ref-name = 'setSSBDspAfc';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a91251dfc2ff9488aaef3aa1a528097d9';
        sec-mem-ref-line = '1872';
        sec-mem-ref-name = 'setSSBSoftMute';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ae4683e9a9fc7a633305b18dae54fbd83';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'disableFmDebug';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '918';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
There is a debug feature that remains active in Si4704/05/3x-D60 firmware which can create periodic noise in audio.
Silicon Labs recommends you disable this feature by sending the following bytes (shown here in hexadecimal form):
0x12 0x00 0xFF 0x00 0x00 0x00.

@see Si47XX PROGRAMMING GUIDE; AN332; page 299. 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
        sec-mem-ref-line = '882';
        sec-mem-ref-name = 'deviceAddress';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1acd89e7b8adefcbc4e89f802acb915906';
        sec-mem-ref-line = '478';
        sec-mem-ref-name = 'setFM';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1ac65c552004f5e5e646638e37a5a68213';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'clearRdsBuffer2A';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '919';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Clear RDS buffer 2A (text) 
_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a350a2033671a7620d4b9290a2347e185';
        sec-mem-ref-line = '1350';
        sec-mem-ref-name = 'getRdsStatus';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1affdba9ca9fb9bf5bb671ac3d448a7e89';
        sec-mem-ref-line = '1201';
        sec-mem-ref-name = 'RdsInit';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1aed0988165057aa2880f41b88ac236cd7';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'clearRdsBuffer2B';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '920';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Clear RDS buffer 2B (text)
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1a7aa607f80e97d45ac7a80cdcbdeb09f9';
        sec-mem-ref-line = '874';
        sec-mem-ref-name = 'rds_buffer2B';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a350a2033671a7620d4b9290a2347e185';
        sec-mem-ref-line = '1350';
        sec-mem-ref-name = 'getRdsStatus';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1affdba9ca9fb9bf5bb671ac3d448a7e89';
        sec-mem-ref-line = '1201';
        sec-mem-ref-name = 'RdsInit';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4735_1adede134b96fd5650b87673ce413babb2';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'clearRdsBuffer0A';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '921';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Clear RDS buffer 0A (text)
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4735_8h_1ac24a8bbd39628c2981208cb452165a0e';
        sec-mem-ref-line = '875';
        sec-mem-ref-name = 'rds_buffer0A';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a350a2033671a7620d4b9290a2347e185';
        sec-mem-ref-line = '1350';
        sec-mem-ref-name = 'getRdsStatus';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1affdba9ca9fb9bf5bb671ac3d448a7e89';
        sec-mem-ref-line = '1201';
        sec-mem-ref-name = 'RdsInit';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'protected-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1a0b40791484c47c0bf90d8dc255a20269';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rds_buffer2A';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '873';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1a7aa607f80e97d45ac7a80cdcbdeb09f9';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rds_buffer2B';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '874';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RDS Radio Text buffer - Program Information.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aed0988165057aa2880f41b88ac236cd7';
        sec-mem-ref-line = '1223';
        sec-mem-ref-name = 'clearRdsBuffer2B';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a806d5cfbbeb6ca1299ce20b1220fdb18';
        sec-mem-ref-line = '1657';
        sec-mem-ref-name = 'getRdsText2B';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1ac24a8bbd39628c2981208cb452165a0e';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rds_buffer0A';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '875';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RDS Radio Text buffer - Station Informaation.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1adede134b96fd5650b87673ce413babb2';
        sec-mem-ref-line = '1232';
        sec-mem-ref-name = 'clearRdsBuffer0A';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a12d917629b78fffebac5ecf8f2936921';
        sec-mem-ref-line = '1594';
        sec-mem-ref-name = 'getRdsText0A';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1a1746daa81b363880dd106fa430784bf8';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rds_time';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '876';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RDS Basic tuning and switching information (Type 0 groups)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aa8436bb156f3ac8321c65941be42fdba';
        sec-mem-ref-line = '1688';
        sec-mem-ref-name = 'getRdsTime';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1a1c7ec3559a78c5ef1bda49cb0abdf1de';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rdsTextAdress2A';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '878';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RDS date time received information  
<br>
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1affdba9ca9fb9bf5bb671ac3d448a7e89';
        sec-mem-ref-line = '1201';
        sec-mem-ref-name = 'RdsInit';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a71cbaa3e0c103db7cee5969d162bec5d';
        sec-mem-ref-line = '1572';
        sec-mem-ref-name = 'getRdsText';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae54d0f5562ca7615c3b90bee00c29ab4';
        sec-mem-ref-line = '1625';
        sec-mem-ref-name = 'getRdsText2A';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1adecc2478d73cd7d18e1f88fd70d1488d';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rdsTextAdress2B';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '879';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
rds_buffer2A current position
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1affdba9ca9fb9bf5bb671ac3d448a7e89';
        sec-mem-ref-line = '1201';
        sec-mem-ref-name = 'RdsInit';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a806d5cfbbeb6ca1299ce20b1220fdb18';
        sec-mem-ref-line = '1657';
        sec-mem-ref-name = 'getRdsText2B';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1a11477d1eb13efb348395a4984b67f392';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rdsTextAdress0A';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '880';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
rds_buffer2B current position
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1affdba9ca9fb9bf5bb671ac3d448a7e89';
        sec-mem-ref-line = '1201';
        sec-mem-ref-name = 'RdsInit';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a12d917629b78fffebac5ecf8f2936921';
        sec-mem-ref-line = '1594';
        sec-mem-ref-name = 'getRdsText0A';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1a243ecc7d01fc0d0e9cabb4ed00b9e47d';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'deviceAddress';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= SI473X_ADDR_SEN_LOW
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '882';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
rds_buffer0A current position
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a748a4027f317972cb2fb1aed4865973b';
        sec-mem-ref-line = '108';
        sec-mem-ref-name = 'setDeviceI2CAddress';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a668008457910e916ebadf15bda2e5b29';
        sec-mem-ref-line = '117';
        sec-mem-ref-name = 'setDeviceOtherI2CAddress';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7b45c1b22c3c1a3f2326bee913d1e1e0';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'waitToSend';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a3e228da65641f4dcf4253262e19bde9b';
        sec-mem-ref-line = '206';
        sec-mem-ref-name = 'radioPowerUp';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aa554b3390fb6c5a4d6661b96afae73ae';
        sec-mem-ref-line = '236';
        sec-mem-ref-name = 'powerDown';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a2fbc7e2187a7c645879623100dbc8502';
        sec-mem-ref-line = '250';
        sec-mem-ref-name = 'getFirmware';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a63d205f2d3169ba877a2bd2ee28d224f';
        sec-mem-ref-line = '376';
        sec-mem-ref-name = 'setFrequency';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a8755743a36d2d4662c8db918d02ee4e1';
        sec-mem-ref-line = '557';
        sec-mem-ref-name = 'setBandwidth';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae351181347f8c512b625d98ef7844961';
        sec-mem-ref-line = '603';
        sec-mem-ref-name = 'sendProperty';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae4683e9a9fc7a633305b18dae54fbd83';
        sec-mem-ref-line = '749';
        sec-mem-ref-name = 'disableFmDebug';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a5c0f4036a7fbbd11a26f1f6f4579d3cd';
        sec-mem-ref-line = '841';
        sec-mem-ref-name = 'getStatus';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aaae187575b9868ff427c063c3a6cca2a';
        sec-mem-ref-line = '885';
        sec-mem-ref-name = 'getAutomaticGainControl';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a27c22f5671ce3229e925e5fbe93ba0a6';
        sec-mem-ref-line = '926';
        sec-mem-ref-name = 'setAutomaticGainControl';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1abf59183da13c72384093fc238c3114cf';
        sec-mem-ref-line = '974';
        sec-mem-ref-name = 'getCurrentReceivedSignalQuality';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a3280b98b8331f00b4d0158ef1b076533';
        sec-mem-ref-line = '1033';
        sec-mem-ref-name = 'seekStation';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ad9718a85c79a311c26997bbda20f2351';
        sec-mem-ref-line = '1265';
        sec-mem-ref-name = 'setRdsConfig';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a530e64d00d95b4ceb13ce33aa74c63cb';
        sec-mem-ref-line = '1309';
        sec-mem-ref-name = 'setRdsIntSource';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a350a2033671a7620d4b9290a2347e185';
        sec-mem-ref-line = '1350';
        sec-mem-ref-name = 'getRdsStatus';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a55cf9a091d314a1aa21552f2254f756f';
        sec-mem-ref-line = '1790';
        sec-mem-ref-name = 'setSSBBfo';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae1d866bfc4cb37c4268c8942b4b4d062';
        sec-mem-ref-line = '2006';
        sec-mem-ref-name = 'sendSSBModeProperty';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1adfc2c82524918224cf19fec5b7fcf6d1';
        sec-mem-ref-line = '2053';
        sec-mem-ref-name = 'queryLibraryId';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1afaabd6c73b7ad7c20ae959d5b75c1e71';
        sec-mem-ref-line = '2090';
        sec-mem-ref-name = 'patchPowerUp';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a0fcfd8e487c594707b3f2aaa71a86d68';
        sec-mem-ref-line = '2116';
        sec-mem-ref-name = 'ssbPowerUp';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1afd1343bd8b4f0c290ef81c418222036c';
        sec-mem-ref-line = '2169';
        sec-mem-ref-name = 'downloadPatch';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1abd965c0e49493bc2c7c37547d36dcc96';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'lastTextFlagAB';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '884';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
current I2C buss address
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1affdba9ca9fb9bf5bb671ac3d448a7e89';
        sec-mem-ref-line = '1201';
        sec-mem-ref-name = 'RdsInit';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1a6470177f747ef7eb8e7d02c76f72b19e';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'resetPin';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '885';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1af8f8123888060f858c74ba08a29ff38b';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'interruptPin';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '886';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
pin used on Arduino Board to RESET the Si47XX device
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a95fd37277dbb8b16b5ae7a996a5f9eba';
        sec-mem-ref-line = '279';
        sec-mem-ref-name = 'setup';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1acc3d3a411d181e08846219661dbde1c4';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'currentTune';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '888';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
pin used on Arduino Board to control interrupt. If -1, interrupt is no used.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a8bc001cb28dc8fbd88ba0fa7024eca39';
        sec-mem-ref-line = '163';
        sec-mem-ref-name = 'setPowerUp';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aaceadaaf0835e3db124d1b36f2aebd3c';
        sec-mem-ref-line = '343';
        sec-mem-ref-name = 'setTuneFrequencyAntennaCapacitor';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a63d205f2d3169ba877a2bd2ee28d224f';
        sec-mem-ref-line = '376';
        sec-mem-ref-name = 'setFrequency';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a8755743a36d2d4662c8db918d02ee4e1';
        sec-mem-ref-line = '557';
        sec-mem-ref-name = 'setBandwidth';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae7ca2ffa6ad68ca69e4f35a3c40bbc3c';
        sec-mem-ref-line = '592';
        sec-mem-ref-name = 'isCurrentTuneFM';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a5c0f4036a7fbbd11a26f1f6f4579d3cd';
        sec-mem-ref-line = '841';
        sec-mem-ref-name = 'getStatus';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aaae187575b9868ff427c063c3a6cca2a';
        sec-mem-ref-line = '885';
        sec-mem-ref-name = 'getAutomaticGainControl';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a27c22f5671ce3229e925e5fbe93ba0a6';
        sec-mem-ref-line = '926';
        sec-mem-ref-name = 'setAutomaticGainControl';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1abf59183da13c72384093fc238c3114cf';
        sec-mem-ref-line = '974';
        sec-mem-ref-name = 'getCurrentReceivedSignalQuality';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a3280b98b8331f00b4d0158ef1b076533';
        sec-mem-ref-line = '1033';
        sec-mem-ref-name = 'seekStation';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a530e64d00d95b4ceb13ce33aa74c63cb';
        sec-mem-ref-line = '1309';
        sec-mem-ref-name = 'setRdsIntSource';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a350a2033671a7620d4b9290a2347e185';
        sec-mem-ref-line = '1350';
        sec-mem-ref-name = 'getRdsStatus';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a55cf9a091d314a1aa21552f2254f756f';
        sec-mem-ref-line = '1790';
        sec-mem-ref-name = 'setSSBBfo';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a9224e7d4ef14c887da96dbefd2dcefd3';
        sec-mem-ref-line = '1835';
        sec-mem-ref-name = 'setSSBConfig';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1a4663c1c92d980472556368944cb2fc68';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'currentMinimumFrequency';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '890';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
tell the current tune (FM, AM or SSB)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ac0fcfd64dcf30b11d4dc219d9f7fc5d9';
        sec-mem-ref-line = '427';
        sec-mem-ref-name = 'frequencyUp';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a93fff524a6f900ac91eb1222ce73f9ba';
        sec-mem-ref-line = '442';
        sec-mem-ref-name = 'frequencyDown';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a43c5ea36995a3897820e0170d94c81f4';
        sec-mem-ref-line = '499';
        sec-mem-ref-name = 'setAM';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a673bc4b17d564bb6e7f3e9a61d35fbb3';
        sec-mem-ref-line = '524';
        sec-mem-ref-name = 'setFM';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1aa3d41ad3fdb9d821a721a8acfaf47670';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'currentMaximumFrequency';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '891';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
minimum frequency of the current band
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ac0fcfd64dcf30b11d4dc219d9f7fc5d9';
        sec-mem-ref-line = '427';
        sec-mem-ref-name = 'frequencyUp';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a93fff524a6f900ac91eb1222ce73f9ba';
        sec-mem-ref-line = '442';
        sec-mem-ref-name = 'frequencyDown';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a43c5ea36995a3897820e0170d94c81f4';
        sec-mem-ref-line = '499';
        sec-mem-ref-name = 'setAM';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a673bc4b17d564bb6e7f3e9a61d35fbb3';
        sec-mem-ref-line = '524';
        sec-mem-ref-name = 'setFM';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1a9da4f3df9e5e6b0448eff15e12f690dd';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'currentWorkFrequency';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '892';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
maximum frequency of the current band
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a63d205f2d3169ba877a2bd2ee28d224f';
        sec-mem-ref-line = '376';
        sec-mem-ref-name = 'setFrequency';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ac0fcfd64dcf30b11d4dc219d9f7fc5d9';
        sec-mem-ref-line = '427';
        sec-mem-ref-name = 'frequencyUp';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a93fff524a6f900ac91eb1222ce73f9ba';
        sec-mem-ref-line = '442';
        sec-mem-ref-name = 'frequencyDown';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a43c5ea36995a3897820e0170d94c81f4';
        sec-mem-ref-line = '499';
        sec-mem-ref-name = 'setAM';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a673bc4b17d564bb6e7f3e9a61d35fbb3';
        sec-mem-ref-line = '524';
        sec-mem-ref-name = 'setFM';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7e88bb573604d465536c13554d5c61f8';
        sec-mem-ref-line = '809';
        sec-mem-ref-name = 'getFrequency';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a8240278970ae8bf7283e14714b4329ad';
        sec-mem-ref-line = '829';
        sec-mem-ref-name = 'getCurrentFrequency';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a350a2033671a7620d4b9290a2347e185';
        sec-mem-ref-line = '1350';
        sec-mem-ref-name = 'getRdsStatus';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1ad72759f246cceb147bf031b72173b0ca';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'currentStep';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '894';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
current frequency
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a794f6fe7987e146a0135b8e6fabec55c';
        sec-mem-ref-line = '417';
        sec-mem-ref-name = 'setFrequencyStep';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ac0fcfd64dcf30b11d4dc219d9f7fc5d9';
        sec-mem-ref-line = '427';
        sec-mem-ref-name = 'frequencyUp';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a93fff524a6f900ac91eb1222ce73f9ba';
        sec-mem-ref-line = '442';
        sec-mem-ref-name = 'frequencyDown';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a43c5ea36995a3897820e0170d94c81f4';
        sec-mem-ref-line = '499';
        sec-mem-ref-name = 'setAM';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a673bc4b17d564bb6e7f3e9a61d35fbb3';
        sec-mem-ref-line = '524';
        sec-mem-ref-name = 'setFM';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1a157e4ae8cd53396973584aa10888cd47';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'lastMode';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= -1
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '896';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
current steps
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a753390952a1f2c2a98343979f1f3daa0';
        sec-mem-ref-line = '458';
        sec-mem-ref-name = 'setAM';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1acd89e7b8adefcbc4e89f802acb915906';
        sec-mem-ref-line = '478';
        sec-mem-ref-name = 'setFM';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a3e907ddf560a0c8286fa55768701b3da';
        sec-mem-ref-line = '1960';
        sec-mem-ref-name = 'setSSB';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1a650490ab792c1853c97f600661ecdaa1';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'currentAvcAmMaxGain';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 48
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '898';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Store the last mode used.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a753390952a1f2c2a98343979f1f3daa0';
        sec-mem-ref-line = '458';
        sec-mem-ref-name = 'setAM';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a98d12da4b801493a350ecf770f4f2d8b';
        sec-mem-ref-line = '956';
        sec-mem-ref-name = 'setAvcAmMaxGain';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1a4439c40db789f02371ea0fb9b22650c5';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
si47x_frequency
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'currentFrequency';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '900';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Automatic Volume Control Gain for AM - Default 48.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a63d205f2d3169ba877a2bd2ee28d224f';
        sec-mem-ref-line = '376';
        sec-mem-ref-name = 'setFrequency';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1a8253ae2f3c87a6943776f8a63a691ca3';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
si47x_set_frequency
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'currentFrequencyParams';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '901';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
data structure to get current frequency
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a8bc001cb28dc8fbd88ba0fa7024eca39';
        sec-mem-ref-line = '163';
        sec-mem-ref-name = 'setPowerUp';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aaceadaaf0835e3db124d1b36f2aebd3c';
        sec-mem-ref-line = '343';
        sec-mem-ref-name = 'setTuneFrequencyAntennaCapacitor';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a63d205f2d3169ba877a2bd2ee28d224f';
        sec-mem-ref-line = '376';
        sec-mem-ref-name = 'setFrequency';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a51d816112d974f10306d9d001667395a';
        sec-mem-ref-line = '1043';
        sec-mem-ref-name = 'setTuneFrequencyFast';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a667fead0c7b2658c2b932370ad4e4f88';
        sec-mem-ref-line = '1044';
        sec-mem-ref-name = 'getTuneFrequencyFreeze';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1aee22a5ce06d4948fad2365a7b62fbd8d';
        sec-mem-ref-line = '1045';
        sec-mem-ref-name = 'setTuneFrequencyFreeze';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1a9edd8cc9254695631795e7efc008eb28';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
si47x_rqs_status
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'currentRqsStatus';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '902';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1a7ad35ba002b73b66e9ce97b304854695';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
si47x_response_status
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'currentStatus';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '903';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
current Radio SIgnal Quality status
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7e88bb573604d465536c13554d5c61f8';
        sec-mem-ref-line = '809';
        sec-mem-ref-name = 'getFrequency';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a5c0f4036a7fbbd11a26f1f6f4579d3cd';
        sec-mem-ref-line = '841';
        sec-mem-ref-name = 'getStatus';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1ad194137a6a712a599e3c26e5b6357594';
        sec-mem-ref-line = '953';
        sec-mem-ref-name = 'getSignalQualityInterrupt';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a97dc44d9927ea58730a18fb6baa6867f';
        sec-mem-ref-line = '954';
        sec-mem-ref-name = 'getRadioDataSystemInterrupt';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a2cc659bddc5efc7695f2a6031c2edd4b';
        sec-mem-ref-line = '955';
        sec-mem-ref-name = 'getTuneCompleteTriggered';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a69723840497ed693d6f9a4e840ab07c9';
        sec-mem-ref-line = '956';
        sec-mem-ref-name = 'getStatusError';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1afcb38f53b6eb71cadcefa0bb472ca943';
        sec-mem-ref-line = '957';
        sec-mem-ref-name = 'getStatusCTS';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1ab8a51de592fd40fdd872039b3c70716f';
        sec-mem-ref-line = '958';
        sec-mem-ref-name = 'getACFIndicator';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a19e96565a2dec7ec68469f45c8d3e084';
        sec-mem-ref-line = '959';
        sec-mem-ref-name = 'getBandLimit';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1afb19da8a05320d7f38cca8325725edfd';
        sec-mem-ref-line = '960';
        sec-mem-ref-name = 'getStatusValid';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1aeeefd12b49dbc764e0f45fe208441482';
        sec-mem-ref-line = '961';
        sec-mem-ref-name = 'getReceivedSignalStrengthIndicator';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1ac0bd4daaa321ef8956dca4d1e4e5cd3c';
        sec-mem-ref-line = '962';
        sec-mem-ref-name = 'getStatusSNR';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a0f9b5438a6f92c8f2e538ee640f353ab';
        sec-mem-ref-line = '963';
        sec-mem-ref-name = 'getStatusMULT';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a3905d6551992b4dd51d13f05978d9081';
        sec-mem-ref-line = '964';
        sec-mem-ref-name = 'getAntennaTuningCapacitor';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1ad03d545e53a7ca2fe072a7b03d60910e';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
si47x_firmware_information
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'firmwareInfo';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '904';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
current device status
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a2fbc7e2187a7c645879623100dbc8502';
        sec-mem-ref-line = '250';
        sec-mem-ref-name = 'getFirmware';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1ab26fbd99452daaf18875ff1c3c35d081';
        sec-mem-ref-line = '1011';
        sec-mem-ref-name = 'getFirmwarePN';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1ac2f451cb7320b66d8e08698dcacd50d0';
        sec-mem-ref-line = '1012';
        sec-mem-ref-name = 'getFirmwareFWMAJOR';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a74b68fcd5718520fc0683977dfc18fc8';
        sec-mem-ref-line = '1013';
        sec-mem-ref-name = 'getFirmwareFWMINOR';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a58b99a8d5ec2199cb5f2105675aa7a56';
        sec-mem-ref-line = '1014';
        sec-mem-ref-name = 'getFirmwarePATCHH';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1ac10b3cd3875985e2c129fea14e2bc47a';
        sec-mem-ref-line = '1015';
        sec-mem-ref-name = 'getFirmwarePATCHL';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1ab57870d69969e73265e9cffe2a73d868';
        sec-mem-ref-line = '1016';
        sec-mem-ref-name = 'getFirmwareCMPMAJOR';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a883645d266a612ce07d71fdb2cd81e5f';
        sec-mem-ref-line = '1017';
        sec-mem-ref-name = 'getFirmwareCMPMINOR';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1acd363d9111e4a57cf2e1167634bc1b5f';
        sec-mem-ref-line = '1018';
        sec-mem-ref-name = 'getFirmwareCHIPREV';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1a42d5c6991d90ea1c8ae35b74f8bccc48';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
si47x_rds_status
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'currentRdsStatus';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '905';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
firmware information
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a350a2033671a7620d4b9290a2347e185';
        sec-mem-ref-line = '1350';
        sec-mem-ref-name = 'getRdsStatus';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1af1e67b201799a9e8d7208a32a65656b5';
        sec-mem-ref-line = '1412';
        sec-mem-ref-name = 'getRdsPI';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aa35366e5cded7b864f7268a7e4a8dbe9';
        sec-mem-ref-line = '1424';
        sec-mem-ref-name = 'getRdsGroupType';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a05f76a0a0ebda813483f1df24e890904';
        sec-mem-ref-line = '1440';
        sec-mem-ref-name = 'getRdsFlagAB';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ab1ed04a109330e7e9206483c7cdf5ef9';
        sec-mem-ref-line = '1460';
        sec-mem-ref-name = 'getRdsTextSegmentAddress';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1af9b6cb614d1b01b11bb23c19e6deb8b9';
        sec-mem-ref-line = '1474';
        sec-mem-ref-name = 'getRdsVersionCode';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ac28fa3818d4f900c4f4ba6be10c1405b';
        sec-mem-ref-line = '1491';
        sec-mem-ref-name = 'getRdsProgramType';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ab1f4f137139b40fe386ca51586999e50';
        sec-mem-ref-line = '1506';
        sec-mem-ref-name = 'getNext2Block';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1adb0a3c39aeacba0faf39aadd9465021f';
        sec-mem-ref-line = '1538';
        sec-mem-ref-name = 'getNext4Block';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a12d917629b78fffebac5ecf8f2936921';
        sec-mem-ref-line = '1594';
        sec-mem-ref-name = 'getRdsText0A';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae54d0f5562ca7615c3b90bee00c29ab4';
        sec-mem-ref-line = '1625';
        sec-mem-ref-name = 'getRdsText2A';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a806d5cfbbeb6ca1299ce20b1220fdb18';
        sec-mem-ref-line = '1657';
        sec-mem-ref-name = 'getRdsText2B';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aa8436bb156f3ac8321c65941be42fdba';
        sec-mem-ref-line = '1688';
        sec-mem-ref-name = 'getRdsTime';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1ac283a8a89cc885c2740c65a7128ff7ef';
        sec-mem-ref-line = '1079';
        sec-mem-ref-name = 'getRdsSyncLost';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a78e906f12771490771c624be1777784d';
        sec-mem-ref-line = '1080';
        sec-mem-ref-name = 'getRdsSyncFound';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a561a052a8c737302368274c774d8c129';
        sec-mem-ref-line = '1081';
        sec-mem-ref-name = 'getRdsNewBlockA';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1aff740d85cc04c257f53c7e910bd45fcf';
        sec-mem-ref-line = '1082';
        sec-mem-ref-name = 'getRdsNewBlockB';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a6e899b37cbc3dcd0ab969724e4008f0f';
        sec-mem-ref-line = '1083';
        sec-mem-ref-name = 'getRdsSync';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a8db437efc42a81466d8daf4dcc35c50c';
        sec-mem-ref-line = '1084';
        sec-mem-ref-name = 'getGroupLost';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a819c370ff03c52a527fbc85f9877f526';
        sec-mem-ref-line = '1085';
        sec-mem-ref-name = 'getNumRdsFifoUsed';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1adf2d1f37ec9edf95e14aecb3cdc7417d';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
si47x_agc_status
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'currentAgcStatus';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '906';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
current RDS status
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aaae187575b9868ff427c063c3a6cca2a';
        sec-mem-ref-line = '885';
        sec-mem-ref-name = 'getAutomaticGainControl';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1a74ee9c99b1e092f7b1efa2f771f38324';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
si47x_ssb_mode
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'currentSSBMode';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '907';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
current AGC status
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a9224e7d4ef14c887da96dbefd2dcefd3';
        sec-mem-ref-line = '1835';
        sec-mem-ref-name = 'setSSBConfig';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a6cde26a5abf759a628012d1457d85c72';
        sec-mem-ref-line = '1858';
        sec-mem-ref-name = 'setSSBDspAfc';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a91251dfc2ff9488aaef3aa1a528097d9';
        sec-mem-ref-line = '1872';
        sec-mem-ref-name = 'setSSBSoftMute';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1acacf1dac4c0ec170d1da629dd1fd30cb';
        sec-mem-ref-line = '1885';
        sec-mem-ref-name = 'setSSBAutomaticVolumeControl';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1afc5e87c50a1eba6de9504c114cc1cb70';
        sec-mem-ref-line = '1898';
        sec-mem-ref-name = 'setSSBAvcDivider';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae9d50b24642784943fefedbac944a8e8';
        sec-mem-ref-line = '1914';
        sec-mem-ref-name = 'setSBBSidebandCutoffFilter';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a6b2ad4d027463262350134490d16bf32';
        sec-mem-ref-line = '1943';
        sec-mem-ref-name = 'setSSBAudioBandwidth';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae1d866bfc4cb37c4268c8942b4b4d062';
        sec-mem-ref-line = '2006';
        sec-mem-ref-name = 'sendSSBModeProperty';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1a1331b701088bda20bf0844e2e38be142';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
si473x_powerup
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'powerUp';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '909';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
indicates if USB or LSB
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a8bc001cb28dc8fbd88ba0fa7024eca39';
        sec-mem-ref-line = '163';
        sec-mem-ref-name = 'setPowerUp';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a3e228da65641f4dcf4253262e19bde9b';
        sec-mem-ref-line = '206';
        sec-mem-ref-name = 'radioPowerUp';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a0fcfd8e487c594707b3f2aaa71a86d68';
        sec-mem-ref-line = '2116';
        sec-mem-ref-name = 'ssbPowerUp';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1aa5220772c468fcfb69b5d16163de73fc';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'volume';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 32
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '911';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4735_1a05730ca069db4be7c45a9c92f29d3b52';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'currentSsbStatus';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '913';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '871';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
SI4735 Class.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
SI4735 Class definition




This class implements all functions to help you to control the Si47XX devices. 
This library was built based on “Si47XX PROGRAMMING GUIDE; AN332 ”. 
It also can be used on all members of the SI473X family respecting, of course, the features available 
for each IC version.  * These functionalities can be seen in the comparison matrix shown in 
table 1 (Product Family Function); pages 2 and 3 of the programming guide.
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 8;
        node-label = 'si473x_powerup';
        node-link = {
          node-link-id = 'unionsi473x__powerup';
        };
      }; /* node */
      node = {
        node-id    = 9;
        node-label = 'si47x_rqs_status';
        node-link = {
          node-link-id = 'unionsi47x__rqs__status';
        };
      }; /* node */
      node = {
        node-id    = 10;
        node-label = 'si47x_frequency';
        node-link = {
          node-link-id = 'unionsi47x__frequency';
        };
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'si47x_response_status';
        node-link = {
          node-link-id = 'unionsi47x__response__status';
        };
      }; /* node */
      node = {
        node-id    = 5;
        node-label = 'si47x_set_frequency';
        node-link = {
          node-link-id = 'unionsi47x__set__frequency';
        };
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'si47x_rds_status';
        node-link = {
          node-link-id = 'unionsi47x__rds__status';
        };
      }; /* node */
      node = {
        node-id    = 4;
        node-label = 'si47x_ssb_mode';
        node-link = {
          node-link-id = 'unionsi47x__ssb__mode';
        };
      }; /* node */
      node = {
        node-id    = 7;
        node-label = 'si47x_firmware_information';
        node-link = {
          node-link-id = 'unionsi47x__firmware__information';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'SI4735';
        node-link = {
          node-link-id = 'class_s_i4735';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
currentRdsStatus
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
currentStatus
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '4';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
currentSSBMode
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '5';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
currentFrequencyParams
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '6';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
currentAgcStatus
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '7';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
firmwareInfo
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '8';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
powerUp
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '9';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
currentRqsStatus
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '10';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
currentFrequency
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 6;
        node-label = 'si47x_agc_status';
        node-link = {
          node-link-id = 'unionsi47x__agc__status';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
union = {
  cp-id     = 'unionsi4735__digital__output__format';
  cp-name   = 'si4735_digital_output_format';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi4735__digital__output__format_1aad9941e3bc74c7621c493dfa8d066521';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'OSIZE';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '805';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi4735__digital__output__format_1a810bfc21a334fbf3bf53b8dd934bb603';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'OMONO';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '806';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Digital Output Audio Sample Precision (0=16 bits, 1=20 bits, 2=24 bits, 3=8bits).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aea652d358b4b586b6d5964ceb8eb7c81';
        sec-mem-ref-line = '777';
        sec-mem-ref-name = 'SI4735::digitalOutputFormat';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi4735__digital__output__format_1ae2f67694a90085fc652649e37b3984b1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'OMODE';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '807';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Digital Output Mono Mode (0=Use mono/stereo blend ).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aea652d358b4b586b6d5964ceb8eb7c81';
        sec-mem-ref-line = '777';
        sec-mem-ref-name = 'SI4735::digitalOutputFormat';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi4735__digital__output__format_1a43a50ac17d929c197fae422f1fd648e3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'OFALL';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '808';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Digital Output Mode (0000=I2S, 0110 = Left-justified, 1000 = MSB at second DCLK after DFS pulse, 1100 = MSB at first DCLK after DFS pulse).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aea652d358b4b586b6d5964ceb8eb7c81';
        sec-mem-ref-line = '777';
        sec-mem-ref-name = 'SI4735::digitalOutputFormat';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi4735__digital__output__format_1ab1a6803d3f409753fc7ed9e145ff3813';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dummy';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '809';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Digital Output DCLK Edge (0 = use DCLK rising edge, 1 = use DCLK falling edge)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi4735__digital__output__format_1a776ee9e744dd7da8e747d0c881c5d205';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si4735_digital_output_format::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '810';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi4735__digital__output__format_1a0fa2c05d8877d3c680e904842993c33e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '811';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '803';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Digital audio output format data structure (Property 0x0102. DIGITAL_OUTPUT_FORMAT).
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Used to configure: DCLK edge, data format, force mono, and sample precision.

@see Si47XX PROGRAMMING GUIDE; AN332; page 195. 
_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'structsi4735__digital__output__sample__rate';
  cp-name   = 'si4735_digital_output_sample_rate';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structsi4735__digital__output__sample__rate_1a9988ba829a46409f23d7cb9bb0f156d9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DOSR';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '824';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '823';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Digital audio output sample structure (Property 0x0104. DIGITAL_OUTPUT_SAMPLE_RATE).
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Used to enable digital audio output and to configure the digital audio output sample rate in samples per second (sps).

@see Si47XX PROGRAMMING GUIDE; AN332; page 196. 
_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'unionsi473x__powerup';
  cp-name   = 'si473x_powerup';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi473x__powerup_1aa6f9fd2636a0a6797755b99c343ef648';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FUNC';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '177';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi473x__powerup_1ae68c435fb0ff2ad54bc17ac794a482c1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'XOSCEN';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '178';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Function (0 = FM Receive; 1–14 = Reserved; 15 = Query Library ID)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a8bc001cb28dc8fbd88ba0fa7024eca39';
        sec-mem-ref-line = '163';
        sec-mem-ref-name = 'SI4735::setPowerUp';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a0fcfd8e487c594707b3f2aaa71a86d68';
        sec-mem-ref-line = '2116';
        sec-mem-ref-name = 'SI4735::ssbPowerUp';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi473x__powerup_1aff3f1655e972eff4630c66f0b4ec7704';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'PATCH';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '179';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Crystal Oscillator Enable (0 = crystal oscillator disabled; 1 = Use crystal oscillator and and OPMODE=ANALOG AUDIO) .
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a8bc001cb28dc8fbd88ba0fa7024eca39';
        sec-mem-ref-line = '163';
        sec-mem-ref-name = 'SI4735::setPowerUp';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a0fcfd8e487c594707b3f2aaa71a86d68';
        sec-mem-ref-line = '2116';
        sec-mem-ref-name = 'SI4735::ssbPowerUp';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi473x__powerup_1a6da21e782c18e0d15791f712e602bf0f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GPO2OEN';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '180';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Patch Enable (0 = Boot normally; 1 = Copy non-volatile memory to RAM).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a8bc001cb28dc8fbd88ba0fa7024eca39';
        sec-mem-ref-line = '163';
        sec-mem-ref-name = 'SI4735::setPowerUp';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a0fcfd8e487c594707b3f2aaa71a86d68';
        sec-mem-ref-line = '2116';
        sec-mem-ref-name = 'SI4735::ssbPowerUp';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi473x__powerup_1a21297439eccc575f7c0a3228a4061fa7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CTSIEN';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '181';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
GPO2 Output Enable (0 = GPO2 output disabled; 1 = GPO2 output enabled).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a8bc001cb28dc8fbd88ba0fa7024eca39';
        sec-mem-ref-line = '163';
        sec-mem-ref-name = 'SI4735::setPowerUp';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a0fcfd8e487c594707b3f2aaa71a86d68';
        sec-mem-ref-line = '2116';
        sec-mem-ref-name = 'SI4735::ssbPowerUp';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi473x__powerup_1a5deeab3cdc44cc652b6e8867dd8e9833';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'OPMODE';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '183';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
CTS Interrupt Enable (0 = CTS interrupt disabled; 1 = CTS interrupt enabled).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a8bc001cb28dc8fbd88ba0fa7024eca39';
        sec-mem-ref-line = '163';
        sec-mem-ref-name = 'SI4735::setPowerUp';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a0fcfd8e487c594707b3f2aaa71a86d68';
        sec-mem-ref-line = '2116';
        sec-mem-ref-name = 'SI4735::ssbPowerUp';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi473x__powerup_1a1d76ab95c8f37f3ee9f2266e0a818455';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si473x_powerup::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'arg';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '184';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi473x__powerup_1ab82e658c5816b0c31e32e100ff776ebe';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '185';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '173';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Power Up arguments data type.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
@see Si47XX PROGRAMMING GUIDE; AN332; pages 64 and 65
_EnD_oF_dEf_TeXt_;
}; /* union */
union = {
  cp-id     = 'unionsi47x__agc__overrride';
  cp-name   = 'si47x_agc_overrride';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__agc__overrride_1a7e92f8e598d792f6d0b11e2bd921e01b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AGCDIS';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '739';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__agc__overrride_1aa4a9fc283d2f8345a0815d463f561e6d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '740';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__agc__overrride_1a65e8a65b69cd633b05480655a525904d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AGCIDX';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '742';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__agc__overrride_1ae235ce810f1b7d481def598b0e7c5234';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_agc_overrride::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'arg';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '743';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__agc__overrride_1a7b8218655c25e1f8d75d92818ec24f20';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '744';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '735';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
If FM, Overrides AGC setting by disabling the AGC and forcing the LNA to have a certain gain that ranges between 0 
(minimum attenuation) and 26 (maximum attenuation).
If AM, overrides the AGC setting by disabling the AGC and forcing the gain index that ranges between 0

@see Si47XX PROGRAMMING GUIDE; AN332; For FM page 81; for AM page 143
_EnD_oF_dEf_TeXt_;
}; /* union */
union = {
  cp-id     = 'unionsi47x__agc__status';
  cp-name   = 'si47x_agc_status';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__agc__status_1a46cac3781dee36161e8ac2a9bf507ad5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'STCINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '710';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__agc__status_1ac7467eba73b0a1354f96210196b9702e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY1';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '711';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__agc__status_1a0fc5f60be89de344c288ccbe90a6dda4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '712';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__agc__status_1ae4023d6a4ab935f3ceedba6695964ab5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RSQINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '713';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__agc__status_1a1a7a0bd5c44fc89974005235a8b4e1ae';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY2';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '714';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__agc__status_1a4483c8293b7c3779b3564da97eee97d1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ERR';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '715';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__agc__status_1a0ce35e707134980da54508249216fb1c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CTS';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '716';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__agc__status_1a329da2e6ccd1656d2a6b9c6b1483faeb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AGCDIS';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '718';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__agc__status_1acb16cb23caa69a764a8e14bf00bd8be0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '719';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__agc__status_1a542909611f2b6093f46af7362ae9d9fd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AGCIDX';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '721';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__agc__status_1aa6916dac978ef9cfd53ffe7783c4d8da';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_agc_status::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '722';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__agc__status_1a2f03c32a90a7991f2433bf8a5291885d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '723';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '706';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
AGC data types
FM / AM and SSB structure to AGC

@see Si47XX PROGRAMMING GUIDE; AN332; For FM page 80; for AM page 142
@see AN332 REV 0.8 Universal Programming Guide Amendment for SI4735-D60 SSB and NBFM patches; page 18. 
_EnD_oF_dEf_TeXt_;
}; /* union */
union = {
  cp-id     = 'unionsi47x__antenna__capacitor';
  cp-name   = 'si47x_antenna_capacitor';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__antenna__capacitor_1a327b39363f0d152ba8a5f4c7252fc358';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ANTCAPL';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '210';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__antenna__capacitor_1a26952301dd2779d1976f92c2e521c476';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ANTCAPH';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '211';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Antenna Tuning Capacitor High byte.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aaceadaaf0835e3db124d1b36f2aebd3c';
        sec-mem-ref-line = '343';
        sec-mem-ref-name = 'SI4735::setTuneFrequencyAntennaCapacitor';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__antenna__capacitor_1a29548a9c68843bb6aa86eabcd33a9633';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_antenna_capacitor::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '212';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__antenna__capacitor_1aa59f9604df88a98b91295b0a9c009bbd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'value';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '213';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '207';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Antenna Tuning Capacitor data type manupulation.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* union */
union = {
  cp-id     = 'unionsi47x__bandwidth__config';
  cp-name   = 'si47x_bandwidth_config';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__bandwidth__config_1a9126e88e995ef2b30a3b3b0b3a57e4b8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AMCHFLT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '765';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__bandwidth__config_1a9782eb3c7fdb503308a9efa0b2feca59';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY1';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '766';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Selects the bandwidth of the AM channel filter.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__bandwidth__config_1a83bcbed43c2a8b60e237189c24690706';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AMPLFLT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '767';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__bandwidth__config_1aa5135cee2e47231eee7ade4cdbe6a3c7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY2';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '768';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Enables the AM Power Line Noise Rejection Filter.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__bandwidth__config_1aad8c326eb12c8fe5dc1dc1d2bf78e37c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_bandwidth_config::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'param';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '769';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__bandwidth__config_1aa8fd81f2f62788fac6c3cce7b1ea765d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '770';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '762';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
The bandwidth of the AM channel filter data type
AMCHFLT values: 0 = 6 kHz Bandwidth                    
<br>
                1 = 4 kHz Bandwidth
                2 = 3 kHz Bandwidth
                3 = 2 kHz Bandwidth
                4 = 1 kHz Bandwidth
                5 = 1.8 kHz Bandwidth
                6 = 2.5 kHz Bandwidth, gradual roll off
                7–15 = Reserved (Do not use)

@see Si47XX PROGRAMMING GUIDE; AN332; pages 125 and 151
_EnD_oF_dEf_TeXt_;
}; /* union */
union = {
  cp-id     = 'unionsi47x__firmware__information';
  cp-name   = 'si47x_firmware_information';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__information_1a11c6e65b83ca64f5b9fc45190f45a8ad';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'STCINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '310';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__information_1aef521ef2e42eb830ea5b14bcdf6d0551';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY1';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '311';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__information_1af50b483a7662b33db230842fbe21d47a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '312';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__information_1a5de0ac503dac166199f5dda90b0236d3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RSQINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '313';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__information_1abcde7d1a90346f3a7a8601cc66e29c71';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY2';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '314';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__information_1a7155c52df7d6e6ff21b9f9eda85e7782';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ERR';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '315';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__information_1ab219d98631b91d0deb504578a3ffe3bc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CTS';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '316';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__information_1a76c4c996809c5212f7dae2b3b7c41bf4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'PN';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '317';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__information_1ace4719bdaf8df7e8b46c149032146ff9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FWMAJOR';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '318';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP1 - Final 2 digits of Part Number (HEX).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1ac2f451cb7320b66d8e08698dcacd50d0';
        sec-mem-ref-line = '1012';
        sec-mem-ref-name = 'SI4735::getFirmwareFWMAJOR';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__information_1a6ea81f71d748770422b1d0da50225cc9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FWMINOR';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '319';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP2 - Firmware Major Revision (ASCII).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a74b68fcd5718520fc0683977dfc18fc8';
        sec-mem-ref-line = '1013';
        sec-mem-ref-name = 'SI4735::getFirmwareFWMINOR';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__information_1ac0d0b792ff45f27e75530c6a1a7395e5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'PATCHH';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '320';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP3 - Firmware Minor Revision (ASCII).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a58b99a8d5ec2199cb5f2105675aa7a56';
        sec-mem-ref-line = '1014';
        sec-mem-ref-name = 'SI4735::getFirmwarePATCHH';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__information_1adb11fe484e59e3f8bb77d675d9b03950';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'PATCHL';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '321';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP4 - Patch ID High byte (HEX).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1ac10b3cd3875985e2c129fea14e2bc47a';
        sec-mem-ref-line = '1015';
        sec-mem-ref-name = 'SI4735::getFirmwarePATCHL';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__information_1ac18795035fa07c597e8a6c3f10745984';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CMPMAJOR';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '322';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP5 - Patch ID Low byte (HEX).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1ab57870d69969e73265e9cffe2a73d868';
        sec-mem-ref-line = '1016';
        sec-mem-ref-name = 'SI4735::getFirmwareCMPMAJOR';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__information_1a66dcdf7f96777f5ca05fdadfd3c6f764';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CMPMINOR';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '323';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP6 - Component Major Revision (ASCII).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a883645d266a612ce07d71fdb2cd81e5f';
        sec-mem-ref-line = '1017';
        sec-mem-ref-name = 'SI4735::getFirmwareCMPMINOR';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__information_1aa88ca593c77a71ca1726ab48ebd70ee3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CHIPREV';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '324';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP7 - Component Minor Revision (ASCII).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1acd363d9111e4a57cf2e1167634bc1b5f';
        sec-mem-ref-line = '1018';
        sec-mem-ref-name = 'SI4735::getFirmwareCHIPREV';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__information_1a62ecd35a00b7a8bd4faaf82cd69d522e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_firmware_information::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'resp';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '326';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__information_1aa2ba7bbaa745c8ca18c83226246654e5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '327';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '306';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Data representation for  Firmware Information (GET_REV)
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
The part number, chip revision, firmware revision, patch revision and component revision numbers. 

@see Si47XX PROGRAMMING GUIDE; AN332; pages 66 and 131 
_EnD_oF_dEf_TeXt_;
}; /* union */
union = {
  cp-id     = 'unionsi47x__firmware__query__library';
  cp-name   = 'si47x_firmware_query_library';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__query__library_1ad07e512a1eb23e60eece86e718b7ecea';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'STCINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '346';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__query__library_1aa360dd8ff311d0d03c7f370838ff1990';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY1';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '347';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__query__library_1a75e1d08338572d095f5a328b7f49bfde';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '348';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__query__library_1a30ddfa3ce3b2b47c8158f863d0786c15';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RSQINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '349';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__query__library_1aac193d548ce3d80de2f8c9d7b790978a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY2';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '350';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__query__library_1a60468fd4aadf3086bc6f7096e75b9573';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ERR';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '351';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__query__library_1a83d105d2e1d15302b29aea53c94d9ffb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CTS';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '352';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__query__library_1a57a47a34ae760b8383f081ca73cb679c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'PN';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '353';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__query__library_1ab950d4b9a969762568b25a1c5692bc73';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FWMAJOR';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '354';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP1 - Final 2 digits of Part Number (HEX).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__query__library_1a42d8ea389edcd3e3464f8215493c7f0b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FWMINOR';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '355';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP2 - Firmware Major Revision (ASCII).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__query__library_1aac2622049ed120c5be5a9d2599d895b2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RESERVED1';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '356';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP3 - Firmware Minor Revision (ASCII).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__query__library_1a92d947bf9624b09cb7a3dd30a1f02e18';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RESERVED2';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '357';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP4 - Reserved, various values.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__query__library_1a9428364e365a3638261b93acb0ccd0e2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CHIPREV';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '358';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP5 - Reserved, various values.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__query__library_1a5090c975c3786f9c5925b9f7bdb09f51';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'LIBRARYID';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '359';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP6 - Chip Revision (ASCII).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__query__library_1a328de8db27422fb20f1335f29e67b8ed';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_firmware_query_library::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'resp';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '361';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__firmware__query__library_1a5235c5b07b71d6dc4c76c275a091c63c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '362';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '342';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Firmware Query Library ID response.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Used to represent the response of a power up command with FUNC = 15 (patch)

To confirm that the patch is compatible with the internal device library revision, the library 
revision should be confirmed by issuing the POWER_UP command with Function = 15 (query library ID)

@see Si47XX PROGRAMMING GUIDE; AN332; page 12 
_EnD_oF_dEf_TeXt_;
}; /* union */
union = {
  cp-id     = 'unionsi47x__frequency';
  cp-name   = 'si47x_frequency';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__frequency_1abe921825c86d54f9f38411677a489d89';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FREQL';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '197';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__frequency_1ae85fcb4329c600511e2127e1c5029f8c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FREQH';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '198';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Tune Frequency High byte.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a63d205f2d3169ba877a2bd2ee28d224f';
        sec-mem-ref-line = '376';
        sec-mem-ref-name = 'SI4735::setFrequency';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7e88bb573604d465536c13554d5c61f8';
        sec-mem-ref-line = '809';
        sec-mem-ref-name = 'SI4735::getFrequency';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a55cf9a091d314a1aa21552f2254f756f';
        sec-mem-ref-line = '1790';
        sec-mem-ref-name = 'SI4735::setSSBBfo';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__frequency_1a1a992fcfef59a6c6b1612e006264840f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_frequency::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '199';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__frequency_1aad12ac434ec9907e90a3f6b95377ca76';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'value';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '200';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '194';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Represents how the  frequency is stored in the si4735.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
It helps to convert frequency in uint16_t to two bytes (uint8_t) (FREQL and FREQH)  
<br>
_EnD_oF_dEf_TeXt_;
}; /* union */
union = {
  cp-id     = 'unionsi47x__property';
  cp-name   = 'si47x_property';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__property_1a03bfb4b4b42b829deecc04647a1331d7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'byteLow';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '394';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__property_1a245899dc4f66d03abb75401ffb6df8f2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'byteHigh';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '395';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__property_1ae9ac96f5c6d10f227a6926f787232e27';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_property::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '396';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__property_1a7c04205c5a1798b35b738b2908853bfa';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'value';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '397';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '391';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Data type to deal with SET_PROPERTY command.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Property Data type (help to deal with SET_PROPERTY command on si473X)
_EnD_oF_dEf_TeXt_;
}; /* union */
union = {
  cp-id     = 'unionsi47x__rds__blocka';
  cp-name   = 'si47x_rds_blocka';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__blocka_1aca7324b126cebc5c0993e4d6f1a3a67e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'pi';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '583';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__blocka_1a1a7f496c8e0b77574f49c7808aeb186c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_rds_blocka::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '584';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__blocka_1a0143e0506e13766406571bd29ca604a6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'highValue';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '587';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__blocka_1a1148360b97c0c704c46a00ceb36360b4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'lowValue';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '588';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__blocka_1ad64069e22c176c0e1b12e9a23eb54f20';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_rds_blocka::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '589';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '580';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Block A data type.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* union */
union = {
  cp-id     = 'unionsi47x__rds__blockb';
  cp-name   = 'si47x_rds_blockb';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__blockb_1ae85fb9b6893b7ae94df7d9bdf30d8fb4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'address';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '613';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__blockb_1ab328b512ede3263b8cc3ee358280199c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DI';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '614';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__blockb_1a096ab1230df03262dd29149a6154e08f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'MS';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '615';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__blockb_1afc5d18af2058dc55887e01c2e40c6025';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'TA';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '616';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__blockb_1ae0500c0f2c43a9701e8d19353bc12438';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'programType';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '617';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__blockb_1a963a0cba84ca0fa8e7443c927bfc0322';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'trafficProgramCode';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '618';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__blockb_1a30c1925754d5eaca0dfa29739bc90244';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'versionCode';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '619';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__blockb_1a15f89b1b22c05a2d7f873f0251c549e7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'groupType';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '620';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__blockb_1a059a039022499410d7d337fe96e3cbab';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_rds_blockb::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'group0';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '621';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__blockb_1a59a87427b5d83b59d705780ea2069cc0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'textABFlag';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '625';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__blockb_1aa6d5cedf34d36a7719b521d02b8a3666';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_rds_blockb::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'group2';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '630';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__blockb_1a62c7cb3e50672c3244d0098b449ebe9b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'content';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '633';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__blockb_1ad6bf3043057d5ccfb4294cad28c7b9a5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_rds_blockb::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '639';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__blockb_1ae93ff5d62ed6a769b50bb25cb808fa2f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'lowValue';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '642';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__blockb_1a0bf139b12b0eed8a0d20a7f3f60cb634';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'highValue';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '643';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__blockb_1a004a14fe7748648a3f4248c63075f472';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_rds_blockb::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '644';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '610';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Block B data type.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
For GCC on System-V ABI on 386-compatible (32-bit processors), the following stands:

1) Bit-fields are allocated from right to left (least to most significant).
2) A bit-field must entirely reside in a storage unit appropriate for its declared type.
   Thus a bit-field never crosses its unit boundary.
3) Bit-fields may share a storage unit with other struct/union members, including members that are not bit-fields.
   Of course, struct members occupy different parts of the storage unit.
4) Unnamed bit-fields' types do not affect the alignment of a structure or union, although individual 
   bit-fields' member offsets obey the alignment constraints.   
<br>

@see also Si47XX PROGRAMMING GUIDE; AN332; pages 78 and 79
@see also https://en.wikipedia.org/wiki/Radio_Data_System
_EnD_oF_dEf_TeXt_;
}; /* union */
union = {
  cp-id     = 'unionsi47x__rds__command';
  cp-name   = 'si47x_rds_command';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__command_1af342e43abded03f247b1366762be7e09';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'INTACK';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '461';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__command_1a0a99bc3eb133aef468004ee950b77cdd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'MTFIFO';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '462';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__command_1a502e1f710ac40b85373d662512fcaaaa';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'STATUSONLY';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '463';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__command_1a3b27e9ff8048cbc2f8ec469afe0088dc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dummy';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '464';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__command_1a41282c2bfe9a791181ba01c6787840ec';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_rds_command::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'arg';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '465';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__command_1a3c151920e2f167bfa7c47193a20ecb58';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '466';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '458';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Data type for RDS Status command and response information.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
@see Si47XX PROGRAMMING GUIDE; AN332; pages 77 and 78 
@see Also https://en.wikipedia.org/wiki/Radio_Data_System
_EnD_oF_dEf_TeXt_;
}; /* union */
union = {
  cp-id     = 'unionsi47x__rds__config';
  cp-name   = 'si47x_rds_config';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__config_1ac6a693161ec0198fd24255e1dbcbf668';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSEN';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '565';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__config_1a849a3b2c92974fdfb9542db006e0976d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY1';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '566';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1 = RDS Processing Enable.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ad9718a85c79a311c26997bbda20f2351';
        sec-mem-ref-line = '1265';
        sec-mem-ref-name = 'SI4735::setRdsConfig';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__config_1a892701752004744896276653c17a5793';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BLETHD';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '567';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__config_1a2a243d520165c64e15fbad8b7ac2f5d9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BLETHC';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '568';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Block Error Threshold BLOCKD.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ad9718a85c79a311c26997bbda20f2351';
        sec-mem-ref-line = '1265';
        sec-mem-ref-name = 'SI4735::setRdsConfig';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__config_1a8fde60b58e168d978e259f3899ce5e0b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BLETHB';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '569';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Block Error Threshold BLOCKC.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ad9718a85c79a311c26997bbda20f2351';
        sec-mem-ref-line = '1265';
        sec-mem-ref-name = 'SI4735::setRdsConfig';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__config_1a985f772fda4648f338757b919de189f0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BLETHA';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '570';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Block Error Threshold BLOCKB.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ad9718a85c79a311c26997bbda20f2351';
        sec-mem-ref-line = '1265';
        sec-mem-ref-name = 'SI4735::setRdsConfig';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__config_1af43318436df83ca903da3c6eaf797c5f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_rds_config::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'arg';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '571';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__config_1ace0fc779a1af19098b03178fcbaafffe';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '572';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '562';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Data type for FM_RDS_CONFIG Property.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
IMPORTANT: all block errors must be less than or equal the associated block error threshold for the group 
to be stored in the RDS FIFO. 
0 = No errors; 1 = 1–2 bit errors detected and corrected; 2 = 3–5 bit errors detected and corrected; 3 = Uncorrectable.
Recommended Block Error Threshold options:
 2,2,2,2 = No group stored if any errors are uncorrected.
 3,3,3,3 = Group stored regardless of errors.
 0,0,0,0 = No group stored containing corrected or uncorrected errors.
 3,2,3,3 = Group stored with corrected errors on B, regardless of errors on A, C, or D.

@see Si47XX PROGRAMMING GUIDE; AN332; pages 58 and 104 
_EnD_oF_dEf_TeXt_;
}; /* union */
union = {
  cp-id     = 'unionsi47x__rds__date__time';
  cp-name   = 'si47x_rds_date_time';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__date__time_1a79cc7bd950d06a144f2aae2bc469a257';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'offset';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '684';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__date__time_1aed1f1a5592157d224412846fdc938eb9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'offset_sense';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '685';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__date__time_1af33644839f1535209df8f35fc00332c7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'minute1';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '686';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__date__time_1a00b09fe57cee76fda811c7e868045c2d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'minute2';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '687';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__date__time_1a4c42077d5a7c458002c2545b19446e49';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'hour1';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '688';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__date__time_1ab310eb63caafa1f15e1aec5b41c3d658';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'hour2';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '689';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__date__time_1a555dbd8fd36e4a5d5ec4ac7baf365a45';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mjd';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '690';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__date__time_1a2fd48898a9f78b595a28dee19485d771';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_rds_date_time::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '691';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__date__time_1a4632acc947ded9cc9577df163fabba69';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '692';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '681';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Group type 4A ( RDS Date and Time)
When group type 4A is used by the station, it shall be transmitted every minute according to EN 50067.
This Structure uses blocks 2,3 and 5 (B,C,D)

ATTENTION: 
To make it compatible with 8, 16 and 32 bits platforms and avoid Crosses boundary, it was necessary to
split minute and hour representation. 
_EnD_oF_dEf_TeXt_;
}; /* union */
union = {
  cp-id     = 'unionsi47x__rds__int__source';
  cp-name   = 'si47x_rds_int_source';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__int__source_1aabbae0cca723fa1610ca96f7a62a734f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSRECV';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '534';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__int__source_1a0bb106ab53cfba94833fefd596a5d1cf';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSSYNCLOST';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '535';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
If set, generate RDSINT when RDS FIFO has at least FM_RDS_INT_FIFO_COUNT entries.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a530e64d00d95b4ceb13ce33aa74c63cb';
        sec-mem-ref-line = '1309';
        sec-mem-ref-name = 'SI4735::setRdsIntSource';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__int__source_1adb4e16cc0024b4c0338d163a83ec43ec';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSSYNCFOUND';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '536';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
If set, generate RDSINT when RDS loses synchronization.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a530e64d00d95b4ceb13ce33aa74c63cb';
        sec-mem-ref-line = '1309';
        sec-mem-ref-name = 'SI4735::setRdsIntSource';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__int__source_1ac5de9b6d946471e6ff768bd87988125b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY1';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '537';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
f set, generate RDSINT when RDS gains synchronization.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a530e64d00d95b4ceb13ce33aa74c63cb';
        sec-mem-ref-line = '1309';
        sec-mem-ref-name = 'SI4735::setRdsIntSource';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__int__source_1a6363c0e46e99336e8381bc0cc4ccacf7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSNEWBLOCKA';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '538';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Always write to 0.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a530e64d00d95b4ceb13ce33aa74c63cb';
        sec-mem-ref-line = '1309';
        sec-mem-ref-name = 'SI4735::setRdsIntSource';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__int__source_1abe78350d5e3cb85a60859f52ce279efd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSNEWBLOCKB';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '539';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
If set, generate an interrupt when Block A data is found or subsequently changed.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a530e64d00d95b4ceb13ce33aa74c63cb';
        sec-mem-ref-line = '1309';
        sec-mem-ref-name = 'SI4735::setRdsIntSource';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__int__source_1a1244e55bf5f7da541ebc7ef17880ffaa';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY2';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '540';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
If set, generate an interrupt when Block B data is found or subsequently changed.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a530e64d00d95b4ceb13ce33aa74c63cb';
        sec-mem-ref-line = '1309';
        sec-mem-ref-name = 'SI4735::setRdsIntSource';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__int__source_1a7647574bbb20d7f447c273b0f347caa9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY3';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '541';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Reserved - Always write to 0.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__int__source_1ab4e20ced6462d57774e19b0516416011';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_rds_int_source::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '542';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__int__source_1abfd03e295ce96a214407c2705d9b96c7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '543';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '531';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
FM_RDS_INT_SOURCE property data type.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
@see Si47XX PROGRAMMING GUIDE; AN332; page 103
@see also https://en.wikipedia.org/wiki/Radio_Data_System
_EnD_oF_dEf_TeXt_;
}; /* union */
union = {
  cp-id     = 'unionsi47x__rds__status';
  cp-name   = 'si47x_rds_status';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1a38e112538a750e20362fa4086bdc1c67';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'STCINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '480';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1a719fb011cdac3625ca49bf56eb5e7871';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY1';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '481';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1a2bf807412f68e85e1d1628fcc5acfe45';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '482';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1acd8e3813c37d8ec13504944be12ba965';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RSQINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '483';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1a238052039e13683004da9a0f6ee0d1bd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY2';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '484';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1a41add87380f9111393a82011c5ac41ec';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ERR';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '485';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1a92c83f47eed1d093556a6683667cef11';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CTS';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '486';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1a365509f9f63ab4d495da416cbe5b31ae';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSRECV';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '488';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1a2fbbcc16519fdfb6ef16620f68f1f2e6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSSYNCLOST';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '489';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RDS Received; 1 = FIFO filled to minimum number of groups set by RDSFIFOCNT.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1ac283a8a89cc885c2740c65a7128ff7ef';
        sec-mem-ref-line = '1079';
        sec-mem-ref-name = 'SI4735::getRdsSyncLost';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1a724e174d22e1b23c09ebfb49cbf75c8c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSSYNCFOUND';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '490';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RDS Sync Lost; 1 = Lost RDS synchronization.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a78e906f12771490771c624be1777784d';
        sec-mem-ref-line = '1080';
        sec-mem-ref-name = 'SI4735::getRdsSyncFound';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1a89380f067e7ff15a567c08b3d898f756';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY3';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '491';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RDS Sync Found; 1 = Found RDS synchronization.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1a5dfb7e323dbce0663e1f23d0352494b0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSNEWBLOCKA';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '492';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1a72d5e07659bcf0026efc05f8d434ea1d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSNEWBLOCKB';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '493';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RDS New Block A; 1 = Valid Block A data has been received.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1aff740d85cc04c257f53c7e910bd45fcf';
        sec-mem-ref-line = '1082';
        sec-mem-ref-name = 'SI4735::getRdsNewBlockB';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1ad7f429a27d5bef1742ae3f09b908ddb2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY4';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '494';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RDS New Block B; 1 = Valid Block B data has been received.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1a65956b2f1cd9abe1f7e58e17d55017fa';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSSYNC';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '496';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1af6942f61d505db6398e71a49adc251bb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY5';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '497';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RDS Sync; 1 = RDS currently synchronized.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1a899a0317e5a766b03ea72490b7b42570';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GRPLOST';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '498';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1a189bda3c2c184bdd3a168ff3e3f3e8e6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY6';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '499';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Group Lost; 1 = One or more RDS groups discarded due to FIFO overrun.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1ac5e65790b373d223498f5690086de8b3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSFIFOUSED';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '501';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1aa1d1c479eb1adb66bcfc7d16d15b7b59';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BLOCKAH';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '502';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP3 - RDS FIFO Used; Number of groups remaining in the RDS FIFO (0 if empty).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1a307a99811323be2c6e64bf2473aaa8f2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BLOCKAL';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '503';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP4 - RDS Block A; HIGH byte.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1af1e67b201799a9e8d7208a32a65656b5';
        sec-mem-ref-line = '1412';
        sec-mem-ref-name = 'SI4735::getRdsPI';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1afc7f4e06b12a6d9b8304a691deb4fc8e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BLOCKBH';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '504';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP5 - RDS Block A; LOW byte.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aa35366e5cded7b864f7268a7e4a8dbe9';
        sec-mem-ref-line = '1424';
        sec-mem-ref-name = 'SI4735::getRdsGroupType';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a05f76a0a0ebda813483f1df24e890904';
        sec-mem-ref-line = '1440';
        sec-mem-ref-name = 'SI4735::getRdsFlagAB';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ab1ed04a109330e7e9206483c7cdf5ef9';
        sec-mem-ref-line = '1460';
        sec-mem-ref-name = 'SI4735::getRdsTextSegmentAddress';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1af9b6cb614d1b01b11bb23c19e6deb8b9';
        sec-mem-ref-line = '1474';
        sec-mem-ref-name = 'SI4735::getRdsVersionCode';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ac28fa3818d4f900c4f4ba6be10c1405b';
        sec-mem-ref-line = '1491';
        sec-mem-ref-name = 'SI4735::getRdsProgramType';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a12d917629b78fffebac5ecf8f2936921';
        sec-mem-ref-line = '1594';
        sec-mem-ref-name = 'SI4735::getRdsText0A';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae54d0f5562ca7615c3b90bee00c29ab4';
        sec-mem-ref-line = '1625';
        sec-mem-ref-name = 'SI4735::getRdsText2A';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a806d5cfbbeb6ca1299ce20b1220fdb18';
        sec-mem-ref-line = '1657';
        sec-mem-ref-name = 'SI4735::getRdsText2B';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aa8436bb156f3ac8321c65941be42fdba';
        sec-mem-ref-line = '1688';
        sec-mem-ref-name = 'SI4735::getRdsTime';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1ac81b652130f0e91b2af8184e303b5d54';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BLOCKBL';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '505';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP6 - RDS Block B; HIGH byte.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aa35366e5cded7b864f7268a7e4a8dbe9';
        sec-mem-ref-line = '1424';
        sec-mem-ref-name = 'SI4735::getRdsGroupType';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a05f76a0a0ebda813483f1df24e890904';
        sec-mem-ref-line = '1440';
        sec-mem-ref-name = 'SI4735::getRdsFlagAB';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ab1ed04a109330e7e9206483c7cdf5ef9';
        sec-mem-ref-line = '1460';
        sec-mem-ref-name = 'SI4735::getRdsTextSegmentAddress';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1af9b6cb614d1b01b11bb23c19e6deb8b9';
        sec-mem-ref-line = '1474';
        sec-mem-ref-name = 'SI4735::getRdsVersionCode';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ac28fa3818d4f900c4f4ba6be10c1405b';
        sec-mem-ref-line = '1491';
        sec-mem-ref-name = 'SI4735::getRdsProgramType';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a12d917629b78fffebac5ecf8f2936921';
        sec-mem-ref-line = '1594';
        sec-mem-ref-name = 'SI4735::getRdsText0A';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae54d0f5562ca7615c3b90bee00c29ab4';
        sec-mem-ref-line = '1625';
        sec-mem-ref-name = 'SI4735::getRdsText2A';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a806d5cfbbeb6ca1299ce20b1220fdb18';
        sec-mem-ref-line = '1657';
        sec-mem-ref-name = 'SI4735::getRdsText2B';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aa8436bb156f3ac8321c65941be42fdba';
        sec-mem-ref-line = '1688';
        sec-mem-ref-name = 'SI4735::getRdsTime';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1acb3be1a907d57f35a5db5dc79d1c4603';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BLOCKCH';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '506';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP7 - RDS Block B; LOW byte.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1adb0a3c39aeacba0faf39aadd9465021f';
        sec-mem-ref-line = '1538';
        sec-mem-ref-name = 'SI4735::getNext4Block';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aa8436bb156f3ac8321c65941be42fdba';
        sec-mem-ref-line = '1688';
        sec-mem-ref-name = 'SI4735::getRdsTime';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1a9e02b88bb18b2111798c346c3f40e599';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BLOCKCL';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '507';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP8 - RDS Block C; HIGH byte.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1adb0a3c39aeacba0faf39aadd9465021f';
        sec-mem-ref-line = '1538';
        sec-mem-ref-name = 'SI4735::getNext4Block';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aa8436bb156f3ac8321c65941be42fdba';
        sec-mem-ref-line = '1688';
        sec-mem-ref-name = 'SI4735::getRdsTime';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1a6e7bcc48e5ad38ae9a4754d90735e0eb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BLOCKDH';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '508';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP9 - RDS Block C; LOW byte.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ab1f4f137139b40fe386ca51586999e50';
        sec-mem-ref-line = '1506';
        sec-mem-ref-name = 'SI4735::getNext2Block';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1adb0a3c39aeacba0faf39aadd9465021f';
        sec-mem-ref-line = '1538';
        sec-mem-ref-name = 'SI4735::getNext4Block';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aa8436bb156f3ac8321c65941be42fdba';
        sec-mem-ref-line = '1688';
        sec-mem-ref-name = 'SI4735::getRdsTime';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1ab2c92efdeed49c5fe867771fb5cd5862';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BLOCKDL';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '509';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP10 - RDS Block D; HIGH byte.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ab1f4f137139b40fe386ca51586999e50';
        sec-mem-ref-line = '1506';
        sec-mem-ref-name = 'SI4735::getNext2Block';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1adb0a3c39aeacba0faf39aadd9465021f';
        sec-mem-ref-line = '1538';
        sec-mem-ref-name = 'SI4735::getNext4Block';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aa8436bb156f3ac8321c65941be42fdba';
        sec-mem-ref-line = '1688';
        sec-mem-ref-name = 'SI4735::getRdsTime';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1ad5355a265868ead3568f770eec76c820';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BLED';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '515';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP11 - RDS Block D; LOW byte.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1a857d0246debf3f8c3cd293b145f1c6f9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BLEC';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '516';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1a7082ef480b324395f05b860814a65e0e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BLEB';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '517';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1acf0a1491e6545e50bf2e62b6ca299fc4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BLEA';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '518';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1aea81052e86fe18311ff060dee39776ed';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_rds_status::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'resp';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '519';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rds__status_1a526947c93583b28968de411b0206fdfb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '520';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '476';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Response data type for current channel and reads an entry from the RDS FIFO.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
@see Si47XX PROGRAMMING GUIDE; AN332; pages 77 and 78
_EnD_oF_dEf_TeXt_;
}; /* union */
union = {
  cp-id     = 'unionsi47x__response__status';
  cp-name   = 'si47x_response_status';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__response__status_1a01ca22a28b83206bd992372d20c32f2f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'STCINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '269';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__response__status_1a8bb865e96113a5755fc3e721f2623418';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY1';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '270';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Seek/Tune Complete Interrupt; 1 = Tune complete has been triggered.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__response__status_1a19cfe8d1b0badae5253ff243e05d7afa';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '271';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__response__status_1a301f61dac86d37ec2fc74c79c98254ab';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RSQINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '272';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Radio Data System (RDS) Interrup; 0 = interrupt has not been triggered.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1ad194137a6a712a599e3c26e5b6357594';
        sec-mem-ref-line = '953';
        sec-mem-ref-name = 'SI4735::getSignalQualityInterrupt';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__response__status_1a6206af5b53630164e9526eae84573a13';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY2';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '273';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Received Signal Quality Interrupt; 0 = interrupt has not been triggered.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__response__status_1a0693308479f69e970ec92ce1d1dcbf9c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ERR';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '274';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__response__status_1a6816e97ec06655d72350b83eae0e9f4c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CTS';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '275';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Error. 0 = No error 1 = Error.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1afcb38f53b6eb71cadcefa0bb472ca943';
        sec-mem-ref-line = '957';
        sec-mem-ref-name = 'SI4735::getStatusCTS';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__response__status_1aa4da6ef23dc23e40e9dcfc582ac7a53e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'VALID';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '277';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Clear to Send.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1afb19da8a05320d7f38cca8325725edfd';
        sec-mem-ref-line = '960';
        sec-mem-ref-name = 'SI4735::getStatusValid';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__response__status_1acc8c563c2eaf6702c36961fd300fecfb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AFCRL';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '278';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Valid Channel.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1ab8a51de592fd40fdd872039b3c70716f';
        sec-mem-ref-line = '958';
        sec-mem-ref-name = 'SI4735::getACFIndicator';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__response__status_1a88284e575e52c96efa3eb0248010ba73';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY3';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '279';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
AFC Rail Indicator.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__response__status_1adf288c085c8f9a7b6a84ca9746541ea5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BLTF';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '280';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__response__status_1a7d5ca536d8706e6cc9df2c8d5aea268e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'READFREQH';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '282';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Reports if a seek hit the band limit.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7e88bb573604d465536c13554d5c61f8';
        sec-mem-ref-line = '809';
        sec-mem-ref-name = 'SI4735::getFrequency';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__response__status_1a6d5f612fc40df215e9f4c6a94b68e2e6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'READFREQL';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '284';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Read Frequency High byte.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a7e88bb573604d465536c13554d5c61f8';
        sec-mem-ref-line = '809';
        sec-mem-ref-name = 'SI4735::getFrequency';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__response__status_1a524207ce1b79627d69f94049ba8c614d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RSSI';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '286';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Read Frequency Low byte.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1aeeefd12b49dbc764e0f45fe208441482';
        sec-mem-ref-line = '961';
        sec-mem-ref-name = 'SI4735::getReceivedSignalStrengthIndicator';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__response__status_1a14f5ce9ed117d45a2230b6f87b88a4cb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SNR';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '288';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Received Signal Strength Indicator (dBμV)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1ac0bd4daaa321ef8956dca4d1e4e5cd3c';
        sec-mem-ref-line = '962';
        sec-mem-ref-name = 'SI4735::getStatusSNR';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__response__status_1a1ee21104ab8a4a13619ee5c3f7fb3f2f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'MULT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '290';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
This byte contains the SNR metric when tune is complete (dB).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a0f9b5438a6f92c8f2e538ee640f353ab';
        sec-mem-ref-line = '963';
        sec-mem-ref-name = 'SI4735::getStatusMULT';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__response__status_1acd0a9f2982a84c43b8127f5e54982f19';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'READANTCAP';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '292';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Contains the multipath metric when tune is complete.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a3905d6551992b4dd51d13f05978d9081';
        sec-mem-ref-line = '964';
        sec-mem-ref-name = 'SI4735::getAntennaTuningCapacitor';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__response__status_1ab3395dbf4658a828c26e6d5cfcc3b18e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_response_status::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'resp';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '293';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__response__status_1a9b236e03804629e73a4b19fddb72b4cd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '294';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '265';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Response status command.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Response data from a query status command

@see Si47XX PROGRAMMING GUIDE; pages 73 and 
_EnD_oF_dEf_TeXt_;
}; /* union */
union = {
  cp-id     = 'unionsi47x__rqs__status';
  cp-name   = 'si47x_rqs_status';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1a2e61a3cc9498a20b9b5e631cf7f7a395';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'STCINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '416';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1a79007d32c2dc0695eee8e2e978356d90';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY1';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '417';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1aa50f1f40d277dcc42ce8833ae805477e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '418';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1a1c771417de53d336db85f728eea9e2e7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RSQINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '419';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1a671af7a40dc7d0d051a138416bbeb29a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY2';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '420';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1afb8c85d6e84a540d37419ab99fc23c94';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ERR';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '421';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1af7beac2eb02d8eb6f155417b638e4fa1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CTS';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '422';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1a820a302920843a8fbf92865644a11ce9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RSSIILINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '424';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1aaf3f6a82b0878afbd7a4a18544577552';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RSSIHINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '425';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RSSI Detect Low.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1adf11a66236392ca107b5d52a8747f838';
        sec-mem-ref-line = '990';
        sec-mem-ref-name = 'SI4735::getCurrentRssiDetectHigh';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1a6429b6373a1aabce38b2ddde7cdae2a7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SNRLINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '426';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RSSI Detect High.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a1296592571c85b89ed59a4ee2324bd52';
        sec-mem-ref-line = '991';
        sec-mem-ref-name = 'SI4735::getCurrentSnrDetectLow';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1a3ec547d32d35e825bd3cc8dc6aa04371';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SNRHINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '427';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
SNR Detect Low.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1aec3c71a3252dd6660e5bceebc0d1f988';
        sec-mem-ref-line = '992';
        sec-mem-ref-name = 'SI4735::getCurrentSnrDetectHigh';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1ab8511df192966df4c4c30fd5fbd85a8d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'MULTLINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '428';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
SNR Detect High.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1ad194a5c915620c6a1b8b3d6d7ed645d9';
        sec-mem-ref-line = '1001';
        sec-mem-ref-name = 'SI4735::getCurrentMultipathDetectLow';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1a1c7edf40697da61d47979d5c6945a7be';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'MULTHINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '429';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Multipath Detect Low.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a82d0865cf348deb0c9f81a2f12222fb0';
        sec-mem-ref-line = '1002';
        sec-mem-ref-name = 'SI4735::getCurrentMultipathDetectHigh';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1a5468b11528cf37097fe88a2e694aeb15';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY3';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '430';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Multipath Detect High.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1adb9c59f3070d42da5be6b34fe4760bb2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BLENDINT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '431';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1ac5a8820c2556ca30ddb6fae020a837dd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'VALID';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '433';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Blend Detect Interrupt.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a5ce1abf8c9d53c027f6b0870efedda1b';
        sec-mem-ref-line = '993';
        sec-mem-ref-name = 'SI4735::getCurrentValidChannel';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1a9961f89a4da7115916a5c84b66a80d80';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AFCRL';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '434';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Valid Channel.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1affe5cee9daf44677802a94f96d893c94';
        sec-mem-ref-line = '994';
        sec-mem-ref-name = 'SI4735::getCurrentAfcRailIndicator';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1a796ebb2d3d900cfce84d0dc2f5b0585d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY4';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '435';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
AFC Rail Indicator.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1a08ec28496a92405a3b3948b17159af2b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SMUTE';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '436';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1aa36d76a841b57cc87a0950cf39b6e2c1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY5';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '437';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Soft Mute Indicator. Indicates soft mute is engaged.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1a5f89f19c73e7f50b7b34336439225682';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'STBLEND';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '439';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1a52b82f9f286b136af201ded7600cc48d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'PILOT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '440';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Indicates amount of stereo blend in% (100 = full stereo, 0 = full mono).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a127fa3d2f9b7d57169bbef95703fb4c9';
        sec-mem-ref-line = '998';
        sec-mem-ref-name = 'SI4735::getCurrentPilot';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1ab5558da768af2d0430d094a90caec3a2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RSSI';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '442';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Indicates stereo pilot presence.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1a5663dde3abbab045bc4a535cfe796eff';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SNR';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '443';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP4 - Contains the current receive signal strength (0–127 dBμV).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1adb3fe55583dafeac7439a303b637d162';
        sec-mem-ref-line = '988';
        sec-mem-ref-name = 'SI4735::getCurrentSNR';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1aa537fb8dcc34e82a937bf4d522a7ace0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'MULT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '444';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP5 - Contains the current SNR metric (0–127 dB).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a6d521bb5c7ef7811e57c7128cb2106b3';
        sec-mem-ref-line = '999';
        sec-mem-ref-name = 'SI4735::getCurrentMultipath';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1ab332136092ea1ced84e916f4fc791679';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FREQOFF';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '445';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RESP6 - Contains the current multipath metric. (0 = no multipath; 100 = full multipath)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a2b3bfeca3b545f5741b1ed70a1dba077';
        sec-mem-ref-line = '1000';
        sec-mem-ref-name = 'SI4735::getCurrentSignedFrequencyOffset';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1af8872b0bb6b013a57f21914dc05c20a3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_rqs_status::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'resp';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '446';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__rqs__status_1a184e0892bc82522efe50c49836bb8cc5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '447';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '412';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Radio Signal Quality data representation.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Data type for status information about the received signal quality (FM_RSQ_STATUS and AM_RSQ_STATUS)

@see Si47XX PROGRAMMING GUIDE; AN332; pages 75 and 
_EnD_oF_dEf_TeXt_;
}; /* union */
union = {
  cp-id     = 'unionsi47x__seek';
  cp-name   = 'si47x_seek';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__seek_1a708768c904cefc35c63312ba5eea71c2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RESERVED1';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '248';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__seek_1aada4b18c65da9723670759e78440757f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'WRAP';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '249';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__seek_1acd509f67721224c4b0ad0ebdfad56dad';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SEEKUP';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '250';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Determines whether the seek should Wrap = 1, or Halt = 0 when it hits the band limit.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a3280b98b8331f00b4d0158ef1b076533';
        sec-mem-ref-line = '1033';
        sec-mem-ref-name = 'SI4735::seekStation';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__seek_1a1acbac12abdb5b0ba3e81d353720c6ba';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RESERVED2';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '251';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Determines the direction of the search, either UP = 1, or DOWN = 0.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__seek_1a83a4a1f6952444528689d02324cc460f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_seek::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'arg';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '252';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__seek_1a894bfdc90f00f3064991edc0c439e66a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '253';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '245';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Seek frequency (automatic tuning)
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Represents searching for a valid frequency data type.
_EnD_oF_dEf_TeXt_;
}; /* union */
union = {
  cp-id     = 'unionsi47x__set__frequency';
  cp-name   = 'si47x_set_frequency';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__set__frequency_1a629c45776aead687497d92dfabad925d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FAST';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '226';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__set__frequency_1ad419130c085839f718f6530e18943c23';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FREEZE';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '227';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
ARG1 - FAST Tuning. If set, executes fast and invalidated tune. The tune status will not be accurate.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a8bc001cb28dc8fbd88ba0fa7024eca39';
        sec-mem-ref-line = '163';
        sec-mem-ref-name = 'SI4735::setPowerUp';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aaceadaaf0835e3db124d1b36f2aebd3c';
        sec-mem-ref-line = '343';
        sec-mem-ref-name = 'SI4735::setTuneFrequencyAntennaCapacitor';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a63d205f2d3169ba877a2bd2ee28d224f';
        sec-mem-ref-line = '376';
        sec-mem-ref-name = 'SI4735::setFrequency';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1a667fead0c7b2658c2b932370ad4e4f88';
        sec-mem-ref-line = '1044';
        sec-mem-ref-name = 'SI4735::getTuneFrequencyFreeze';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8h_1aee22a5ce06d4948fad2365a7b62fbd8d';
        sec-mem-ref-line = '1045';
        sec-mem-ref-name = 'SI4735::setTuneFrequencyFreeze';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__set__frequency_1a0f58c9f3ce774e07a2acc9ba4e968c85';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY1';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '228';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Valid only for FM (Must be 0 to AM)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a8bc001cb28dc8fbd88ba0fa7024eca39';
        sec-mem-ref-line = '163';
        sec-mem-ref-name = 'SI4735::setPowerUp';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aaceadaaf0835e3db124d1b36f2aebd3c';
        sec-mem-ref-line = '343';
        sec-mem-ref-name = 'SI4735::setTuneFrequencyAntennaCapacitor';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a63d205f2d3169ba877a2bd2ee28d224f';
        sec-mem-ref-line = '376';
        sec-mem-ref-name = 'SI4735::setFrequency';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__set__frequency_1a224ff2b8897867521dc7e83e4a7aadae';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'USBLSB';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '229';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Always set 0.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a63d205f2d3169ba877a2bd2ee28d224f';
        sec-mem-ref-line = '376';
        sec-mem-ref-name = 'SI4735::setFrequency';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__set__frequency_1a55e3e49406688a65d9e90427ba3290cd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FREQH';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '230';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
SSB Upper Side Band (USB) and Lower Side Band (LSB) Selection. 10 = USB is selected; 01 = LSB is selected.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a63d205f2d3169ba877a2bd2ee28d224f';
        sec-mem-ref-line = '376';
        sec-mem-ref-name = 'SI4735::setFrequency';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__set__frequency_1a0b7fcda4891b52509b53168d581936e3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FREQL';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '231';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
ARG2 - Tune Frequency High byte.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a63d205f2d3169ba877a2bd2ee28d224f';
        sec-mem-ref-line = '376';
        sec-mem-ref-name = 'SI4735::setFrequency';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__set__frequency_1a9aee8ee0d04a6a7e732210fdea987d2c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ANTCAPH';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '232';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
ARG3 - Tune Frequency Low byte.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a8bc001cb28dc8fbd88ba0fa7024eca39';
        sec-mem-ref-line = '163';
        sec-mem-ref-name = 'SI4735::setPowerUp';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aaceadaaf0835e3db124d1b36f2aebd3c';
        sec-mem-ref-line = '343';
        sec-mem-ref-name = 'SI4735::setTuneFrequencyAntennaCapacitor';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a63d205f2d3169ba877a2bd2ee28d224f';
        sec-mem-ref-line = '376';
        sec-mem-ref-name = 'SI4735::setFrequency';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__set__frequency_1a712fdd01147dcef829431bc2fc94a012';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ANTCAPL';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '233';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
ARG4 - Antenna Tuning Capacitor High byte.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a8bc001cb28dc8fbd88ba0fa7024eca39';
        sec-mem-ref-line = '163';
        sec-mem-ref-name = 'SI4735::setPowerUp';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1aaceadaaf0835e3db124d1b36f2aebd3c';
        sec-mem-ref-line = '343';
        sec-mem-ref-name = 'SI4735::setTuneFrequencyAntennaCapacitor';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a63d205f2d3169ba877a2bd2ee28d224f';
        sec-mem-ref-line = '376';
        sec-mem-ref-name = 'SI4735::setFrequency';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__set__frequency_1aa3e4a9050e218540a247ebd988f5bc65';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_set_frequency::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'arg';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '234';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__set__frequency_1a57e2bfb6b0c9c0fb7d6ffac131824b8a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '235';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '223';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
AM Tune frequency data type command (AM_TUNE_FREQ command)
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
@see Si47XX PROGRAMMING GUIDE; AN332; pages 135
_EnD_oF_dEf_TeXt_;
}; /* union */
union = {
  cp-id     = 'unionsi47x__ssb__mode';
  cp-name   = 'si47x_ssb_mode';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__ssb__mode_1a12aeb6bf478c3c4b6d4243a84f05a5eb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AUDIOBW';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '783';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__ssb__mode_1ae22aa453dbf8787acceef11d30306dfd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SBCUTFLT';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '784';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
0 = 1.2KHz (default); 1=2.2KHz; 2=3KHz; 3=4KHz; 4=500Hz; 5=1KHz
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a9224e7d4ef14c887da96dbefd2dcefd3';
        sec-mem-ref-line = '1835';
        sec-mem-ref-name = 'SI4735::setSSBConfig';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1ae9d50b24642784943fefedbac944a8e8';
        sec-mem-ref-line = '1914';
        sec-mem-ref-name = 'SI4735::setSBBSidebandCutoffFilter';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__ssb__mode_1a3c4def7aad4a7f875bd189cfde29c733';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AVC_DIVIDER';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '785';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
SSB side band cutoff filter for band passand low pass filter.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a9224e7d4ef14c887da96dbefd2dcefd3';
        sec-mem-ref-line = '1835';
        sec-mem-ref-name = 'SI4735::setSSBConfig';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1afc5e87c50a1eba6de9504c114cc1cb70';
        sec-mem-ref-line = '1898';
        sec-mem-ref-name = 'SI4735::setSSBAvcDivider';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__ssb__mode_1abdcac9b7553fc2d62f51262eacec0069';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AVCEN';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '786';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
set 0 for SSB mode; set 3 for SYNC mode;
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a9224e7d4ef14c887da96dbefd2dcefd3';
        sec-mem-ref-line = '1835';
        sec-mem-ref-name = 'SI4735::setSSBConfig';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1acacf1dac4c0ec170d1da629dd1fd30cb';
        sec-mem-ref-line = '1885';
        sec-mem-ref-name = 'SI4735::setSSBAutomaticVolumeControl';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__ssb__mode_1aeed76b90e22efa54ef80062032785bc2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SMUTESEL';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '787';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
SSB Automatic Volume Control (AVC) enable; 0=disable; 1=enable (default);.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a9224e7d4ef14c887da96dbefd2dcefd3';
        sec-mem-ref-line = '1835';
        sec-mem-ref-name = 'SI4735::setSSBConfig';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a91251dfc2ff9488aaef3aa1a528097d9';
        sec-mem-ref-line = '1872';
        sec-mem-ref-name = 'SI4735::setSSBSoftMute';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__ssb__mode_1a5c337f3327b40a61d5ccc22141892651';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY1';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '788';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
SSB Soft-mute Based on RSSI or SNR.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a9224e7d4ef14c887da96dbefd2dcefd3';
        sec-mem-ref-line = '1835';
        sec-mem-ref-name = 'SI4735::setSSBConfig';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__ssb__mode_1a12c18df3a3e8d78325292f50e222bd01';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DSP_AFCDIS';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '789';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Always write 0;.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a9224e7d4ef14c887da96dbefd2dcefd3';
        sec-mem-ref-line = '1835';
        sec-mem-ref-name = 'SI4735::setSSBConfig';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a6cde26a5abf759a628012d1457d85c72';
        sec-mem-ref-line = '1858';
        sec-mem-ref-name = 'SI4735::setSSBDspAfc';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__ssb__mode_1a9a2be4f98978b6b580b7d64cfc07c66c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_ssb_mode::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'param';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '790';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__ssb__mode_1ac57630fdfe3cf7069f8483a50a41c501';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '791';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '780';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
SSB - datatype for SSB_MODE (property 0x0101)

@see AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; page 24 
_EnD_oF_dEf_TeXt_;
}; /* union */
union = {
  cp-id     = 'unionsi47x__tune__status';
  cp-name   = 'si47x_tune_status';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__tune__status_1a8de6a5fbc60de94bd0850ffd85fac5a9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'INTACK';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '377';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__tune__status_1ae6d5968d62f9c0eec44528e7b050f0bf';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CANCEL';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '378';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
If set, clears the seek/tune complete interrupt status indicator.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4735_8cpp_1a5c0f4036a7fbbd11a26f1f6f4579d3cd';
        sec-mem-ref-line = '841';
        sec-mem-ref-name = 'SI4735::getStatus';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__tune__status_1af014b49f5eb0de7ac951dd1d52321026';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RESERVED2';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '379';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
If set, aborts a seek currently in progress.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__tune__status_1a6cb498a025a973418d27991eb3151489';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si47x_tune_status::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'arg';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '380';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionsi47x__tune__status_1aefcfcb9eaa95ed7d8ce1740ac7f9eb7e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      sec-mem-desc-line = '381';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  cp-fileline  = '374';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Seek station status.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Status of FM_TUNE_FREQ or FM_SEEK_START commands or Status of AM_TUNE_FREQ or AM_SEEK_START commands.

@see Si47XX PROGRAMMING GUIDE; AN332; pages 73 and 139
_EnD_oF_dEf_TeXt_;
}; /* union */
file = {
  file-id   = '_s_i4735_8cpp';
  file-name = 'SI4735.cpp';
  file-full-name  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_s_i4735_8h';
  file-name = 'SI4735.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a3d0f9d1b446b57f1f425654b6030fe02';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'POWER_UP_FM';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '16';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
SI4735 ARDUINO LIBRARY  
<br>
Const, Data type and Methods definitions
References: 
     Si47XX PROGRAMMING GUIDE AN332
     AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE

See documentation on https://github.com/pu2clr/SI4735
Ricardo Lima Caratti, Nov 2019 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a1c63dbfe18d80af288cc79a5da666993';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'POWER_UP_AM';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '17';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a3adae4f49b7284531f4a9f74e64aae1d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'POWER_UP_WB';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
3
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '18';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a2e49c8fada1fbb8a01ad5a0adad2b559';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'POWER_PATCH';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
15
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '19';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a501219f4a661e7aee098f263cba5d2a5';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SI473X_ADDR_SEN_LOW';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x11
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '22';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a16a01f9b53951b9796f59e48eb28c435';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SI473X_ADDR_SEN_HIGH';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x63
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '23';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1abf6b929a6f72c48fdb78218394541db2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'POWER_UP';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x01
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '25';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a9fbb31eec68a8b17895fd18640296013';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'GET_REV';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x10
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '26';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1aad04e0c9afdeec307d5b9cb2062d784d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'POWER_DOWN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x11
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '27';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a92cfecd26935c8864d65bbdc6031acb0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SET_PROPERTY';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x12
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '28';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1acf7a3971c551fcdf7ae16bb0f31c149d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'GET_PROPERTY';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x13
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '29';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1ab34642df1357e9ee8ecd90913bdae01f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'GET_INT_STATUS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x14
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '30';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1aa9acf37dc2ae6e26a01780d6d4e6dcc1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_TUNE_FREQ';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x20
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '33';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a25ef5653fc9206ab83d8215c209e9922';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_SEEK_START';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x21
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '34';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a1c2be0c09ef2120b4e7b6d050a4a7735';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_TUNE_STATUS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x22
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '35';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1ac5bbf51a4a4b25c538375567c2f4c8dc';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_AGC_STATUS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x27
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '36';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a805bf3e7373f81190388810992fa17ae';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_AGC_OVERRIDE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x28
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '37';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a9b58aeaeabdad7b1525ccc31f5d0d201';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_RSQ_STATUS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x23
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '38';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1ac37ef03bb47367289779f5f9bc00b18f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_RDS_STATUS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x24
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '39';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a8b7e6ccffb54cef940f3bd78d255bc36';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_RDS_INT_SOURCE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x1500
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '42';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1afdc3800cf259f4c1acb254d1ad61f21b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_RDS_INT_FIFO_COUNT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x1501
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '43';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1afbaa25e11748b1bd64456d3eae79fdee';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_RDS_CONFIG';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x1502
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '44';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a6651f2bcc216c9b0950999f70bf2be44';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_RDS_CONFIDENCE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x1503
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '45';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a83ad68095d43d1a6d7b27941ef5b7f42';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_BLEND_STEREO_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x1105
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '47';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a8cad5bb93cc48ad53d80ccbb35228cbd';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_BLEND_MONO_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x1106
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '48';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1abf0ee031cf6bb27b0211709117cfcaf0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_BLEND_RSSI_STEREO_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x1800
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '49';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a8f62bfa609e4deb9febe3a25aae3c6bc';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_BLEND_RSSI_MONO_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x1801
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '50';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a95851f3d5c99cdbb6ec4c605868dea8d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_BLEND_SNR_STEREO_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x1804
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '51';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a29369a40b1406afc79b772ed939dab45';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_BLEND_SNR_MONO_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x1805
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '52';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a89a1ff203b89d700e362d30059a13963';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_BLEND_MULTIPATH_STEREO_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x1808
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '53';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a775be7c1521bbdd8d33fdecc34772c1f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_BLEND_MULTIPATH_MONO_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x1809
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '54';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a5c3e83244b4ab4a76d9c5c1ed86f3a54';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_TUNE_FREQ';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x40
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '57';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1ad6a22dca7973aef0bd45ed7adbd72a35';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_SEEK_START';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x41
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '58';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1ae08ea65cd9de522d012b7867da9ded6b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_TUNE_STATUS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x42
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '59';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a54146d0cab2573ea21cf4e95d2317fcb';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_RSQ_STATUS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x43
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '60';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a0a7dcdb2acffb213a5c11abd3ed96297';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_AGC_STATUS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x47
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '61';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a2b26f91fc9564254afd58904239f7645';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_AGC_OVERRIDE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x48
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '62';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1ac4ede73dbac84ceab4a5bc876104bc20';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'GPIO_CTL';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x80
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '63';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1aee1a56baeb6b8457fb722fd36dad5bbf';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'GPIO_SET';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x81
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '64';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1ab74735968edb90553a802c24ff568614';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SSB_TUNE_FREQ';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x40
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '68';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1ad1f18cf2de7dc536a84a03d2152d718d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SSB_TUNE_STATUS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x42
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '69';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a22906edd0b4fc07bf508547fac5218a2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SSB_RSQ_STATUS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x43
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '70';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a09d9c252c276ecbcefede258a0246b28';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SSB_AGC_STATUS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x47
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '71';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1ab7e181e3a172ee8e798cd5bd59566ce9';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SSB_AGC_OVERRIDE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x48
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '72';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a9c2e283ffdf9f900c3e35bc90f25a8ba';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DIGITAL_OUTPUT_FORMAT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x0102
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '76';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a8c9168f6aa8868f2595020555380514a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DIGITAL_OUTPUT_SAMPLE_RATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x0104
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '77';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1adb330b20b383f5f664a9b107edef0036';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'REFCLK_FREQ';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x0201
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '78';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a6b615b86f7870b616243b25cb5091933';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'REFCLK_PRESCALE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x0202
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '79';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a0031abcfb4699f5db24b7a8c1ec7ba82';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_DEEMPHASIS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3100
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '80';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a4a220091c92c619ac986d574a616b2cb';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_CHANNEL_FILTER';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3102
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '81';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a3375102015ee9e764639093c878f764e';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_AUTOMATIC_VOLUME_CONTROL_MAX_GAIN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3103
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '82';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a9ee081d06ef0cdb3098cf762a7128ef3';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_MODE_AFC_SW_PULL_IN_RANGE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3104
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '83';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a58e12f82db7a81eccf75d4490c44115d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_MODE_AFC_SW_LOCK_IN_RANGE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3105
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '84';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a8e6ffbd2ef006ca66d8d665d0778767b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_RSQ_INTERRUPTS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3200
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '85';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1aba5b2234f0511541a31c570b7174d697';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_RSQ_SNR_HIGH_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3201
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '86';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a3b36333a8e4d89d74dffc7e49a2cad62';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_RSQ_SNR_LOW_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3202
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '87';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a6d42dbe4fca531b64addfd693393263f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_RSQ_RSSI_HIGH_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3203
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '88';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a080a16332ef646146908f397ebf30ab8';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_RSQ_RSSI_LOW_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3204
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '89';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1ab99cdb1908b382e8398decd8fb455fa8';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_SOFT_MUTE_RATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3300
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '90';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a2d531456d92913b07a7c60b9080a691a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_SOFT_MUTE_SLOPE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3301
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '91';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a57030e143a5efa06b9b9cc21b63d0b70';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_SOFT_MUTE_MAX_ATTENUATION';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3302
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '92';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1ab089c66d524223acdad68bfd970603cc';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_SOFT_MUTE_SNR_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3303
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '93';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1adafa43d9bd0141c5f486dc86712df3db';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_SOFT_MUTE_RELEASE_RATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3304
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '94';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1abb6141bfa732621e16579ccd167b60a1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_SOFT_MUTE_ATTACK_RATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3305
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '95';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1af58375b1c0d63c805c0e0302d3b21dec';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_SEEK_BAND_BOTTOM';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3400
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '96';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a286e6d75f19118140fb195d843533a9c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_SEEK_BAND_TOP';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3401
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '97';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a5a42cce20a54aaf19bca033f337b857e';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_SEEK_FREQ_SPACING';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3402
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '98';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a40276eb2a5324bf475b621fdb740e084';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_SEEK_SNR_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3403
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '99';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1aafd79dd6f3ecf16693f037306df552c7';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_SEEK_RSSI_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3404
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '100';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1ae666699a32a73aa42b896e14f397de0d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_AGC_ATTACK_RATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3702
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '101';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a801f8c099cb01c460ea967582d24257a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_AGC_RELEASE_RATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3703
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '102';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a5d08e0a70499dcdfb14908c93c537eae';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_FRONTEND_AGC_CONTROL';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3705
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '103';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a246c2a5d194238315c8a11e1ce0cab41';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_NB_DETECT_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3900
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '104';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a33559dd526d6129ca961d439d2666e27';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_NB_INTERVAL';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3901
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '105';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a836d43df398f26634c47466325c5c7b0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_NB_RATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3902
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '106';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1aab0c7e7860e4125cfeb21f80d8e21ca3';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_NB_IIR_FILTER';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3903
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '107';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a2fb502c3bf4cdcfca3e8a137d94ca2b0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_NB_DELAY';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3904
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '108';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1aeb1de40ffb7cb51cf4a151f5d1b746d7';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'RX_VOLUME';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x4000
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '110';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a5d8cbc8d5c6630e874f1f8b14b897be2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'RX_HARD_MUTE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x4001
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '111';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a16b9c6d556c2db79e8742267daf63c83';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'GPO_IEN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x0001
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '116';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a23bef04406610ba7a5e2ae8c90126248';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SSB_BFO';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x0100
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '117';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a232ca41189bd93729bf9139c61e612f7';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SSB_MODE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x0101
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '118';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1acc58d23f469da25fd41ea155b7881f57';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SSB_RSQ_INTERRUPTS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3200
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '119';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a4cf19f6f3bf71f4379bfaa64bdcf5454';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SSB_RSQ_SNR_HI_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3201
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '120';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1adcca6da5b85c30212ae37ff9ad4d376c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SSB_RSQ_SNR_LO_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3202
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '121';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1ae39274a8fd021005801097d34fe910bf';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SSB_RSQ_RSSI_HI_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3203
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '122';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a63a00c41ed12e4f5ca589989d32f692e';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SSB_RSQ_RSSI_LO_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3204
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '123';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1af94a06f82ac4e6760f2cffdb485f26bc';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SSB_SOFT_MUTE_RATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3300
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '124';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1adde1eb5f88b07d793cfea70d7fe3266f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SSB_SOFT_MUTE_MAX_ATTENUATION';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3302
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '125';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a9d13509e672ac034bf05727a1bf86483';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SSB_SOFT_MUTE_SNR_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3303
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '126';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a3f0f97b4eb1221d0d9e098fec51598a7';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SSB_RF_AGC_ATTACK_RATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3700
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '127';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a5a63b197bde5107c033b2f46636017e5';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SSB_RF_AGC_RELEASE_RATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3701
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '128';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1aa17a96499141a4e8f7487044e123d721';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SSB_RF_IF_AGC_ATTACK_RATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3702
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '131';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a3cc8a8e7a441d49ad45f56f75544c6e7';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SSB_RF_IF_AGC_RELEASE_RATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3703
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '132';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a6c1cf039ba7ea7e5c0cce10943a18e3b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'LSB_MODE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '135';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a551c8ca21f0924d285ffba7169674775';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'USB_MODE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '136';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1afd6b0255af56b3deee67ef1fe14d2fd6';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SI473X_ANALOG_AUDIO';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0b00000101
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '140';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a0755e3202d03916bbe34391406406d97';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SI473X_DIGITAL_AUDIO1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0b00001011
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '141';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1ad6bd5d9d7f42b6a6a0594f74515224f3';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SI473X_DIGITAL_AUDIO2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0b10110000
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '142';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a9b1afa0393436f7dec3f24e72abe7257';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SI473X_DIGITAL_AUDIO3';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0b10110101
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '143';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1aca16710d5708c296b0aee577ac4dbe12';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_CURRENT_MODE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '146';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a3c1a90b99ac7623ed1c7375c419f91db';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_CURRENT_MODE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '147';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1ad884de6a9db83f089883aaf52e5efc77';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SSB_CURRENT_MODE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '148';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a3d77e4d0458eed0b6ba584c737e8df21';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MAX_DELAY_AFTER_SET_FREQUENCY';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
30
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '149';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4735_8h_1a166d7b31e78d530aba242e50dd903de4';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MIN_DELAY_WAIT_SEND_LOOP';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
300
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      define-mem-desc-line = '150';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__group04_1ga01f69d5bf584f94eabd1b113579b2c1e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'interrupt_hundler';
      func-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      func-mem-desc-line = '847';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Interrupt Function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
this function just set the volatile static bool data_from_si4735 to true;

If you are using interrupt feature, this function will be called by the system, not by you. 
If you are not using interrupt feature, please, ignore the compile message:
"warning: 'void interrupt_hundler()' defined but not used [-Wunused-function]"
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_s_i4735_8h_1a36a47e0973bdcc39f5d864e4fee7cd66';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static volatile bool
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'data_from_si4735';
      var-mem-desc-file = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
      var-mem-desc-line = '834';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/Users/rcaratti/OneDrive/Radioamador/Projetos/Arduino/RadioDSP/si4735/SI4735/SI4735.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
