<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="group__group06" kind="group">
    <compoundname>group06</compoundname>
    <title>Host and slave MCU setup</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__group06_1gadc6014674bd4d1ee3aab56c605926db1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SI4735::reset</definition>
        <argsstring>(void)</argsstring>
        <name>reset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reset the SI473X <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>Si47XX PROGRAMMING GUIDE; AN332; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SI4735/SI4735.h" line="930" column="10" bodyfile="SI4735/SI4735.cpp" bodystart="150" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="group__group06_1ga7b45c1b22c3c1a3f2326bee913d1e1e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SI4735::waitToSend</definition>
        <argsstring>(void)</argsstring>
        <name>waitToSend</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Wait for the si473x is ready (Clear to Send (CTS) status bit have to be 1). <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para>This function should be used before sending any command to a SI47XX device.</para>
<para><simplesect kind="see"><para>Si47XX PROGRAMMING GUIDE; AN332; pages 63, 128 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SI4735/SI4735.h" line="931" column="10" bodyfile="SI4735/SI4735.cpp" bodystart="169" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="group__group06_1ga8bc001cb28dc8fbd88ba0fa7024eca39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SI4735::setPowerUp</definition>
        <argsstring>(uint8_t CTSIEN, uint8_t GPO2OEN, uint8_t PATCH, uint8_t XOSCEN, uint8_t FUNC, uint8_t OPMODE)</argsstring>
        <name>setPowerUp</name>
        <param>
          <type>uint8_t</type>
          <declname>CTSIEN</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>GPO2OEN</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>PATCH</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>XOSCEN</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>FUNC</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>OPMODE</declname>
        </param>
        <briefdescription>
<para>Set the Power Up parameters for si473X. </para>
        </briefdescription>
        <detaileddescription>
<para>Use this method to chenge the defaul behavior of the Si473X. Use it before PowerUp()</para>
<para><simplesect kind="see"><para>Si47XX PROGRAMMING GUIDE; AN332; pages 65 and 129</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>CTSIEN sets Interrupt anabled or disabled (1 = anabled and 0 = disabled ) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>GPO2OEN sets GP02 Si473X pin enabled (1 = anabled and 0 = disabled ) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>PATCH Used for firmware patch updates. Use it always 0 here. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>XOSCEN sets external Crystal enabled or disabled </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>FUNC sets the receiver function have to be used [0 = FM Receive; 1 = AM (LW/MW/SW) and SSB (if SSB patch apllied)] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>OPMODE set the kind of audio mode you want to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SI4735/SI4735.h" line="937" column="10" bodyfile="SI4735/SI4735.cpp" bodystart="194" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="group__group06_1ga3e228da65641f4dcf4253262e19bde9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SI4735::radioPowerUp</definition>
        <argsstring>(void)</argsstring>
        <name>radioPowerUp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Powerup the Si47XX. </para>
        </briefdescription>
        <detaileddescription>
<para>Before call this function call the setPowerUp to set up the parameters.</para>
<para>Parameters you have to set up with setPowerUp</para>
<para>CTSIEN Interrupt anabled or disabled; GPO2OEN GPO2 Output Enable or disabled; PATCH Boot normally or patch; XOSCEN Use external crystal oscillator; FUNC defaultFunction = 0 = FM Receive; 1 = AM (LW/MW/SW) Receiver. OPMODE SI473X_ANALOG_AUDIO (B00000101) or SI473X_DIGITAL_AUDIO (B00001011)</para>
<para><simplesect kind="see"><para><ref refid="group__group06_1ga8bc001cb28dc8fbd88ba0fa7024eca39" kindref="member">SI4735::setPowerUp()</ref> </para>
</simplesect>
<simplesect kind="see"><para>Si47XX PROGRAMMING GUIDE; AN332; pages 64, 129 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SI4735/SI4735.h" line="938" column="10" bodyfile="SI4735/SI4735.cpp" bodystart="241" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="group__group06_1ga412f51386c47a17cf04fd0a3c3078726" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SI4735::analogPowerUp</definition>
        <argsstring>(void)</argsstring>
        <name>analogPowerUp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>You have to call setPowerUp method before. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Consider use radioPowerUp instead</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="see"><para><ref refid="group__group06_1ga8bc001cb28dc8fbd88ba0fa7024eca39" kindref="member">SI4735::setPowerUp()</ref> </para>
</simplesect>
<simplesect kind="see"><para>Si47XX PROGRAMMING GUIDE; AN332; pages 64, 129 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SI4735/SI4735.h" line="939" column="10" bodyfile="SI4735/SI4735.cpp" bodystart="265" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="group__group06_1gaa554b3390fb6c5a4d6661b96afae73ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SI4735::powerDown</definition>
        <argsstring>(void)</argsstring>
        <name>powerDown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Moves the device from powerup to powerdown mode. </para>
        </briefdescription>
        <detaileddescription>
<para>After Power Down command, only the Power Up command is accepted.</para>
<para><simplesect kind="see"><para>Si47XX PROGRAMMING GUIDE; AN332; pages 67, 132 </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__group06_1ga3e228da65641f4dcf4253262e19bde9b" kindref="member">radioPowerUp()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SI4735/SI4735.h" line="940" column="10" bodyfile="SI4735/SI4735.cpp" bodystart="280" bodyend="287"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
