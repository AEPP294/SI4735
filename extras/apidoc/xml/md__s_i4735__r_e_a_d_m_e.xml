<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="md__s_i4735__r_e_a_d_m_e" kind="page">
    <compoundname>md_SI4735_README</compoundname>
    <title>README</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>&lt;meta name=&quot;google-site-verification&quot; content=&quot;_wADvyP4vuP_aw0YTmu90mdAhz70vNwTF_pdAMMb0HY&quot; &gt;</para>
<sect1 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md0">
<title>Si4735 Library for Arduino</title>
<para>This is an Arduino library for the SI47XX, BROADCAST AM/FM/SW RADIO RECEIVER IC family from Silicon Labs. This library is intended to provide an easier interface for controlling the SI47XX by using Arduino platform. <bold>The communication used by this library is I²C</bold>.</para>
<para>This library was built based on <ulink url="https://www.silabs.com/documents/public/application-notes/AN332.pdf">“__Si47XX PROGRAMMING GUIDE; AN332__ ”</ulink>. It also can be used on <bold>all members of the SI473X family</bold> respecting, of course, the features available for each IC version. These functionalities can be seen in the comparison matrix shown in table 1 (<bold>Product Family Function</bold>); pages 2 and 3 of the programming guide.</para>
<para>This library can be freely distributed using the MIT Free Software model. <ulink url="https://github.com/pu2clr/SI4735#mit-licence">Copyright (c) 2019 Ricardo Lima Caratti</ulink> <linebreak/>
</para>
<para>Contact: <ulink url="mailto:pu2clr@gmail.com">pu2clr@gmail.com</ulink></para>
<para>There is a facebook group called <ulink url="https://www.facebook.com/groups/532613604253401/"><bold>Si47XX for Radio Experimenters</bold></ulink> where the purpose is exchanging experiences with projects based on Silicon Labs SI47XX IC family. You will be welcome to the group <ulink url="https://www.facebook.com/groups/532613604253401/">Si47XX for Radio Experimenters</ulink>.</para>
<para><bold>Attention</bold>:<itemizedlist>
<listitem><para><bold>Documentation under construction</bold>.</para>
</listitem><listitem><para><bold>The SI473 (SI473X) is a 3.3V part. If you are not using a 3.3V version of Arduino, you have to use a kind of 5V to 3.3V converter</bold>.</para>
</listitem><listitem><para><bold>This library has been successfully tested on Arduino Pro Mini 3.3V; Arduino UNO (using voltage converter); Arduino YÚN (using voltage converter); ESP32 (LOLIN32 WEMOS); Mega 2560 (using voltage converter); Genuino Micro/Atmega32u4 (using voltage converter) and Arduino DUE.</bold> <linebreak/>
</para>
</listitem></itemizedlist>
</para>
<sect2 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md1">
<title>Summary</title>
<para><orderedlist>
<listitem><para><ulink url="https://github.com/pu2clr/SI4735#mit-licence">License Copyright</ulink></para>
</listitem><listitem><para><ulink url="https://github.com/pu2clr/SI4735#thanks">Thanks</ulink></para>
</listitem><listitem><para><ulink url="https://github.com/pu2clr/SI4735#your-support-is-important">Your support is important</ulink></para>
</listitem><listitem><para><ulink url="https://github.com/pu2clr/SI4735#about-the-si4735">About the SI4735</ulink></para>
</listitem><listitem><para><ulink url="https://github.com/pu2clr/SI4735#si4735-terminology">Terminology</ulink></para>
</listitem><listitem><para><ulink url="https://github.com/pu2clr/SI4735#si4735-arduino-library-features">Labrary Features</ulink></para>
</listitem><listitem><para><ulink url="https://github.com/pu2clr/SI4735#library-installation">Library Installation</ulink></para>
</listitem><listitem><para><ulink url="https://github.com/pu2clr/SI4735#hardware-requirements-and-setup">Hardware Requirements and Setup</ulink><itemizedlist>
<listitem><para><ulink url="https://github.com/pu2clr/SI4735#schematic">Schematic</ulink></para>
</listitem><listitem><para><ulink url="https://github.com/pu2clr/SI4735#parts">Component Parts</ulink></para>
</listitem><listitem><para><ulink url="https://github.com/pu2clr/SI4735#tips-to-build">Tips to build</ulink></para>
</listitem><listitem><para><ulink url="https://github.com/pu2clr/SI4735#boards-where-this-library-has-been-successfully-tested">Boards where this library has been successfully tested</ulink></para>
</listitem><listitem><para><ulink url="https://github.com/pu2clr/SI4735#photos-tools-and-accessories">Photos (Tools and Accessories)</ulink></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><ulink url="https://github.com/pu2clr/SI4735#api-documentation">API Documentation</ulink></para>
</listitem><listitem><para><ulink url="https://github.com/pu2clr/SI4735#references">References</ulink></para>
</listitem><listitem><para><ulink url="https://github.com/pu2clr/SI4735/tree/master/examples">Examples</ulink></para>
</listitem><listitem><para><ulink url="https://github.com/pu2clr/SI4735#videos">Videos</ulink><itemizedlist>
<listitem><para><ulink url="https://github.com/pu2clr/SI4735#project-examples-made-by-the-author">Project examples made by the author</ulink></para>
</listitem><listitem><para><ulink url="https://github.com/pu2clr/SI4735#third-party-projects-using-this-library">Third-party projects using this library</ulink></para>
</listitem></itemizedlist>
</para>
</listitem></orderedlist>
</para>
</sect2>
<sect2 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md2">
<title>API Documentation</title>
<para>You can download the API documentation of this library in PDF or RTL format. <linebreak/>
</para>
<para><anchor id="_1raw-url1"/>Download API documentation in PDF or RTL format</para>
<para>You can also click <ulink url="https://github.com/pu2clr/SI4735/blob/master/extras/apidoc/api.md">here</ulink>.</para>
<para><linebreak/>
</para>
</sect2>
<sect2 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md3">
<title>MIT License</title>
<para>Copyright (c) 2019 Ricardo Lima Caratti</para>
<para>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</para>
<para>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</para>
<para>THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE ARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</para>
<para><linebreak/>
 <linebreak/>
</para>
</sect2>
<sect2 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md4">
<title>Thanks</title>
<para><itemizedlist>
<listitem><para>I would like to thank Mr Francisco Scaramella for the suggestions and contributions provided in the electronics field as well as for the testing of the functions implemented in this library;</para>
</listitem><listitem><para>I would like to thank <ulink url="https://youtu.be/fgjPGnTAVgM">Mr Vadim Afonkin</ulink> for making available the SSBRX patches for SI4735-D60 on his <ulink url="https://www.dropbox.com/sh/xzofrl8rfaaqh59/AAA5au2_CVdi50NBtt0IivyIa?dl=0">Dropbox repository</ulink>;</para>
</listitem><listitem><para>David Kellmer (USA) for suggesting corrections on the documentation and sketches;</para>
</listitem><listitem><para>WH2Q, Morikaku Gotoh, for his suggestion about Automatic Volume Control on AM mode;</para>
</listitem><listitem><para>All members of the Facebook groups <ulink url="https://www.facebook.com/groups/532613604253401/">&quot;Si47XX for radio experimenters&quot;</ulink> and <ulink url="https://www.facebook.com/groups/1121785218031286/">&quot;Si47XX para radioescutas&quot;</ulink> for the suggestions and corrections during the development of this project.</para>
</listitem></itemizedlist>
</para>
<para><linebreak/>
 <linebreak/>
</para>
</sect2>
<sect2 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md5">
<title>Your support is important.</title>
<para>If you would like to support this library development, consider joining this project via Github. Alternatively, make suggestions on features you would like available in this library. Thank you!</para>
<para><linebreak/>
 <linebreak/>
</para>
</sect2>
<sect2 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md6">
<title>About the SI4735</title>
<para>The Si4735 is DSP radio receiver IC from Silcon Labs. It has great performance on AM (LW/MW/SW) and local FM station. The <ref refid="class_s_i4735" kindref="compound">SI4735</ref> can be programmed by using commands and responses. You can contron it via a microcontroller like Arduino. To make the <ref refid="class_s_i4735" kindref="compound">SI4735</ref> perform an action, the microccontroller have to send a set of bytes (command and arguments) that the device interpret it and executes the given command.</para>
<para><linebreak/>
</para>
</sect2>
<sect2 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md7">
<title>Radios based on Si47XX Family</title>
<para>The table below shows some radios based on SI47XX <linebreak/>
</para>
<para><table rows="15" cols="4"><row>
<entry thead="yes"><para>Manufacturer </para>
</entry><entry thead="yes"><para>Model </para>
</entry><entry thead="yes"><para>CI </para>
</entry><entry thead="yes"><para>More information  </para>
</entry></row>
<row>
<entry thead="no"><para>Tecsun </para>
</entry><entry thead="no"><para>PL310ET </para>
</entry><entry thead="no"><para>Si4734 </para>
</entry><entry thead="no"><para><ulink url="https://www.tecsunradios.com.au/store/product/tecsun-pl310et-multi-band-radio/">About</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>Tecsun </para>
</entry><entry thead="no"><para>PL-365 </para>
</entry><entry thead="no"><para>Si4735 </para>
</entry><entry thead="no"><para><ulink url="https://swling.com/blog/2017/02/charlie-reviews-the-tecsun-pl-365/">Review</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>Tecsun </para>
</entry><entry thead="no"><para>PL-360 </para>
</entry><entry thead="no"><para>Si4734 </para>
</entry><entry thead="no"><para><ulink url="https://www.edn.com/review-tecsun-pl-360-emi-receiver/">Review</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>Tecsun </para>
</entry><entry thead="no"><para>PL380 </para>
</entry><entry thead="no"><para>Si4734 </para>
</entry><entry thead="no"><para><ulink url="https://www.eham.net/reviews/view-product?id=10240">Reviews</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>Tecsun </para>
</entry><entry thead="no"><para>PL880 </para>
</entry><entry thead="no"><para>Si4735 </para>
</entry><entry thead="no"><para><ulink url="https://www.eham.net/reviews/view-product?id=11457">Reviews</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>Degen </para>
</entry><entry thead="no"><para>DE1103 DSP </para>
</entry><entry thead="no"><para>Si4735 </para>
</entry><entry thead="no"><para><ulink url="https://swling.com/blog/2015/11/the-new-degen-de1103-dsp-first-impressions-review/">Review</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>Degen </para>
</entry><entry thead="no"><para>DE1123/Kaito KA1123 </para>
</entry><entry thead="no"><para>Si4734 </para>
</entry><entry thead="no"><para><ulink url="https://frrl.wordpress.com/2009/07/11/review-of-the-degen-de1123-dsp-amfmsw-pocket-radio-with-1gb-mp3-player-recorder/">Review</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>Degen </para>
</entry><entry thead="no"><para>DE1125/Kaito KA801 </para>
</entry><entry thead="no"><para>Si4734 </para>
</entry><entry thead="no"><para><ulink url="https://www.eham.net/reviews/view-product?id=9584">Reviews</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>Degen </para>
</entry><entry thead="no"><para>DE1126 </para>
</entry><entry thead="no"><para>Si4734 </para>
</entry><entry thead="no"><para><ulink url="https://sites.google.com/site/zliangas/de1126-review">Review</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>Degen </para>
</entry><entry thead="no"><para>DE1127 (discontinued) </para>
</entry><entry thead="no"><para>Si4734 </para>
</entry><entry thead="no"><para><ulink url="https://herculodge.typepad.com/herculodge/2012/01/dave-zantow-provides-firmware-updates-for-degen-de1127-and-de1126-models.html">Review</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>Sangean </para>
</entry><entry thead="no"><para>ATS-909X </para>
</entry><entry thead="no"><para>Si4735 </para>
</entry><entry thead="no"><para><ulink url="https://swling.com/blog/tag/sangean-ats-909x-review/">Review</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>XHDATA </para>
</entry><entry thead="no"><para>D808 </para>
</entry><entry thead="no"><para>Si4735 </para>
</entry><entry thead="no"><para><ulink url="https://swling.com/blog/2018/04/a-detailed-review-of-the-xhdata-d-808-and-comparison-with-the-tecsun-pl-660/">Review</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>RADIWOW </para>
</entry><entry thead="no"><para>R-108 </para>
</entry><entry thead="no"><para></para>
</entry><entry thead="no"><para><ulink url="https://www.hagensieker.com/wordpress/2019/05/08/radiwow-r-108-short-wave-radio-review/">Review</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>C Crane </para>
</entry><entry thead="no"><para>CC Skywave </para>
</entry><entry thead="no"><para></para>
</entry><entry thead="no"><para><ulink url="https://swling.com/blog/2014/12/review-of-the-c-crane-cc-skywave-portable-radio/">Review</ulink>  </para>
</entry></row>
</table>
</para>
<para><linebreak/>
 <linebreak/>
</para>
<sect3 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md8">
<title>Functional Block Diagram</title>
<para>The image below shows the SI473X-D60 block diagram. It was extracted from Silicon Labs Si4730/31/34/35-D60 / BROADCAST AM/FM/SW/LW RADIO RECEIVER (page 21). <bold>Note that the author of this Library highlights in red the pin operating voltages that can be connected to the Arduino</bold>. Be aware of the operating voltage of the Arduino pins you will use in your project. Preferably use an Arduino with 3.3V operating voltage. If you are not using a 3.3V version of Arduino, you must use a kind of 5V to 3.3V converter on RST, SCLK, SDIO and SEN (depending on your project).</para>
<para><image type="html" name="block_diagram.png" inline="yes"></image>
</para>
<para><linebreak/>
 <linebreak/>
</para>
</sect3>
<sect3 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md9">
<title>The main Si4735 features</title>
<para><itemizedlist>
<listitem><para>FM band support (64–108 MHz)</para>
</listitem><listitem><para>AM (MW) band support (520–1710 kHz)</para>
</listitem><listitem><para>SW band support (2.3–26.1 MHz)</para>
</listitem><listitem><para>LW band support (153–279 kHz)</para>
</listitem><listitem><para>Allows firmware upgrade. Including the possibility of adjustments to demodulate SSB.</para>
</listitem><listitem><para>Advanced AM/FM seek tuning</para>
</listitem><listitem><para>Automatic frequency control (AFC)</para>
</listitem><listitem><para>Automatic gain control (AGC)</para>
</listitem><listitem><para>Digital FM stereo decoder</para>
</listitem><listitem><para>AM/FM/SW/LW digital tuning</para>
</listitem><listitem><para>RDS/RBDS processor</para>
</listitem><listitem><para>Digital audio out</para>
</listitem><listitem><para>I²C and SPI interface</para>
</listitem><listitem><para>Great Programming Guide and additional documentation to deal with the device</para>
</listitem></itemizedlist>
</para>
<para><linebreak/>
 <linebreak/>
</para>
</sect3>
</sect2>
<sect2 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md10">
<title>SI4735 Terminology</title>
<para><table rows="24" cols="2"><row>
<entry thead="yes"><para>Term </para>
</entry><entry thead="yes"><para>Description  </para>
</entry></row>
<row>
<entry thead="no"><para>API </para>
</entry><entry thead="no"><para>Application Programming Interface (API). In this context, it is an interface that you can use to simplify the implementation and maintenance of your software (Arduino sketch)  </para>
</entry></row>
<row>
<entry thead="no"><para>Arduino Libraries </para>
</entry><entry thead="no"><para>Libraries are files written in C or C++ (.c, .cpp) which provide your sketches with extra functionality. The <ref refid="class_s_i4735" kindref="compound">SI4735</ref> Library provides extra functionalities to make easier the Arduino deal with Si4735 device  </para>
</entry></row>
<row>
<entry thead="no"><para>IDE </para>
</entry><entry thead="no"><para>Integrated Development Environment  </para>
</entry></row>
<row>
<entry thead="no"><para>Sketch </para>
</entry><entry thead="no"><para>Name that Arduino environment uses for a program  </para>
</entry></row>
<row>
<entry thead="no"><para>interrupt </para>
</entry><entry thead="no"><para>In this context, it is a Arduino Resource. Allows important tasks to be performed regardless of the flow of your program  </para>
</entry></row>
<row>
<entry thead="no"><para>C++ </para>
</entry><entry thead="no"><para>A object-oriented programming (OOP) language. It is a superset of the C language with an additional concept of &quot;classes.&quot;  </para>
</entry></row>
<row>
<entry thead="no"><para>programming guide </para>
</entry><entry thead="no"><para>In this context it refers to <ulink url="https://www.silabs.com/documents/public/application-notes/AN332.pdf">Si47XX PROGRAMMING GUIDE</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>LNA </para>
</entry><entry thead="no"><para>Low Noise Amplifier  </para>
</entry></row>
<row>
<entry thead="no"><para>POC </para>
</entry><entry thead="no"><para>Proof of Concept  </para>
</entry></row>
<row>
<entry thead="no"><para>SEN </para>
</entry><entry thead="no"><para>Serial enable pin, active low; used as device select in 3-wire and SPI operation and address selection in 2-wire operation  </para>
</entry></row>
<row>
<entry thead="no"><para>CTS </para>
</entry><entry thead="no"><para>Clear to send  </para>
</entry></row>
<row>
<entry thead="no"><para>STC </para>
</entry><entry thead="no"><para>Seek/Tune Complete  </para>
</entry></row>
<row>
<entry thead="no"><para>RESP </para>
</entry><entry thead="no"><para>Response byte (n = 1 to 15)  </para>
</entry></row>
<row>
<entry thead="no"><para>RESPONSEn </para>
</entry><entry thead="no"><para>Response register (16-bit) in 3-Wire mode (n = 1 to 8)  </para>
</entry></row>
<row>
<entry thead="no"><para>RST </para>
</entry><entry thead="no"><para>Also RSTb—Reset pin, active low  </para>
</entry></row>
<row>
<entry thead="no"><para>RCLK </para>
</entry><entry thead="no"><para>External reference clock  </para>
</entry></row>
<row>
<entry thead="no"><para>SSB </para>
</entry><entry thead="no"><para><ulink url="https://en.wikipedia.org/wiki/Single-sideband_modulation">Single Side Band</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>Attack </para>
</entry><entry thead="no"><para>attack-time delay - the time needed for a receiver to respond to an incoming signal  </para>
</entry></row>
<row>
<entry thead="no"><para>SDIO </para>
</entry><entry thead="no"><para>Serial data in/data out pin  </para>
</entry></row>
<row>
<entry thead="no"><para>SCLK </para>
</entry><entry thead="no"><para>Serial clock pin  </para>
</entry></row>
<row>
<entry thead="no"><para>I²C </para>
</entry><entry thead="no"><para><ulink url="https://pt.wikipedia.org/wiki/I²C">I²C - Inter-Integrated Circuit</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>Soft Mute </para>
</entry><entry thead="no"><para>Resource used to attenuate the audiooutputs and minimize audible noise in very weak signalconditions  </para>
</entry></row>
<row>
<entry thead="no"><para>Firmware Upgrades </para>
</entry><entry thead="no"><para>The Si473x-D60 contains on-chip program RAM to accommodate minor changes to the firmware  </para>
</entry></row>
</table>
</para>
<para><linebreak/>
 <linebreak/>
 <linebreak/>
</para>
</sect2>
<sect2 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md11">
<title>SI4735 Arduino Library Features</title>
<para>This library uses the I²C communication protocol and implements most of the functions offered by Si47XX (BROADCAST AM / FM / SW / LW RADIO RECEIVER) IC family from Silicon Labs. The main features of this library are listed below.</para>
<para><orderedlist>
<listitem><para>Open Source. It is free. You can use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software. See <ulink url="https://github.com/pu2clr/SI4735#mit-license">MIT License</ulink> to know more. <linebreak/>
</para>
</listitem><listitem><para>Built Based on <ulink url="https://www.silabs.com/documents/public/application-notes/AN332.pdf">Si47XX PROGRAMMING GUIDE</ulink></para>
</listitem><listitem><para>C++ Language and Object-oriented programming. You can easily extend the <ref refid="class_s_i4735" kindref="compound">SI4735</ref> class by adding more functionalities;</para>
</listitem><listitem><para>Available on Arduino IDE (Manage Libraries);</para>
</listitem><listitem><para>Cross-platform. You can compile and run this library on most of board available on Arduino IDE (Examples: ATtiny85, boards based on ATmega328 and ATmega-32u4, ATmega2560, 32 ARM Cortex, Arduino DUE, ESP32 and more). See <ulink url="https://github.com/pu2clr/SI4735#boards-where-this-library-has-been-successfully-tested">Boards where this library has been successfully tested</ulink>;</para>
</listitem><listitem><para>Simplifies projects based on <ref refid="class_s_i4735" kindref="compound">SI4735</ref>;</para>
</listitem><listitem><para><bold>I²C communication</bold> and Automatic I²C bus address detection;</para>
</listitem><listitem><para>More than 100 <ulink url="https://github.com/pu2clr/SI4735#api-documentation">functions implemented</ulink>. You can customize almost every feature available on Si47XX family.</para>
</listitem><listitem><para><ulink url="https://github.com/pu2clr/SI4735#rds">RDS support</ulink>(<bold>under construction...</bold>)</para>
</listitem><listitem><para><ulink url="https://github.com/pu2clr/SI4735#single-side-band-ssb-support">SSB (Single Side Band) patch support</ulink></para>
</listitem></orderedlist>
</para>
<para><linebreak/>
 <linebreak/>
</para>
</sect2>
<sect2 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md12">
<title>Library Installation</title>
<para>You can install this library on your Arduino environment using different methods. The best ways to do that are described below. <linebreak/>
</para>
<sect3 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md13">
<title>Installing via Arduino IDE</title>
<para>This is the easiest method to install this library.</para>
<para><image type="html" name="lib_install_01.png" inline="yes"></image>
</para>
<para><linebreak/>
</para>
<para><image type="html" name="lib_install_02.png" inline="yes"></image>
</para>
<para><linebreak/>
</para>
</sect3>
<sect3 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md14">
<title>Installing via this repository</title>
<para><image type="html" name="install_lib_from_git_01.png" inline="yes"></image>
</para>
<para><linebreak/>
</para>
<para><image type="html" name="install_lib_from_git_02.png" inline="yes"></image>
</para>
<para>First, you have to download this library in zip format. <ulink url="https://github.com/pu2clr/SI4735/archive/master.zip">Click here</ulink> to download.</para>
<para>Unzip the SI4735.zip file in your Arduino Library folder.</para>
<para><itemizedlist>
<listitem><para>On <bold>Windows</bold>: &quot;My Documents\Arduino\libraries&quot;</para>
</listitem><listitem><para>On <bold>MAC OS</bold>: ˜/Documents/Arduino/libraries</para>
</listitem><listitem><para>On <bold>Linux</bold>: ˜/Documents/Arduino/libraries</para>
</listitem></itemizedlist>
</para>
<para>See more <ulink url="https://www.ardu-badge.com/PU2CLR%20SI4735"><image type="html" name="MyLibrary.svg?" inline="yes"></image>
</ulink></para>
<para><linebreak/>
 <linebreak/>
</para>
</sect3>
</sect2>
<sect2 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md15">
<title>Hardware Requirements and Setup</title>
<para>This library has been written for the Arduino platform and has been successfully tested on many platform. See <ulink url="https://github.com/pu2clr/SI4735#boards-where-this-library-has-been-successfully-tested">Boards where this library has been successfully tested</ulink></para>
<sect3 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md16">
<title>Arduino 5V and Si4735</title>
<para><itemizedlist>
<listitem><para><bold>THE <ref refid="class_s_i4735" kindref="compound">SI4735</ref> IS A 3.3V PART. IF YOU ARE NOT USING A 3.3V VERSION OF ARDUINO or anothe board, YOU HAVE TO USE A KIND OF 5V TO 3.3V CONVERTER. Also pay attention to the appropriated pinout of your board to select the correct interrupt (IRQ- if you are using), RST, SDIO and SCLK pins. The table below shows some Arduino board pinout.</bold></para>
</listitem></itemizedlist>
</para>
<para><linebreak/>
</para>
<para><table rows="10" cols="5"><row>
<entry thead="yes"><para>Board </para>
</entry><entry thead="yes"><para>InterrupT (IRQ) Pins </para>
</entry><entry thead="yes"><para>I²C / TWI pins </para>
</entry><entry thead="yes"><para>successfully tested </para>
</entry><entry thead="yes"><para>Voltage converter  </para>
</entry></row>
<row>
<entry thead="no"><para>328-based <linebreak/>
 (Nano, Uno or Mini 5V) </para>
</entry><entry thead="no"><para>D2 and D3 </para>
</entry><entry thead="no"><para>A4 (SDA/SDIO), A5 (SCL/SCLK) </para>
</entry><entry thead="no"><para>Yes </para>
</entry><entry thead="no"><para>Yes  </para>
</entry></row>
<row>
<entry thead="no"><para>328-based <linebreak/>
 (Pro Mini 3.3 / 8Mhz) </para>
</entry><entry thead="no"><para>D2 and D3 </para>
</entry><entry thead="no"><para>A4 (SDA/SDIO), A5 (SCL/SCLK) </para>
</entry><entry thead="no"><para>Yes </para>
</entry><entry thead="no"><para>No  </para>
</entry></row>
<row>
<entry thead="no"><para>Mega 2560 </para>
</entry><entry thead="no"><para>2, 3, 18, 19, 20 and 21 </para>
</entry><entry thead="no"><para>20 (SDA/SDIO), 21 (SCL/SCLK) </para>
</entry><entry thead="no"><para>Yes </para>
</entry><entry thead="no"><para>Yes  </para>
</entry></row>
<row>
<entry thead="no"><para>32u4-based <linebreak/>
 (Micro, Leonardo or Yum) </para>
</entry><entry thead="no"><para>0, 1, 2, 3 and 7 </para>
</entry><entry thead="no"><para>2 (SDA/SDIO), 3 (SCL/SCLK) </para>
</entry><entry thead="no"><para>Yes </para>
</entry><entry thead="no"><para>Yes  </para>
</entry></row>
<row>
<entry thead="no"><para>Zero </para>
</entry><entry thead="no"><para>all digital pins except pin 4 </para>
</entry><entry thead="no"><para>D8 (SDA/SDIO) and D9 (SCL/SCLK) </para>
</entry><entry thead="no"><para>Not tested </para>
</entry><entry thead="no"><para>No  </para>
</entry></row>
<row>
<entry thead="no"><para>Due </para>
</entry><entry thead="no"><para>all digital pins </para>
</entry><entry thead="no"><para>20 (SDA/SDIO), 21 (SCL/SCLK) </para>
</entry><entry thead="no"><para>Yes </para>
</entry><entry thead="no"><para>No  </para>
</entry></row>
<row>
<entry thead="no"><para>101 </para>
</entry><entry thead="no"><para>all digital pins. <linebreak/>
 Only pins 2, 5, 7, 8, 10, 11, 12, 13 work with CHANGE </para>
</entry><entry thead="no"><para>- </para>
</entry><entry thead="no"><para>Not tested </para>
</entry><entry thead="no"><para>No  </para>
</entry></row>
<row>
<entry thead="no"><para>ESPRESSIF ESP32 </para>
</entry><entry thead="no"><para>all GPIO pins </para>
</entry><entry thead="no"><para>Most pins (usually 21 and 22) </para>
</entry><entry thead="no"><para>Yes </para>
</entry><entry thead="no"><para>No  </para>
</entry></row>
<row>
<entry thead="no"><para>STM32F103 </para>
</entry><entry thead="no"><para>PA0, PA1 </para>
</entry><entry thead="no"><para>PB6 (SCL) and PB7(SDA) </para>
</entry><entry thead="no"><para>Yes </para>
</entry><entry thead="no"><para>No  </para>
</entry></row>
</table>
</para>
</sect3>
<sect3 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md17">
<title>Schematic</title>
<para>The main porpuse of this prototype is testing de Si4735 Arduino Library. It does not intend to be a real radio for exigent listener. However, it is possible to start with it and after include some devices to improve, for example, its sensibility beyond other desired features.</para>
<para>The image bellow shows a version of Slicon Labs SSOP Typical Application Schematic connect to the host MCU (Arduino Pro Pini 3.3V). <bold>Pay attention to the Si4735-D60 SEN pin (16). When the SEN pin is connected to the ground, the I²C bus address is 0x11. When the SEN pin is connected to +3.3V, the I²C bus address is 0x63. By default, the &quot;Si4735 Arduino Library&quot; uses the 0x11 I²C bus address (SEN pin connected to GND). If you want to use the address 0x63 (SEN connected on +3.3V), see the functions (methods) getDeviceI2CAddress, setDeviceI2CAddress and setDeviceOtherI2CAddress</bold>. <linebreak/>
</para>
<para><image type="html" name="basic_schematic.png" inline="yes"></image>
</para>
<sect4 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md18">
<title>The picture below shows the SI4735-D60 pinout</title>
<para><image type="html" name="Si4735-D60-pinout.png" inline="yes"></image>
</para>
<para><itemizedlist>
<listitem><para><bold>See some Shortwave antenna configuration on</bold> <ulink url="https://www.silabs.com/documents/public/application-notes/AN383.pdf">Si47XX ANTENNA, SCHEMATIC, LAYOUT, AND DESIGN GUIDELINES; AN383</ulink></para>
</listitem><listitem><para><bold>THE <ref refid="class_s_i4735" kindref="compound">SI4735</ref> IS A 3.3V PART. IF YOU ARE NOT USING A 3.3V VERSION OF ARDUINO, YOU HAVE TO USE A KIND OF 5V TO 3.3V CONVERTER. Also pay attention to the appropriated Arduino pinout to select the correct interrupt (IRQ), RST, SDIO and SCLK pins. The table below shows some Arduino board pinout</bold>. <linebreak/>
</para>
</listitem><listitem><para><bold>The Si473X PEN pin (16 on SSOP version and 6 on QFN version) when connected to the ground, the I²C bus address is 0x11. When this pin is connected to +3.3V, the I²C bus address is 0x63</bold>. See the functions <ulink url="https://github.com/pu2clr/SI4735#getdevicei2caddress">getDeviceI2CAddress</ulink> and <ulink url="https://github.com/pu2clr/SI4735#setdevicei2caddress">setDeviceI2CAddress</ulink> to correct setup. If you follow the schematic used in this project, you do not need to do anything (the default I²C bus address is 0x11). If you do not know how this pin is configured on the board, use <ulink url="https://github.com/pu2clr/SI4735#getdevicei2caddress">getDeviceI2CAddress</ulink>. <linebreak/>
</para>
</listitem></itemizedlist>
</para>
<para><linebreak/>
 <linebreak/>
</para>
</sect4>
<sect4 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md19">
<title>The image bellow shows the Slicon Labs SSOP Typical Application Schematic.</title>
<para><image type="html" name="silicon_labs_schematic_pag_19.png" inline="yes"></image>
</para>
<para><linebreak/>
 <linebreak/>
</para>
</sect4>
</sect3>
<sect3 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md20">
<title>Parts</title>
<para>The table below shows the component parts used to build the radio prototype based on Si4735 and used the Slicon Labs SSOP Typical Application Schematic as main source. However, some parts were included by the author of this project.</para>
<para><table rows="12" cols="2"><row>
<entry thead="yes"><para>Part </para>
</entry><entry thead="yes"><para>Description  </para>
</entry></row>
<row>
<entry thead="no"><para>C1 </para>
</entry><entry thead="no"><para>22nF Monolithic Multilayer Chip Ceramic non polarized capacitor (Place it close to VA pin)  </para>
</entry></row>
<row>
<entry thead="no"><para>C2 </para>
</entry><entry thead="no"><para>1nF Monolithic Multilayer Chip Ceramic non polarized capacitor  </para>
</entry></row>
<row>
<entry thead="no"><para>C3 </para>
</entry><entry thead="no"><para>470nF Monolithic Multilayer Chip Ceramic non polarized capacitor  </para>
</entry></row>
<row>
<entry thead="no"><para>C4 </para>
</entry><entry thead="no"><para>100nF Monolithic Multilayer Chip Ceramic non polarized capacitor (Place it close to VD pin)  </para>
</entry></row>
<row>
<entry thead="no"><para>C5 and C6 </para>
</entry><entry thead="no"><para>22pF (Crystal load capacitors)  </para>
</entry></row>
<row>
<entry thead="no"><para>C7 and C8[ˆ1] </para>
</entry><entry thead="no"><para>4.7uF Monolithic Multilayer Chip Ceramic non polarized capacitor  </para>
</entry></row>
<row>
<entry thead="no"><para>R3 </para>
</entry><entry thead="no"><para>2.2K  </para>
</entry></row>
<row>
<entry thead="no"><para>(R4 and R5)[ˆ2] </para>
</entry><entry thead="no"><para>2.2K to 10K (pull-up resistors)  </para>
</entry></row>
<row>
<entry thead="no"><para>L1 </para>
</entry><entry thead="no"><para>Ferrite loop stick (about 500 μH)  </para>
</entry></row>
<row>
<entry thead="no"><para>X1 </para>
</entry><entry thead="no"><para>32.768 kHz crystal  </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="class_s_i4735" kindref="compound">SI4735</ref> </para>
</entry><entry thead="no"><para>digital CMOS AM(LW, MW and SW)/FM radio receiver IC  </para>
</entry></row>
</table>
</para>
<para><itemizedlist>
<listitem><para>[ˆ1]: C7 and C8 are ceramic capacitors included by the author of this project. They are not present on original Silicon Labs schematic.</para>
</listitem><listitem><para>[ˆ2]: R4 and R5 are pull-up resistor included by the author of this project. They are not present on original Silicon Labs schematic. This will also depend on other devices connected to the same I²C bus. <bold>Always try to use the lowest possible value</bold>.</para>
</listitem></itemizedlist>
</para>
<para><bold>Notes from Silicon Labs Broadcast AM/FM/SW/LW Radio Receiver documentation (page 12)</bold>:<itemizedlist>
<listitem><para>Place C1 close to VA and C4 close to VD pin.</para>
</listitem><listitem><para>All grounds connect directly to GND plane on PCB.</para>
</listitem><listitem><para>Pins 6 and 7 are no connects, leave floating.</para>
</listitem><listitem><para>Pins 10 and 11 are unused. Tie these pins to GND.</para>
</listitem><listitem><para>To ensure proper operation and receiver performance, follow the guidelines in “AN383: Si47xx Antenna, Schematic,</para>
</listitem><listitem><para>Layout, and Design Guidelines.” Silicon Laboratories will evaluate schematics and layouts for qualified customers.</para>
</listitem><listitem><para>Pin 8 connects to the FM antenna interface, and pin 12 connects to the AM antenna interface.</para>
</listitem><listitem><para>Place Si473x-D60 as close as possible to antenna and keep the FMI and AMI traces as short as possible.</para>
</listitem></itemizedlist>
</para>
<para><linebreak/>
</para>
</sect3>
<sect3 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md21">
<title>Tips to build</title>
<para><itemizedlist>
<listitem><para>Try to follow what the Silicon Labs recommends;</para>
</listitem><listitem><para>Start building the minimum circuit and test it;</para>
</listitem><listitem><para>Check if the Si47XX RESET pin (15 on SSOP version or 5 on QFN version) is connected on your MCU (Arduino) pin defined as RESET the (the most of schematics and examples of this project this pin is the digital pin 12);</para>
</listitem><listitem><para>Use the minimum sketch to test the minimum circuit. The first three examples of this project (see examples folder) can be used to test the minimum circuit;</para>
</listitem><listitem><para>Try not improvising the I²C bus connection. Start using a 3.3V MCU (Arduino Pro Mini 8MHz or DUE, ESP32 or other 3.3V device) to connect with <ref refid="class_s_i4735" kindref="compound">SI4735</ref>;</para>
</listitem><listitem><para>Some devices provide internal pull-up resistors that in some cases can be enabled or disabled. Also, the capacitance of the I²C bus is another variable that have be considered to select the right resistor values. However, that capacitance is not easy to be measured. For these reasons, it can be a liitle dificult calculate the right resitor values at first. That said, start with a high pullup resistor to I²C bus and then reduce it until the best value. For example: start with 10K and try to reduce the value to 4,7K, 3,3K, 2.2K etc. Select the lowest resistor you can.</para>
</listitem><listitem><para>I²C bus devices are available in different speeds. If you are using an I²C display device, check if its speed is compatible with the Si47XX and also with the current speed used by the master MCU;</para>
</listitem><listitem><para>Using different voltage levels between I²C devices can be unsafe and can destroy parts connected on I²C bus, specially the Si47XX;</para>
</listitem><listitem><para>It is important to wire all your I²C devices on the same common ground.</para>
</listitem><listitem><para>If you are using Arduino Mini Pro, ONU or similar, pay attention to the pin 13 and the use of internal pull-up resistor. This pin has a LED and a resistor connected on the board. When this pin is set to HIGH the LED comes on. If you use the internal pull-up resistor of the pin 13, you might experiment problem due to the drop voltage caused by the LED circuit. If this occurs in your project, you can do:<itemizedlist>
<listitem><para>Use the pin 14. This pin is the A0 (Analog). But you have to refer it by 14 to use it as digital pin;</para>
</listitem><listitem><para>Change the circuit and sketch to use external pull-up on pin 13;</para>
</listitem><listitem><para>Remove the LED or resitor connected to the led from the board. <linebreak/>
</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>Use only batteries to power your circuit. Receptions in LW, MW and SW can be seriously harmed by the use of power supplies connected to the grid.</para>
</listitem><listitem><para>See some Shortwave antenna configuration on <ulink url="https://www.silabs.com/documents/public/application-notes/AN383.pdf">Si47XX ANTENNA, SCHEMATIC, LAYOUT, AND DESIGN GUIDELINES; AN383</ulink> <linebreak/>
</para>
</listitem></itemizedlist>
</para>
<para><linebreak/>
</para>
</sect3>
<sect3 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md22">
<title>Boards where this library has been successfully tested</title>
<para>This library can be useful to develop a cross-platform software. So far, it has been successfully tested on the architectures shown below. <linebreak/>
</para>
<para><image type="html" name="multiplatform_SI47XX_photo_05.png" inline="yes"></image>
</para>
<para>The table below shows the some boards where this library has been successfully tested.</para>
<para><table rows="13" cols="5"><row>
<entry thead="yes"><para>Board </para>
</entry><entry thead="yes"><para>Need voltage converter </para>
</entry><entry thead="yes"><para>I²C Pins </para>
</entry><entry thead="yes"><para>Used Reset Pin </para>
</entry><entry thead="yes"><para>Features  </para>
</entry></row>
<row>
<entry thead="no"><para>Arduino Pro Mini 3.3V 8MHz </para>
</entry><entry thead="no"><para>No </para>
</entry><entry thead="no"><para>A4 and A5 </para>
</entry><entry thead="no"><para>12 </para>
</entry><entry thead="no"><para><ulink url="https://store.arduino.cc/usa/arduino-pro-mini">More...</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>Mega 2560 Pro </para>
</entry><entry thead="no"><para>Yes </para>
</entry><entry thead="no"><para>20 and 21 </para>
</entry><entry thead="no"><para>12 </para>
</entry><entry thead="no"><para><ulink url="https://store.arduino.cc/usa/mega-2560-r3">More...</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>ESP WEMOS LOLIN32 </para>
</entry><entry thead="no"><para>No </para>
</entry><entry thead="no"><para>21 and 22 [ˆ4] </para>
</entry><entry thead="no"><para>25 [ˆ5] </para>
</entry><entry thead="no"><para><ulink url="https://docs.platformio.org/en/latest/boards/espressif32/lolin32.html">More...</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>ESP32 Dev Module </para>
</entry><entry thead="no"><para>No </para>
</entry><entry thead="no"><para>21 and 22 [ˆ4] </para>
</entry><entry thead="no"><para>25 [ˆ5] </para>
</entry><entry thead="no"><para><ulink url="https://www.espressif.com/sites/default/files/documentation/esp32_datasheet_en.pdf">More...</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>Arduino UNO </para>
</entry><entry thead="no"><para>Yes </para>
</entry><entry thead="no"><para>A4 and A5 </para>
</entry><entry thead="no"><para>12 </para>
</entry><entry thead="no"><para><ulink url="https://store.arduino.cc/usa/arduino-uno-rev3">More...</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>Arduino Yún / ATmega-32u4 </para>
</entry><entry thead="no"><para>Yes </para>
</entry><entry thead="no"><para>2 and 3 </para>
</entry><entry thead="no"><para>12 </para>
</entry><entry thead="no"><para><ulink url="https://store.arduino.cc/usa/arduino-yun">More...</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>ATtiny85 </para>
</entry><entry thead="no"><para>No </para>
</entry><entry thead="no"><para>5 and 7 </para>
</entry><entry thead="no"><para>2 (D3) </para>
</entry><entry thead="no"><para><ulink url="https://ww1.microchip.com/downloads/en/DeviceDoc/Atmel-2586-AVR-8-bit-Microcontroller-ATtiny25-ATtiny45-ATtiny85_Datasheet.pdf">More...</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>Arduino DUE </para>
</entry><entry thead="no"><para>No </para>
</entry><entry thead="no"><para>2 and 3 </para>
</entry><entry thead="no"><para>12 </para>
</entry><entry thead="no"><para><ulink url="https://store.arduino.cc/usa/due">More...</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>BlueDuino 3.3V (ATmega-32u4) </para>
</entry><entry thead="no"><para>No </para>
</entry><entry thead="no"><para>2 and 3 </para>
</entry><entry thead="no"><para>10 </para>
</entry><entry thead="no"><para><ulink url="https://wiki.aprbrother.com/en/BlueDuino_rev2.html">More...</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>Arduino Mini Pro </para>
</entry><entry thead="no"><para>Yes </para>
</entry><entry thead="no"><para>2 and 3 </para>
</entry><entry thead="no"><para>10 </para>
</entry><entry thead="no"><para><ulink url="https://store.arduino.cc/usa/arduino-pro-mini">More...</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>STM32F746G-DISCO </para>
</entry><entry thead="no"><para>No </para>
</entry><entry thead="no"><para>- </para>
</entry><entry thead="no"><para>- </para>
</entry><entry thead="no"><para><ulink url="https://www.st.com/en/evaluation-tools/32f746gdiscovery.html?fbclid=IwAR2D9OwhInHQ8WYxeflJQ7QV2aNscFbfcbeblaFcYq0angJIjCKmkQBPTBc">More...</ulink>  </para>
</entry></row>
<row>
<entry thead="no"><para>STM32F103 Series </para>
</entry><entry thead="no"><para>No </para>
</entry><entry thead="no"><para>PB6 (SCL) and PB7(SDA) </para>
</entry><entry thead="no"><para>PA12 </para>
</entry><entry thead="no"><para><ulink url="https://circuitdigest.com/microcontroller-projects/getting-started-with-stm32-development-board-stm32f103c8-using-arduino-ide">More...</ulink>  </para>
</entry></row>
</table>
</para>
<para><itemizedlist>
<listitem><para>[ˆ4] It seams that in some ESP32 board, the I²C bus is not configured prorpelly by default. However, you can set almost any pin on ESP32 to setup I²C capabilities. All you have to do is call <bold>Wire.begin(SDA, SCL);</bold> where SDA and SCL are the ESP32 GPIO pins. The code below shows that.</para>
</listitem><listitem><para>[^5] You can use the pin 12 too. <linebreak/>
</para>
</listitem></itemizedlist>
<orderedlist>
<listitem><para>More about ESP boards on <ulink url="https://www.espressif.com/en/products/hardware/development-boards">ESPRESSOF Development Boards</ulink>.</para>
</listitem><listitem><para>More about BlueDuino on <ulink url="https://www.seeedstudio.com/Blueduino-Rev2-Arduino-compatible-pius-BLE-CC2540-p-2550.html">Seed</ulink>.</para>
</listitem><listitem><para>On <ulink url="https://www.arduino.cc/">Arduino.cc</ulink> you can see the technical specification about many board.</para>
</listitem></orderedlist>
</para>
<para><linebreak/>
</para>
</sect3>
</sect2>
<sect2 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md23">
<title>Photos (Tools and Accessories)</title>
<para>This item describes some tools and accessories you might need to build your radio based on <ref refid="class_s_i4735" kindref="compound">SI4735</ref>. Most of the accessories used in this project you will find on eBay and AliExpress.</para>
<para><table rows="2" cols="2"><row>
<entry thead="yes"><para>Arduino Pro Mini </para>
</entry><entry thead="yes"><para>Arduino Pro Mini  </para>
</entry></row>
<row>
<entry thead="no"><para><image type="html" name="tools_arduino_02_A.png" inline="yes"></image>
 </para>
</entry><entry thead="no"><para><image type="html" name="tools_arduino_02_B.png" inline="yes"></image>
  </para>
</entry></row>
</table>
</para>
<para><itemizedlist>
<listitem><para>Pro Mini 3.3V 8MHz /5V 16M Atmega328 Replace ATmega128 Arduino Compatible Nano</para>
</listitem></itemizedlist>
</para>
<para><linebreak/>
</para>
<para><table rows="2" cols="2"><row>
<entry thead="yes"><para>FT232 USB Adapter </para>
</entry><entry thead="yes"><para>FT232 USB Adapter  </para>
</entry></row>
<row>
<entry thead="no"><para><image type="html" name="tools_FT232_usb_a.png" inline="yes"></image>
 </para>
</entry><entry thead="no"><para><image type="html" name="tools_FT232_usb_b.png" inline="yes"></image>
  </para>
</entry></row>
</table>
</para>
<para><itemizedlist>
<listitem><para>FT232RL 3.3V 5.5V FTDI USB to TTL Serial Adapter Module for Arduino Mini Port</para>
</listitem></itemizedlist>
</para>
<para><linebreak/>
</para>
<para><table rows="2" cols="2"><row>
<entry thead="yes"><para>Magnifier </para>
</entry><entry thead="yes"><para>Solder  </para>
</entry></row>
<row>
<entry thead="no"><para><image type="html" name="tools_lente_01.png" inline="yes"></image>
 </para>
</entry><entry thead="no"><para><image type="html" name="tools_soldador_01.png" inline="yes"></image>
  </para>
</entry></row>
</table>
</para>
<para><itemizedlist>
<listitem><para>50-1000X Magnifier Wireless WiFi Electric Microscope 2.0MP 8LED Endoscope Camera</para>
</listitem><listitem><para>Soldering Iron Station with Temperature Control</para>
</listitem></itemizedlist>
</para>
<para><linebreak/>
</para>
<para><table rows="2" cols="2"><row>
<entry thead="yes"><para>Adapter for <ref refid="class_s_i4735" kindref="compound">SI4735</ref> </para>
</entry><entry thead="yes"><para>Soldering Accessories  </para>
</entry></row>
<row>
<entry thead="no"><para><image type="html" name="tools_adaptador.png" inline="yes"></image>
 </para>
</entry><entry thead="no"><para><image type="html" name="tools_soldas_e_suporte.png" inline="yes"></image>
  </para>
</entry></row>
</table>
</para>
<para><itemizedlist>
<listitem><para>SO SOP SOIC SSOP TSSOP 24 Pin to DIP 24 Adapter PCB Board Converter</para>
</listitem><listitem><para>50g Soldering Paste Solder Flux Paste Cream for PCB PGA SMD BGA</para>
</listitem><listitem><para>BGA SMD Soldering Paste Flux</para>
</listitem></itemizedlist>
</para>
<para><linebreak/>
</para>
<para>It was a bit hard to solder the kind of CI on adapter. However, by using a electronic magnifier it was possible.</para>
<sect3 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md24">
<title>SI4735 soldered on adapter</title>
<para><table rows="3" cols="2"><row>
<entry thead="yes"><para>Si4735 on Adapter </para>
</entry><entry thead="yes"><para>Si4735 on Adapter  </para>
</entry></row>
<row>
<entry thead="no"><para><image type="html" name="soldering_01.jpg" inline="yes"></image>
 </para>
</entry><entry thead="no"><para><image type="html" name="soldering_02.jpg" inline="yes"></image>
  </para>
</entry></row>
<row>
<entry thead="no"><para><image type="html" name="si4735_on_adapter_01.png" inline="yes"></image>
 </para>
</entry><entry thead="no"><para><image type="html" name="si4735_on_adapter_03.png" inline="yes"></image>
  </para>
</entry></row>
</table>
</para>
<sect4 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md25">
<title>Protoboard</title>
<para>The basic circuit built on protoboard is based on the “__SSOP Typical Application Schematic__”, suggested by the Silicon Labs Documentation (Si4730/31/34/35-D60-BROADCAST AM/FM/SW/LW RADIO RECEIVER; page 19). Two pull-up 4.7K resistors were added on I²C bus (It is an arbitrary value. Actually, this value may vary depending on your devices connected to the bus). Also, it is recomended to add two 4.7uF capacitors between the CI audio output and audio amplifier. The photos below do not show these capacitors. See <ulink url="https://github.com/pu2clr/SI4735#schematic">C7 and C8 on schematic</ulink>.</para>
<para><linebreak/>
</para>
<para>The figure below shows a suggestion to shrink the prototype and connections. If you are just doing prototyping, I recommend this approach due to the short connections with the Si4735 (recommended by the manufacturer).</para>
<para><image type="html" name="SI4735_mini_protoboard_01.png" inline="yes"></image>
</para>
<para><linebreak/>
</para>
<para>The configuration above connected to Arduino Pro Mini is shown below.</para>
<para><image type="html" name="SI4735_mini_protoboard_02.png" inline="yes"></image>
</para>
<para><linebreak/>
 <linebreak/>
</para>
<para>The following photo shows the most common prototyping approach. Use this approach if you don&apos;t want to solder the components on the adapter plate.</para>
<para><image type="html" name="protoboard_01.png" inline="yes"></image>
</para>
<para>The figure above shows the very basic shematic implementation (no Button or Encoder). See the folder <ulink url="./examples">examples</ulink> for more details and other configuration with LCD and OLED</para>
</sect4>
</sect3>
</sect2>
<sect2 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md26">
<title>API Documentation</title>
<para>You can read the Si4735 Arduino Library documentation by clicking <ulink url="https://github.com/pu2clr/SI4735/blob/master/extras/apidoc/api.md">here</ulink>. You can also download the <emphasis>PDF</emphasis> version <ulink url="https://github.com/pu2clr/SI4735/blob/master/extras/apidoc/rtf/pu2clr_si4735_api_doc.pdf">here</ulink>.</para>
<para>The API documentation was generated by Doxygen. <ulink url="http://www.doxygen.nl/index.html">Doxygen</ulink> is a tools that can generate documentation from source code. This tools help the development team to keep the documentation updated. If you prefer, you can also read the documentation directly from the <ulink url="https://github.com/pu2clr/SI4735/blob/master/SI4735.cpp">SI4735.cpp</ulink> and <ulink url="https://github.com/pu2clr/SI4735/blob/master/SI4735.h">SI4735.h</ulink>.These files are also well documented.</para>
</sect2>
<sect2 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md27">
<title>References</title>
<para><orderedlist>
<listitem><para><ulink url="https://github.com/rickeywang/Si4737_i2c">Silicon Labs Si4737 WB/AM/FM Stereo/RDS single-chip receiver HAL library for Arduino</ulink></para>
</listitem><listitem><para><ulink url="https://www.silabs.com/documents/public/data-sheets/Si4730-31-34-35-D60.pdf">BROADCAST AM/FM/SW/LW RADIO RECEIVER</ulink></para>
</listitem><listitem><para><ulink url="https://www.silabs.com/documents/public/application-notes/AN332.pdf">SI47XX PROGRAMMING GUIDE</ulink></para>
</listitem><listitem><para>AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE AMENDMENT FOR SI4735-D60 SSB AND NBFM PATCHES</para>
</listitem><listitem><para><ulink url="https://www.arduino.cc/en/Guide/Libraries#toc3">Installing Additional Arduino Libraries</ulink></para>
</listitem><listitem><para><ulink url="http://www.interactive-radio-system.com/docs/EN50067_RDS_Standard.pdf">Specification of the radio data system (RDS) for VHF/FM sound broadcasting in the frequency range from 87,5 to 108,0 MHz</ulink></para>
</listitem><listitem><para><ulink url="https://en.wikipedia.org/wiki/Radio_Data_System">Radio Data System</ulink></para>
</listitem><listitem><para><ulink url="https://haddadi.github.io/papers/RDSencoderHaddadi.pdf">RDS Encoder</ulink></para>
</listitem><listitem><para><ulink url="https://sigidwiki.com/images/a/ad/RDS_in_Europe,_RBDS_in_the_USA.pdf">RDS in Europe, RBDS in the USA –What are the differences and how canreceivers cope with both systems?</ulink></para>
</listitem><listitem><para><ulink url="https://www.fmsystems-inc.com/rbds-rds-pty-codes-program-types/">RBDS &amp; RDS PTY Codes and Program Types</ulink></para>
</listitem><listitem><para><ulink url="https://www.silabs.com/documents/public/application-notes/AN243.pdf">Using RDS/RBDS with the Si4701/03</ulink></para>
</listitem><listitem><para><ulink url="https://www.silabs.com/documents/public/application-notes/AN383.pdf">Si47XX ANTENNA, SCHEMATIC, LAYOUT, AND DESIGN GUIDELINES; AN383</ulink></para>
</listitem><listitem><para><bold>Other implementations using Si4735 and Arduino</bold><itemizedlist>
<listitem><para><ulink url="https://github.com/FlyingLotus1983/Si4735">This is a git fork of [Michael Kennedy&apos;s]</ulink> <linebreak/>
</para>
</listitem><listitem><para><ulink url="https://sourceforge.net/projects/arduino-si4735/">Arduino Si4735 radio library</ulink></para>
</listitem><listitem><para><ulink url="https://www.sparkfun.com/products/retired/10342">SI4735 AM &amp; FM Receiver Shield</ulink></para>
</listitem><listitem><para><ulink url="https://os.mbed.com/users/bwilson30/notebook/si4735-digital-amfm-radio-receiver/">Si4735 Digital AM/FM Radio Receiver</ulink></para>
</listitem><listitem><para><ulink url="https://github.com/csdexter/Si4735">Ryan Owens for SparkFun Electronics</ulink></para>
</listitem><listitem><para><ulink url="https://devhub.io/repos/rickeywang-Si4737_i2c">Silicon Labs Si4737 WB/AM/FM Stereo/RDS single-chip receiver HAL library for Arduino</ulink></para>
</listitem><listitem><para><ulink url="https://www.elektormagazine.com/labs/enhanced-software-for-elektor-dsp-radio-si4735">Enhanced Software for Elektor DSP-Radio (Si4735)</ulink></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>I²C</bold><itemizedlist>
<listitem><para><ulink url="https://hackaday.com/2017/02/08/taking-the-leap-off-board-an-introduction-to-i2c-over-long-wires/">Taking The Leap Off Board: An Introduction To I²C Over Long Wires</ulink></para>
</listitem><listitem><para><ulink url="https://dcubestore.com/blog/difference-between-i2c-and-spi/?fbclid=IwAR2pnpqKe9q2R7r28q0PiPt5Cb_JzqdgKkcsLIb43ZSb4ZForI-fWQmZtM0">Difference between I²C and SPI</ulink></para>
</listitem><listitem><para><ulink url="https://www.digikey.com/en/articles/techzone/2018/aug/issues-with-the-i2c-bus-and-how-to-solve-them">Issues with the I²C (Inter-IC) Bus and How to Solve Them</ulink></para>
</listitem><listitem><para><ulink url="https://www.nxp.com/docs/en/application-note/AN10216.pdf">I²C Manual; Application Note; AN10216-01</ulink></para>
</listitem><listitem><para>IMPROVING NOISE IMMUNITY FOR SERIAL INTERFACE; A Lattice Semiconductor White Paper; July 2014</para>
</listitem><listitem><para><ulink url="https://www.analog.com/en/technical-articles/bus-buffers-simplify-design-of-large-noisy-i2c-systems.html#">Bus Buffers Simplify Design of Large, Noisy I²C Systems</ulink></para>
</listitem><listitem><para><ulink url="https://www.i2c-bus.org/i2c-primer/common-problems/">Common Problems In Systems</ulink></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>Forums</bold><itemizedlist>
<listitem><para><ulink url="https://www.microchip.com/forums/m456630.aspx">How to reduce I²C bus noise</ulink></para>
</listitem><listitem><para><ulink url="https://www.microchip.com/forums/m456630.aspx">Radio interferes with I²C bus communication</ulink></para>
</listitem><listitem><para><ulink url="http://e2e.ti.com/support/interface/f/138/t/552072">Reducing Noise on an I²C bus line</ulink></para>
</listitem><listitem><para><ulink url="https://forum.allaboutcircuits.com/threads/noise-on-i2c-bus.41916/">Noise on I²C bus</ulink></para>
</listitem><listitem><para><ulink url="https://electronics.stackexchange.com/questions/292032/noises-on-the-i2c-bus">Noises on the I²C BUS</ulink></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><ulink url="https://hackaday.com/2020/03/02/multi-band-receiver-on-a-chip-controlled-by-arduino/">&quot;Multi-Band Receiver On A Chip Controlled By Arduino&quot; commented by Tom Nardi on Hackaday</ulink></para>
</listitem></orderedlist>
</para>
</sect2>
<sect2 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md28">
<title>Videos</title>
<para>Here you can see some experiments using this library.</para>
<sect3 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md29">
<title>Project examples made by the author</title>
<para><itemizedlist>
<listitem><para><ulink url="https://youtu.be/oL8qyRglZ8I">Si4735 All in One Receiver running on Arduino Pro Mini 3.3V (8MHz) and TFT Display</ulink></para>
</listitem><listitem><para><ulink url="https://youtu.be/Zs59ThVumuE">Si4735 All in One Receiver with TFT Touch Screen</ulink></para>
</listitem><listitem><para><ulink url="https://youtu.be/7Sg4z8tDSA8">Si4735 Arduino Library example. OLED Application.</ulink></para>
</listitem><listitem><para><ulink url="https://youtu.be/vzunuxam_Lg">SI4735 Arduino Library and a simple FM and AM radio implementation</ulink></para>
</listitem><listitem><para><ulink url="https://youtu.be/dN1s3RoXGos">SI4735 ARDUINO LIBRARY BANDWIDTH TEST</ulink></para>
</listitem><listitem><para><ulink url="https://youtu.be/W2Ssjb9P_f4">Si4735 Arduino Library and SSB Support (Listening to a QSO on 20 meters)</ulink></para>
</listitem><listitem><para><ulink url="https://youtu.be/Xj7zuiyvysI">Evaluating SSB audio from the SI4735-based radio prototype</ulink></para>
</listitem><listitem><para><ulink url="https://youtu.be/zb9TZtYVu-s">How to &quot;SI4735 Arduino Library and ATtiny85&quot;</ulink></para>
</listitem><listitem><para><ulink url="https://youtu.be/U9Xpqh3K4e0">SI4735 Arduino Library working with ATtiny85</ulink></para>
</listitem><listitem><para><ulink url="https://youtu.be/An7Iq_BLxJY">NE928-10A V:01 board working with &quot;Si4735 Arduino Library&quot;</ulink></para>
</listitem><listitem><para><ulink url="https://youtu.be/v4o5_lKKATc">Si4735 Arduino Library and Blepill STM32F103</ulink></para>
</listitem></itemizedlist>
</para>
</sect3>
<sect3 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md30">
<title>Third-party projects using this library</title>
<para><itemizedlist>
<listitem><para><ulink url="https://youtu.be/z-mkR93L7SI">SI4735 SSB</ulink></para>
</listitem><listitem><para><ulink url="https://youtu.be/hRHSzFr_lQE">All Band Radio with a Nice Interface</ulink></para>
</listitem><listitem><para><ulink url="https://youtu.be/bWAcBXwdYmI">SI4735 11 ALL IN ONE TEST OLED ver from jg3pup</ulink></para>
</listitem><listitem><para><ulink url="https://youtu.be/Q50NToLuLK4">New HF SSB receiver made of Si4735 is done!</ulink></para>
</listitem><listitem><para><ulink url="https://youtu.be/Q3jkiwOWeUo">SSB DSP radio (Si4735) version 5 revision 2</ulink></para>
</listitem><listitem><para><ulink url="https://youtu.be/bBeU09wal0I">Si4735 LCD版でSSBを受信</ulink></para>
</listitem><listitem><para><ulink url="https://youtu.be/kJuxSI1GlDs">Wefax576 via SI4735 with audio cable fldigi</ulink></para>
</listitem><listitem><para><ulink url="https://youtu.be/LudpuwJSajU">SI4735 KIT - First FM est</ulink></para>
</listitem></itemizedlist>
</para>
</sect3>
</sect2>
<sect2 id="md__s_i4735__r_e_a_d_m_e_1autotoc_md31">
<title>Join us on Facebook group &quot;Si47XX for Radio Experimenters&quot;.</title>
<para><table rows="3" cols="1"><row>
<entry thead="no"><para><nonbreakablespace/></para>
</entry></row>
<row>
<entry thead="no"><para><table rows="5" cols="1"><row>
<entry thead="no"><para><image type="html" name="82814589_2508096086115764_5250696733104537600_o.jpg?_nc_cat=100&amp;_nc_ohc=TPts5gM6nOQAX9G8ivJ&amp;_nc_ht=scontent.ffor4-1.fna&amp;oh=f38f181f14acba2965aecc325ddffeb7&amp;oe=5EC16DC3" inline="yes"></image>
</para>
</entry></row>
<row>
<entry thead="no"><para>SI47XX For Radio Listeners</para>
</entry></row>
<row>
<entry thead="no"><para>Grupo Público · 36 membros</para>
</entry></row>
<row>
<entry thead="no"><para><table rows="1" cols="1"><row>
<entry thead="no"><para><ulink url="https://www.facebook.com/plugins/group/join/popup/?group_id=532613604253401&amp;source=email_campaign_plugin">Participar do grupo</ulink></para>
</entry></row>
</table>
</para>
</entry></row>
<row>
<entry thead="no"><para>Intended for hobbyists, experimenters, hams and radio enthusiasts who use SIlicon Labs SI47XX based radios. The purpose of this group is to present an...</para>
</entry></row>
</table>
</para>
</entry></row>
<row>
<entry thead="no"><para><nonbreakablespace/></para>
</entry></row>
</table>
</para>
</sect2>
</sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
