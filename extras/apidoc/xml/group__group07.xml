<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="group__group07" kind="group">
    <compoundname>group07</compoundname>
    <title>Si47XX device information and start up</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__group07_1ga2fbc7e2187a7c645879623100dbc8502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SI4735::getFirmware</definition>
        <argsstring>(void)</argsstring>
        <name>getFirmware</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets firmware information. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>Si47XX PROGRAMMING GUIDE; AN332; pages 66, 131 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SI4735/SI4735.h" line="1054" column="10" bodyfile="SI4735/SI4735.cpp" bodystart="298" bodyend="314"/>
        <references refid="class_s_i4735_1a243ecc7d01fc0d0e9cabb4ed00b9e47d" compoundref="_s_i4735_8h" startline="885">SI4735::deviceAddress</references>
        <references refid="class_s_i4735_1ad03d545e53a7ca2fe072a7b03d60910e" compoundref="_s_i4735_8h" startline="907">SI4735::firmwareInfo</references>
        <references refid="group__group06_1ga7b45c1b22c3c1a3f2326bee913d1e1e0" compoundref="_s_i4735_8cpp" startline="169" endline="176">SI4735::waitToSend</references>
      </memberdef>
      <memberdef kind="function" id="group__group07_1ga95fd37277dbb8b16b5ae7a996a5f9eba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SI4735::setup</definition>
        <argsstring>(uint8_t resetPin, int interruptPin, uint8_t defaultFunction, uint8_t audioMode=SI473X_ANALOG_AUDIO)</argsstring>
        <name>setup</name>
        <param>
          <type>uint8_t</type>
          <declname>resetPin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>interruptPin</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>defaultFunction</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>audioMode</declname>
          <defval>SI473X_ANALOG_AUDIO</defval>
        </param>
        <briefdescription>
<para>Starts the Si473X device. </para>
        </briefdescription>
        <detaileddescription>
<para>If the audio mode parameter is not entered, analog mode will be considered.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>resetPin Digital Arduino Pin used to RESET command </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>interruptPin interrupt Arduino Pin (see your Arduino pinout). If less than 0, iterrupt disabled </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>defaultFunction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>audioMode default SI473X_ANALOG_AUDIO (Analog Audio). Use SI473X_ANALOG_AUDIO or SI473X_DIGITAL_AUDIO </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SI4735/SI4735.h" line="933" column="10" bodyfile="SI4735/SI4735.cpp" bodystart="328" bodyend="362"/>
        <references refid="class_s_i4735_1af8f8123888060f858c74ba08a29ff38b" compoundref="_s_i4735_8h" startline="889">SI4735::interruptPin</references>
      </memberdef>
      <memberdef kind="function" id="group__group07_1ga944ed704e2175a6cf660ad65ca5bbad5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SI4735::setup</definition>
        <argsstring>(uint8_t resetPin, uint8_t defaultFunction)</argsstring>
        <name>setup</name>
        <param>
          <type>uint8_t</type>
          <declname>resetPin</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>defaultFunction</declname>
        </param>
        <briefdescription>
<para>Starts the Si473X device. <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para>Use this setup if you are not using interrupt resource</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>resetPin Digital Arduino Pin used to RESET command </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>defaultFunction </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SI4735/SI4735.h" line="932" column="10" bodyfile="SI4735/SI4735.cpp" bodystart="374" bodyend="378"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
