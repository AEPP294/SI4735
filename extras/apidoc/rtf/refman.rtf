{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Si4735 Arduino Library  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.1.8 \par
}}Si4735 Arduino Library}
{\comment Generated by doxygen.}
{\creatim \yr2020\mo4\dy3\hr18\min4\sec1}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Si4735 Arduino Library}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 1.1.8\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Fri Apr 3 2020 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Deprecated List{\tc \v Deprecated List}\par \pard\plain 
{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Global {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGD" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::analogPowerUp}}}  (void)\par
}
{\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
Consider use radioPowerUp instead\par}
}}

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Module Index\par \pard\plain 
{\tc \v Module Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Modules\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all modules:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Audio setup\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Deal with Interrupt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Deal with Interrupt and I2C bus\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FM Mono Stereo audio setup\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FM RDS/DBDS\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Frequency and Si47XX device status\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Host and slave MCU setup\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RDS Data types\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Receiver Status and Setup\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SI473X data types\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Si4735-D60 Single Side Band (SSB) support\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Si47XX device Mode, Band and Frequency setup\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Si47XX device information and start up\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Si47XX filter setup\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tools method\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tune\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b SI4735/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b SI4735/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAB" }{}}{\fldrslt {\cs37\ul\cf2 SI4735.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Module Documentation{\tc \v Module Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Audio setup\par \pard\plain 
{\tc\tcl2 \v Audio setup}
{\xe \v Audio setup}
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::digitalOutputFormat}}}
 (uint8_t OSIZE, uint8_t OMONO, uint8_t OMODE, uint8_t OFALL)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configures the digital audio output format. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::digitalOutputSampleRate}}}
 (uint16_t DOSR)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables digital audio output and configures digital audio output sample rate in samples per second (sps). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIU" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setVolume}}}
 (uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 volume}}}
)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP8 - Returns the Chip Revision (ASCII). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setAudioMute}}}
 (bool off)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the current volume level. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getVolume}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current volume level. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIY" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::volumeUp}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set sound volume level Up \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::volumeDown}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set sound volume level Down \par
 }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v digitalOutputFormat\:Audio setup}
{\xe \v Audio setup\:digitalOutputFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::digitalOutputFormat (uint8_t  {\i OSIZE}, uint8_t  {\i OMONO}, uint8_t  {\i OMODE}, uint8_t  {\i OFALL})}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configures the digital audio output format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options: DCLK edge, data format, force mono, and sample precision.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; page 195.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{OSIZE Digital Output Audio Sample Precision (0=16 bits, 1=20 bits, 2=24 bits, 3=8bits). \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{OMONO Digital Output Mono Mode (0=Use mono/stereo blend ). \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{OMODE Digital Output Mode (0=I2S, 6 = Left-justified, 8 = MSB at second DCLK after DFS pulse, 12 = MSB at first DCLK after DFS pulse). \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{OFALL Digital Output DCLK Edge (0 = use DCLK rising edge, 1 = use DCLK falling edge) \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00898 \{\par
00899     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAY" }{}}{\fldrslt {\cs37\ul\cf2 si4735_digital_output_format}}}
 df;\par
00900     df.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOJ" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.OSIZE = OSIZE;\par
00901     df.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOJ" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.OMONO = OMONO;\par
00902     df.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOJ" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.OMODE = OMODE;\par
00903     df.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOJ" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.OFALL = OFALL;\par
00904     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 sendProperty}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADU" }{}}{\fldrslt {\cs37\ul\cf2 DIGITAL_OUTPUT_FORMAT}}}
, df.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOK" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
);\par
00905 \}\par
}
}
{\xe \v digitalOutputSampleRate\:Audio setup}
{\xe \v Audio setup\:digitalOutputSampleRate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::digitalOutputSampleRate (uint16_t  {\i DOSR})}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables digital audio output and configures digital audio output sample rate in samples per second (sps). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; page 196.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint16_t} \cell }{DOSR Digital Output Sample Rate(32\'9648 ksps .0 to disable digital audio output). \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00917 \{\par
00918     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 sendProperty}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADV" }{}}{\fldrslt {\cs37\ul\cf2 DIGITAL_OUTPUT_SAMPLE_RATE}}}
, DOSR);\par
00919 \}\par
}
}
{\xe \v getVolume\:Audio setup}
{\xe \v Audio setup\:getVolume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getVolume ()}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current volume level. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIU" }{}}{\fldrslt {\cs37\ul\cf2 setVolume()}}}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
volume (domain: 0 - 63) \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00961 \{\par
00962     {\cf19 return} this->{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 volume}}}
;\par
00963 \}\par
}
}
{\xe \v setAudioMute\:Audio setup}
{\xe \v Audio setup\:setAudioMute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setAudioMute (bool  {\i off})}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the current volume level. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the audio on or off.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
See Si47XX PROGRAMMING GUIDE; AN332; pages 62, 123, 171\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{if true, mute the audio; if false unmute the audio. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00946 \{\par
00947     uint16_t value = (off) ? 3 : 0; {\cf20 // 3 means mute; 0 means unmute}\par
00948     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 sendProperty}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFC" }{}}{\fldrslt {\cs37\ul\cf2 RX_HARD_MUTE}}}
, value);\par
00949 \}\par
}
}
{\xe \v setVolume\:Audio setup}
{\xe \v Audio setup\:setVolume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setVolume (uint8_t  {\i volume})}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP8 - Returns the Chip Revision (ASCII). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets volume level (0 to 63)\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 62, 123, 170, 173 and 204\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{volume (domain: 0 - 63) \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00931 \{\par
00932     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 sendProperty}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 RX_VOLUME}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 volume}}}
);\par
00933     this->{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 volume}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 volume}}}
;\par
00934 \}\par
}
}
{\xe \v volumeDown\:Audio setup}
{\xe \v Audio setup\:volumeDown}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::volumeDown ()}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set sound volume level Down \par
 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIU" }{}}{\fldrslt {\cs37\ul\cf2 setVolume()}}} \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00987 \{\par
00988     {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 volume}}}
 > 0)\par
00989         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 volume}}}
--;\par
00990     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIU" }{}}{\fldrslt {\cs37\ul\cf2 setVolume}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 volume}}}
);\par
00991 \}\par
}
}
{\xe \v volumeUp\:Audio setup}
{\xe \v Audio setup\:volumeUp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::volumeUp ()}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set sound volume level Up \par
 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIU" }{}}{\fldrslt {\cs37\ul\cf2 setVolume()}}} \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00973 \{\par
00974     {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 volume}}}
 < 63)\par
00975         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 volume}}}
++;\par
00976     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIU" }{}}{\fldrslt {\cs37\ul\cf2 setVolume}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 volume}}}
);\par
00977 \}\par
}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Deal with Interrupt\par \pard\plain 
{\tc\tcl2 \v Deal with Interrupt}
{\xe \v Deal with Interrupt}
{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deal with Interrupt \par
}\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Deal with Interrupt and I2C bus\par \pard\plain 
{\tc\tcl2 \v Deal with Interrupt and I2C bus}
{\xe \v Deal with Interrupt and I2C bus}
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735}}} Class. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGG" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::SI4735}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear RDS group type 0A buffer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGH" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::waitInterrupr}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt handle. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGI" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getDeviceI2CAddress}}}
 (uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 resetPin}}}
)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
I2C bus address setup. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGK" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setDeviceI2CAddress}}}
 (uint8_t senPin)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the I2C Bus Address. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setDeviceOtherI2CAddress}}}
 (uint8_t i2cAddr)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the onther I2C Bus Address (for Si470X) }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a library for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735}}}, BROADCAST AM/FM/SW RADIO RECEIVER, IC from Silicon Labs for the Arduino development environment. It works with I2C protocol. This library is intended to provide an easier interface for controlling the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735}}}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
documentation on {\field {\*\fldinst { HYPERLINK "https://github.com/pu2clr/SI4735" }{}}{\fldrslt {\cs37\ul\cf2 https://github.com/pu2clr/SI4735}}}
. \par
Si47XX PROGRAMMING GUIDE; AN332 \par
AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; AMENDMENT FOR SI4735-D60 SSB AND NBFM PATCHES\par
}}ATTENTION: According to Si47XX PROGRAMMING GUIDE; AN332; page 207, "For write operations, the system controller next sends a data byte on SDIO, which is captured by the device on rising edges of SCLK. The device acknowledges each data byte by driving SDIO low for one cycle on the next falling edge of SCLK. The system controller may write up to 8 data bytes in a single 2-wire transaction. The first byte is a command, and the next seven bytes are arguments. Writing more than 8 bytes results in unpredictable device behavior". So, If you are extending this library, consider that restriction presented earlier.\par
ATTENTION: Some methods were implemented usin inline resource. Inline methods are implemented in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAB" }{}}{\fldrslt {\cs37\ul\cf2 SI4735.h}}}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
PU2CLR - Ricardo Lima Caratti\par
}}By Ricardo Lima Caratti, Nov 2019. \par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structure Documentation\par
\pard\plain 
{\xe \v SI4735}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
class SI4735\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735}}} Class. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735}}} Class definition\par
This class implements all functions to help you to control the Si47XX devices. This library was built based on \'93Si47XX PROGRAMMING GUIDE; AN332 \'94. It also can be used on all members of the SI473X family respecting, of course, the features available for each IC version. These functionalities can be seen in the comparison matrix shown in table 1 (Product Family Function); pages 2 and 3 of the programming guide.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
PU2CLR - Ricardo Lima Caratti \par
}}}}
{
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\b Public Member Functions}\par}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGG" }{}}{\fldrslt {\cs37\ul\cf2 SI4735}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear RDS group type 0A buffer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 reset}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset the SI473X \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset the Si47XX device. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 setup}}}
 (uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 resetPin}}}
, uint8_t defaultFunction)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wait for the Si47XX device is ready to receive a command. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGP" }{}}{\fldrslt {\cs37\ul\cf2 setup}}}
 (uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 resetPin}}}
, int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGQ" }{}}{\fldrslt {\cs37\ul\cf2 interruptPin}}}
, uint8_t defaultFunction, uint8_t audioMode={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFU" }{}}{\fldrslt {\cs37\ul\cf2 SI473X_ANALOG_AUDIO}}}
)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the Si473X device. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 setPowerUp}}}
 (uint8_t CTSIEN, uint8_t GPO2OEN, uint8_t PATCH, uint8_t XOSCEN, uint8_t FUNC, uint8_t OPMODE)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Power Up parameters for si473X. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGS" }{}}{\fldrslt {\cs37\ul\cf2 radioPowerUp}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configure the Si47XX to power it up. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGD" }{}}{\fldrslt {\cs37\ul\cf2 analogPowerUp}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Power the receiver up. Call setPowerUp before call this method. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGT" }{}}{\fldrslt {\cs37\ul\cf2 powerDown}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deprecated. Use radioPowerUp. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGU" }{}}{\fldrslt {\cs37\ul\cf2 setFrequency}}}
 (uint16_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the frequency to the corrent function of the Si4735 (FM, AM or SSB) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 getStatus}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tune the receiver. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGW" }{}}{\fldrslt {\cs37\ul\cf2 getStatus}}}
 (uint8_t, uint8_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the Si47XX device. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGX" }{}}{\fldrslt {\cs37\ul\cf2 getFrequency}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current frequency of the Si4735 (AM or FM) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGY" }{}}{\fldrslt {\cs37\ul\cf2 getCurrentFrequency}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current frequency. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 getSignalQualityInterrupt}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current frequency stored in memory (it does not query the Si47XX device) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHA" }{}}{\fldrslt {\cs37\ul\cf2 getRadioDataSystemInterrupt}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Radio Data System (RDS) Interrupt status. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHB" }{}}{\fldrslt {\cs37\ul\cf2 getTuneCompleteTriggered}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Tune Complete status. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHC" }{}}{\fldrslt {\cs37\ul\cf2 getStatusError}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Status Error. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 getStatusCTS}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Error flag Clear to Send. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHE" }{}}{\fldrslt {\cs37\ul\cf2 getACFIndicator}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if the AFC rails (AFC Rail Indicator). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHF" }{}}{\fldrslt {\cs37\ul\cf2 getBandLimit}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if a seek hit the band limit. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHG" }{}}{\fldrslt {\cs37\ul\cf2 getStatusValid}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the channel status. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHH" }{}}{\fldrslt {\cs37\ul\cf2 getReceivedSignalStrengthIndicator}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the value of Received Signal Strength Indicator (dB\'CE\'BCV). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHI" }{}}{\fldrslt {\cs37\ul\cf2 getStatusSNR}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the SNR metric when tune is complete (dB) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHJ" }{}}{\fldrslt {\cs37\ul\cf2 getStatusMULT}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Status the M U L T. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 getAntennaTuningCapacitor}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Antenna Tuning Capacitor value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHL" }{}}{\fldrslt {\cs37\ul\cf2 getAutomaticGainControl}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Queries Automatic Gain Control STATUS. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHM" }{}}{\fldrslt {\cs37\ul\cf2 setAvcAmMaxGain}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Queries Automatic Gain Control STATUS. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHN" }{}}{\fldrslt {\cs37\ul\cf2 setAvcAmMaxGain}}}
 (uint8_t gain)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the maximum gain for automatic volume control. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 getCurrentAvcAmMaxGain}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the maximum gain for automatic volume control. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHP" }{}}{\fldrslt {\cs37\ul\cf2 setAmSoftMuteMaxAttenuation}}}
 (uint8_t smattn=0)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Am Soft Mute Max Attenuation. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHQ" }{}}{\fldrslt {\cs37\ul\cf2 setSsbSoftMuteMaxAttenuation}}}
 (uint8_t smattn=0)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the SSB Soft Mute Max Attenuation object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHR" }{}}{\fldrslt {\cs37\ul\cf2 isAgcEnabled}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the AGC is enabled. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 getAgcGainIndex}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current AGC gain index. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHT" }{}}{\fldrslt {\cs37\ul\cf2 setAutomaticGainControl}}}
 (uint8_t AGCDIS, uint8_t AGCIDX)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Automatic Gain Control setup. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHU" }{}}{\fldrslt {\cs37\ul\cf2 getCurrentReceivedSignalQuality}}}
 (uint8_t INTACK)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Overrides the AGC setting. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHV" }{}}{\fldrslt {\cs37\ul\cf2 getCurrentReceivedSignalQuality}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Queries the status of the Received Signal Quality (RSQ) of the current channel (FM_RSQ_STATUS) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 getCurrentRSSI}}}
 ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHX" }{}}{\fldrslt {\cs37\ul\cf2 getCurrentSNR}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
current receive signal strength (0\'E2\'80\'93127 dB\'CE\'BCV). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHY" }{}}{\fldrslt {\cs37\ul\cf2 getCurrentRssiDetectLow}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
current SNR metric (0\'96127 dB). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHZ" }{}}{\fldrslt {\cs37\ul\cf2 getCurrentRssiDetectHigh}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSI Detect Low. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 getCurrentSnrDetectLow}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSI Detect High. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIB" }{}}{\fldrslt {\cs37\ul\cf2 getCurrentSnrDetectHigh}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SNR Detect Low. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIC" }{}}{\fldrslt {\cs37\ul\cf2 getCurrentValidChannel}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SNR Detect High. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAID" }{}}{\fldrslt {\cs37\ul\cf2 getCurrentAfcRailIndicator}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Valid Channel. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIE" }{}}{\fldrslt {\cs37\ul\cf2 getCurrentSoftMuteIndicator}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AFC Rail Indicator. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIF" }{}}{\fldrslt {\cs37\ul\cf2 getCurrentStereoBlend}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Soft Mute Indicator. Indicates soft mute is engaged. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIG" }{}}{\fldrslt {\cs37\ul\cf2 getCurrentPilot}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates amount of stereo blend in % (100 = full stereo, 0 = full mono). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 getCurrentMultipath}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates stereo pilot presence. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAII" }{}}{\fldrslt {\cs37\ul\cf2 getCurrentSignedFrequencyOffset}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the current multipath metric. (0 = no multipath; 100 = full multipath) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIJ" }{}}{\fldrslt {\cs37\ul\cf2 getCurrentMultipathDetectLow}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Signed frequency offset (kHz). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIK" }{}}{\fldrslt {\cs37\ul\cf2 getCurrentMultipathDetectHigh}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multipath Detect Low. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 getCurrentBlendDetectInterrupt}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multipath Detect High. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIM" }{}}{\fldrslt {\cs37\ul\cf2 getFirmwarePN}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Blend Detect Interrupt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIN" }{}}{\fldrslt {\cs37\ul\cf2 getFirmwareFWMAJOR}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP1 - Part Number (HEX) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIO" }{}}{\fldrslt {\cs37\ul\cf2 getFirmwareFWMINOR}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP2 - Returns the Firmware Major Revision (ASCII). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIP" }{}}{\fldrslt {\cs37\ul\cf2 getFirmwarePATCHH}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP3 - Returns the Firmware Minor Revision (ASCII). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 getFirmwarePATCHL}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP4 - Returns the Patch ID High byte (HEX). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 getFirmwareCMPMAJOR}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP5 - Returns the Patch ID Low byte (HEX). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIS" }{}}{\fldrslt {\cs37\ul\cf2 getFirmwareCMPMINOR}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP6 - Returns the Component Major Revision (ASCII). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 getFirmwareCHIPREV}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP7 - Returns the Component Minor Revision (ASCII). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIU" }{}}{\fldrslt {\cs37\ul\cf2 setVolume}}}
 (uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 volume}}}
)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP8 - Returns the Chip Revision (ASCII). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 getVolume}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current volume level. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 volumeDown}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set sound volume level Down \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIY" }{}}{\fldrslt {\cs37\ul\cf2 volumeUp}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set sound volume level Up \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 getCurrentVolume}}}
 ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 setAudioMute}}}
 (bool off)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the current volume level. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 digitalOutputFormat}}}
 (uint8_t OSIZE, uint8_t OMONO, uint8_t OMODE, uint8_t OFALL)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configures the digital audio output format. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 digitalOutputSampleRate}}}
 (uint16_t DOSR)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables digital audio output and configures digital audio output sample rate in samples per second (sps). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJD" }{}}{\fldrslt {\cs37\ul\cf2 setAM}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the radio to AM function. It means: LW MW and SW. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 setFM}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the radio to FM function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 setAM}}}
 (uint16_t fromFreq, uint16_t toFreq, uint16_t intialFreq, uint16_t step)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the radio to AM (LW/MW/SW) function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 setFM}}}
 (uint16_t fromFreq, uint16_t toFreq, uint16_t initialFreq, uint16_t step)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the radio to FM function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJH" }{}}{\fldrslt {\cs37\ul\cf2 setBandwidth}}}
 (uint8_t AMCHFLT, uint8_t AMPLFLT)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selects the bandwidth of the channel filter for AM reception. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 setFrequencyStep}}}
 (uint16_t step)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the current step value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 getTuneFrequencyFast}}}
 ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 setTuneFrequencyFast}}}
 (uint8_t FAST)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the FAST tuning status. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJL" }{}}{\fldrslt {\cs37\ul\cf2 getTuneFrequencyFreeze}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FAST Tuning. If set, executes fast and invalidated tune. The tune status will not be accurate. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJM" }{}}{\fldrslt {\cs37\ul\cf2 setTuneFrequencyFreeze}}}
 (uint8_t FREEZE)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the FREEZE status. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 setTuneFrequencyAntennaCapacitor}}}
 (uint16_t capacitor)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Only FM. Freeze Metrics During Alternate Frequency Jump. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJO" }{}}{\fldrslt {\cs37\ul\cf2 frequencyUp}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increments the current frequency on current band/function by using the current step. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 frequencyDown}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrements the current frequency on current band/function by using the current step. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJQ" }{}}{\fldrslt {\cs37\ul\cf2 isCurrentTuneFM}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if the current function is FM (FM_TUNE_FREQ). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJR" }{}}{\fldrslt {\cs37\ul\cf2 getFirmware}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets firmware information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 setFunction}}}
 (uint8_t FUNC)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJT" }{}}{\fldrslt {\cs37\ul\cf2 seekStation}}}
 (uint8_t SEEKUP, uint8_t WRAP)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Look for a station (Automatic tune) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 seekStationUp}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Search for the next station. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 seekStationDown}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Search the previous station. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 setSeekAmLimits}}}
 (uint16_t bottom, uint16_t top)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the bottom frequency and top frequency of the AM band for seek. Default is 520 to 1710. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 setSeekAmSpacing}}}
 (uint16_t spacing)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selects frequency spacingfor AM seek. Default is 10 kHz spacing. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 setSeekSrnThreshold}}}
 (uint16_t value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the SNR threshold for a valid AM Seek/Tune. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJZ" }{}}{\fldrslt {\cs37\ul\cf2 setSeekRssiThreshold}}}
 (uint16_t value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the RSSI threshold for a valid AM Seek/Tune. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKA" }{}}{\fldrslt {\cs37\ul\cf2 setFmBlendStereoThreshold}}}
 (uint8_t parameter)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets RSSI threshold for stereo blend (Full stereo above threshold, blend below threshold). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 setFmBlendMonoThreshold}}}
 (uint8_t parameter)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets RSSI threshold for mono blend (Full mono below threshold, blend above threshold). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKC" }{}}{\fldrslt {\cs37\ul\cf2 setFmBlendRssiStereoThreshold}}}
 (uint8_t parameter)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets RSSI threshold for stereo blend. (Full stereo above threshold, blend below threshold.) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 setFmBLendRssiMonoThreshold}}}
 (uint8_t parameter)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets RSSI threshold for mono blend (Full mono below threshold, blend above threshold). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 setFmBlendSnrStereoThreshold}}}
 (uint8_t parameter)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets SNR threshold for stereo blend (Full stereo above threshold, blend below threshold). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 setFmBLendSnrMonoThreshold}}}
 (uint8_t parameter)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets SNR threshold for mono blend (Full mono below threshold, blend above threshold). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKG" }{}}{\fldrslt {\cs37\ul\cf2 setFmBlendMultiPathStereoThreshold}}}
 (uint8_t parameter)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets multipath threshold for stereo blend (Full stereo below threshold, blend above threshold). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 setFmBlendMultiPathMonoThreshold}}}
 (uint8_t parameter)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets Multipath threshold for mono blend (Full mono above threshold, blend below threshold). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 setFmStereoOn}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Turn Off Stereo operation. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 setFmStereoOff}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Turn Off Stereo operation. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RdsInit}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the control member variables for RDS. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKL" }{}}{\fldrslt {\cs37\ul\cf2 setRdsIntSource}}}
 (uint8_t RDSNEWBLOCKB, uint8_t RDSNEWBLOCKA, uint8_t RDSSYNCFOUND, uint8_t RDSSYNCLOST, uint8_t RDSRECV)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configures interrupt related to RDS. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 getRdsStatus}}}
 (uint8_t INTACK, uint8_t MTFIFO, uint8_t STATUSONLY)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the RDS status. Store the status in currentRdsStatus member. RDS COMMAND FM_RDS_STATUS. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKN" }{}}{\fldrslt {\cs37\ul\cf2 getRdsStatus}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets RDS Status. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKO" }{}}{\fldrslt {\cs37\ul\cf2 getRdsReceived}}}
 ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKP" }{}}{\fldrslt {\cs37\ul\cf2 getRdsSyncLost}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 = FIFO filled to minimum number of groups }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 getRdsSyncFound}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 = Lost RDS synchronization }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 getRdsNewBlockA}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 = Found RDS synchronization }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKS" }{}}{\fldrslt {\cs37\ul\cf2 getRdsNewBlockB}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 = Valid Block A data has been received. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 getRdsSync}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 = Valid Block B data has been received. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 getGroupLost}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 = RDS currently synchronized. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 getNumRdsFifoUsed}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 = One or more RDS groups discarded due to FIFO overrun. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 setRdsConfig}}}
 (uint8_t RDSEN, uint8_t BLETHA, uint8_t BLETHB, uint8_t BLETHC, uint8_t BLETHD)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP3 - RDS FIFO Used; Number of groups remaining in the RDS FIFO (0 if empty). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKX" }{}}{\fldrslt {\cs37\ul\cf2 getRdsPI}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the programa type. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 getRdsGroupType}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the Group Type (extracted from the Block B) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 getRdsFlagAB}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the current Text Flag A/B \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALA" }{}}{\fldrslt {\cs37\ul\cf2 getRdsVersionCode}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the version code (extracted from the Block B) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 getRdsProgramType}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the Program Type (extracted from the Block B) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALC" }{}}{\fldrslt {\cs37\ul\cf2 getRdsTextSegmentAddress}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the address of the text segment. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALD" }{}}{\fldrslt {\cs37\ul\cf2 getRdsText}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the RDS Text when the message is of the Group Type 2 version A. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALE" }{}}{\fldrslt {\cs37\ul\cf2 getRdsText0A}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the station name and other messages. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 getRdsText2A}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Text processed for the 2A group. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 getRdsText2B}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Text processed for the 2B group. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 getRdsTime}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the RDS time and date when the Group type is 4. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 getNext2Block}}}
 (char *)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Process data received from group 2B. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 getNext4Block}}}
 (char *)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Process data received from group 2A. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALK" }{}}{\fldrslt {\cs37\ul\cf2 ssbSetup}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the Si473X device on SSB (same AM Mode). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 setSSBBfo}}}
 (int offset)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the SSB Beat Frequency Offset (BFO). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALM" }{}}{\fldrslt {\cs37\ul\cf2 setSSBConfig}}}
 (uint8_t AUDIOBW, uint8_t SBCUTFLT, uint8_t AVC_DIVIDER, uint8_t AVCEN, uint8_t SMUTESEL, uint8_t DSP_AFCDIS)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the SSB receiver mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALN" }{}}{\fldrslt {\cs37\ul\cf2 setSSB}}}
 (uint16_t fromFreq, uint16_t toFreq, uint16_t intialFreq, uint16_t step, uint8_t usblsb)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 setSSB}}}
 (uint8_t usblsb)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the radio to AM function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALP" }{}}{\fldrslt {\cs37\ul\cf2 setSSBAudioBandwidth}}}
 (uint8_t AUDIOBW)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SSB Audio Bandwidth for SSB mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALQ" }{}}{\fldrslt {\cs37\ul\cf2 setSSBAutomaticVolumeControl}}}
 (uint8_t AVCEN)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets SSB Automatic Volume Control (AVC) for SSB mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALR" }{}}{\fldrslt {\cs37\ul\cf2 setSBBSidebandCutoffFilter}}}
 (uint8_t SBCUTFLT)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets SBB Sideband Cutoff Filter for band pass and low pass filters. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALS" }{}}{\fldrslt {\cs37\ul\cf2 setSSBAvcDivider}}}
 (uint8_t AVC_DIVIDER)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets AVC Divider. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 setSSBDspAfc}}}
 (uint8_t DSP_AFCDIS)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets DSP AFC disable or enable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALU" }{}}{\fldrslt {\cs37\ul\cf2 setSSBSoftMute}}}
 (uint8_t SMUTESEL)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets SSB Soft-mute Based on RSSI or SNR Selection: }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 si47x_firmware_query_library}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALV" }{}}{\fldrslt {\cs37\ul\cf2 queryLibraryId}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Query the library information of the Si47XX device. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALW" }{}}{\fldrslt {\cs37\ul\cf2 patchPowerUp}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method can be used to prepare the device to apply SSBRX patch. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALX" }{}}{\fldrslt {\cs37\ul\cf2 downloadPatch}}}
 (const uint8_t *ssb_patch_content, const uint16_t ssb_patch_content_size)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfers the content of a patch stored in a array of bytes to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735}}} device. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALY" }{}}{\fldrslt {\cs37\ul\cf2 downloadPatch}}}
 (int eeprom_i2c_address)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfers the content of a patch stored in a eeprom to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735}}} device. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALZ" }{}}{\fldrslt {\cs37\ul\cf2 ssbPowerUp}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function can be useful for debug and test. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMA" }{}}{\fldrslt {\cs37\ul\cf2 setI2CLowSpeedMode}}}
 (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMB" }{}}{\fldrslt {\cs37\ul\cf2 setI2CStandardMode}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets I2C buss to 10KHz. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMC" }{}}{\fldrslt {\cs37\ul\cf2 setI2CFastMode}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets I2C buss to 100KHz. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 setI2CFastModeCustom}}}
 (long value=500000)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets I2C buss to 400KHz. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGK" }{}}{\fldrslt {\cs37\ul\cf2 setDeviceI2CAddress}}}
 (uint8_t senPin)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the I2C Bus Address. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGI" }{}}{\fldrslt {\cs37\ul\cf2 getDeviceI2CAddress}}}
 (uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 resetPin}}}
)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
I2C bus address setup. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 setDeviceOtherI2CAddress}}}
 (uint8_t i2cAddr)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the onther I2C Bus Address (for Si470X) }{
}\par
}\par}
}
{
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\b Protected Member Functions}\par}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGH" }{}}{\fldrslt {\cs37\ul\cf2 waitInterrupr}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt handle. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 sendProperty}}}
 (uint16_t propertyValue, uint16_t param)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
wait for interrupt (useful if you are using interrupt resource) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 sendSSBModeProperty}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sends the property command to the device. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMG" }{}}{\fldrslt {\cs37\ul\cf2 disableFmDebug}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sends SSB_MODE property to the device. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMH" }{}}{\fldrslt {\cs37\ul\cf2 clearRdsBuffer2A}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
disable some Si47XX debug resources implemented by the Silicon Labs }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMI" }{}}{\fldrslt {\cs37\ul\cf2 clearRdsBuffer2B}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear RDS group type 2A buffer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMJ" }{}}{\fldrslt {\cs37\ul\cf2 clearRdsBuffer0A}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear RDS group type 2B buffer. }{
}\par
}\par}
}
{
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\b Protected Attributes}\par}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMK" }{}}{\fldrslt {\cs37\ul\cf2 rds_buffer2A}}}
 [65]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAML" }{}}{\fldrslt {\cs37\ul\cf2 rds_buffer2B}}}
 [33]\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RDS Radio Text buffer - Program Information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMM" }{}}{\fldrslt {\cs37\ul\cf2 rds_buffer0A}}}
 [9]\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RDS Radio Text buffer - Station Informaation. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMN" }{}}{\fldrslt {\cs37\ul\cf2 rds_time}}}
 [20]\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RDS Basic tuning and switching information (Type 0 groups) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMO" }{}}{\fldrslt {\cs37\ul\cf2 rdsTextAdress2A}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RDS date time received information \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMP" }{}}{\fldrslt {\cs37\ul\cf2 rdsTextAdress2B}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
rds_buffer2A current position }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMQ" }{}}{\fldrslt {\cs37\ul\cf2 rdsTextAdress0A}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
rds_buffer2B current position }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACG" }{}}{\fldrslt {\cs37\ul\cf2 SI473X_ADDR_SEN_LOW}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
rds_buffer0A current position }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 lastTextFlagAB}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
current I2C buss address }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 resetPin}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGQ" }{}}{\fldrslt {\cs37\ul\cf2 interruptPin}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
pin used on Arduino Board to RESET the Si47XX device }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 currentTune}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
pin used on Arduino Board to control interrupt. If -1, interrupt is no used. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMU" }{}}{\fldrslt {\cs37\ul\cf2 currentMinimumFrequency}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
tell the current tune (FM, AM or SSB) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMV" }{}}{\fldrslt {\cs37\ul\cf2 currentMaximumFrequency}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
minimum frequency of the current band }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMW" }{}}{\fldrslt {\cs37\ul\cf2 currentWorkFrequency}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
maximum frequency of the current band }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 currentStep}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
current frequency }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMY" }{}}{\fldrslt {\cs37\ul\cf2 lastMode}}}
 = -1\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
current steps }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMZ" }{}}{\fldrslt {\cs37\ul\cf2 currentAvcAmMaxGain}}}
 = 48\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Store the last mode used. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 si47x_frequency}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequency}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Automatic Volume Control Gain for AM - Default 48. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 si47x_set_frequency}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
data structure to get current frequency }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rqs_status}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 currentRqsStatus}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 si47x_response_status}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAND" }{}}{\fldrslt {\cs37\ul\cf2 currentStatus}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
current Radio SIgnal Quality status }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 si47x_firmware_information}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANE" }{}}{\fldrslt {\cs37\ul\cf2 firmwareInfo}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
current device status }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_status}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
firmware information }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 si47x_agc_status}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANG" }{}}{\fldrslt {\cs37\ul\cf2 currentAgcStatus}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
current RDS status }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 si47x_ssb_mode}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANH" }{}}{\fldrslt {\cs37\ul\cf2 currentSSBMode}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
current AGC status }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAC" }{}}{\fldrslt {\cs37\ul\cf2 si473x_powerup}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 powerUp}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
indicates if USB or LSB }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 volume}}}
 = 32\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANJ" }{}}{\fldrslt {\cs37\ul\cf2 currentSsbStatus}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getACFIndicator\:SI4735}
{\xe \v SI4735\:getACFIndicator}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getACFIndicator (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if the AFC rails (AFC Rail Indicator). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01004                                   \{\par
01005          {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAND" }{}}{\fldrslt {\cs37\ul\cf2 currentStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANK" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.AFCRL; \par
01006     \};\par
}
}
{\xe \v getAgcGainIndex\:SI4735}
{\xe \v SI4735\:getAgcGainIndex}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getAgcGainIndex (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current AGC gain index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
uint8_t The current AGC gain index. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01135                                      \{ \par
01136         {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANG" }{}}{\fldrslt {\cs37\ul\cf2 currentAgcStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANL" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.AGCIDX; \par
01137     \}; \par
}
}
{\xe \v getAntennaTuningCapacitor\:SI4735}
{\xe \v SI4735\:getAntennaTuningCapacitor}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getAntennaTuningCapacitor (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Antenna Tuning Capacitor value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the current antenna tuning capacitor value.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
uint8_t capacitance \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01069                                                \{ \par
01070         {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAND" }{}}{\fldrslt {\cs37\ul\cf2 currentStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANK" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.READANTCAP; \par
01071     \}; \par
}
}
{\xe \v getBandLimit\:SI4735}
{\xe \v SI4735\:getBandLimit}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getBandLimit (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if a seek hit the band limit. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(WRAP = 0 in FM_START_SEEK) or wrapped to the original frequency(WRAP = 1).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
BLTF \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01015                                \{ \par
01016         {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAND" }{}}{\fldrslt {\cs37\ul\cf2 currentStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANK" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLTF; \par
01017     \};\par
}
}
{\xe \v getCurrentAfcRailIndicator\:SI4735}
{\xe \v SI4735\:getCurrentAfcRailIndicator}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getCurrentAfcRailIndicator (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Valid Channel. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01152 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 currentRqsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANM" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.AFCRL; \};  \par
}
}
{\xe \v getCurrentAvcAmMaxGain\:SI4735}
{\xe \v SI4735\:getCurrentAvcAmMaxGain}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getCurrentAvcAmMaxGain (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the maximum gain for automatic volume control. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the current Avc Am Max Gain\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
uint8_t Current AVC gain index value \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01090                                             \{\par
01091         {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMZ" }{}}{\fldrslt {\cs37\ul\cf2 currentAvcAmMaxGain}}}
; \par
01092     \};\par
}
}
{\xe \v getCurrentBlendDetectInterrupt\:SI4735}
{\xe \v SI4735\:getCurrentBlendDetectInterrupt}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getCurrentBlendDetectInterrupt (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multipath Detect High. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01161 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 currentRqsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANM" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLENDINT; \};    \par
}
}
{\xe \v getCurrentMultipath\:SI4735}
{\xe \v SI4735\:getCurrentMultipath}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getCurrentMultipath (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates stereo pilot presence. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01157 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 currentRqsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANM" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.MULT; \};                \par
}
}
{\xe \v getCurrentMultipathDetectHigh\:SI4735}
{\xe \v SI4735\:getCurrentMultipathDetectHigh}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getCurrentMultipathDetectHigh (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multipath Detect Low. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01160 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 currentRqsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANM" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.MULTHINT; \};     \par
}
}
{\xe \v getCurrentMultipathDetectLow\:SI4735}
{\xe \v SI4735\:getCurrentMultipathDetectLow}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getCurrentMultipathDetectLow (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Signed frequency offset (kHz). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01159 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 currentRqsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANM" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.MULTLINT; \};      \par
}
}
{\xe \v getCurrentPilot\:SI4735}
{\xe \v SI4735\:getCurrentPilot}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getCurrentPilot (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates amount of stereo blend in % (100 = full stereo, 0 = full mono). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01156 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 currentRqsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANM" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.PILOT; \};                      \par
}
}
{\xe \v getCurrentRSSI\:SI4735}
{\xe \v SI4735\:getCurrentRSSI}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getCurrentRSSI (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01145 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 currentRqsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANM" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.RSSI; \};            \par
}
}
{\xe \v getCurrentRssiDetectHigh\:SI4735}
{\xe \v SI4735\:getCurrentRssiDetectHigh}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getCurrentRssiDetectHigh (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSI Detect Low. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01148 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 currentRqsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANM" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.RSSIHINT; \}; \par
}
}
{\xe \v getCurrentRssiDetectLow\:SI4735}
{\xe \v SI4735\:getCurrentRssiDetectLow}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getCurrentRssiDetectLow (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
current SNR metric (0\'96127 dB). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01147 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 currentRqsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANM" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.RSSIILINT; \}; \par
}
}
{\xe \v getCurrentSignedFrequencyOffset\:SI4735}
{\xe \v SI4735\:getCurrentSignedFrequencyOffset}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getCurrentSignedFrequencyOffset (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the current multipath metric. (0 = no multipath; 100 = full multipath) }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01158 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 currentRqsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANM" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.FREQOFF; \}; \par
}
}
{\xe \v getCurrentSNR\:SI4735}
{\xe \v SI4735\:getCurrentSNR}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getCurrentSNR (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
current receive signal strength (0\'E2\'80\'93127 dB\'CE\'BCV). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01146 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 currentRqsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANM" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.SNR; \};              \par
}
}
{\xe \v getCurrentSnrDetectHigh\:SI4735}
{\xe \v SI4735\:getCurrentSnrDetectHigh}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getCurrentSnrDetectHigh (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SNR Detect Low. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01150 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 currentRqsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANM" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.SNRHINT; \};   \par
}
}
{\xe \v getCurrentSnrDetectLow\:SI4735}
{\xe \v SI4735\:getCurrentSnrDetectLow}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getCurrentSnrDetectLow (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSI Detect High. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01149 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 currentRqsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANM" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.SNRLINT; \};    \par
}
}
{\xe \v getCurrentSoftMuteIndicator\:SI4735}
{\xe \v SI4735\:getCurrentSoftMuteIndicator}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getCurrentSoftMuteIndicator (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AFC Rail Indicator. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01153 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 currentRqsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANM" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.SMUTE; \}; \par
}
}
{\xe \v getCurrentStereoBlend\:SI4735}
{\xe \v SI4735\:getCurrentStereoBlend}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getCurrentStereoBlend (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Soft Mute Indicator. Indicates soft mute is engaged. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01155 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 currentRqsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANM" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.STBLEND; \};           \par
}
}
{\xe \v getCurrentValidChannel\:SI4735}
{\xe \v SI4735\:getCurrentValidChannel}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getCurrentValidChannel (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SNR Detect High. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01151 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 currentRqsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANM" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.VALID; \};      \par
}
}
{\xe \v getCurrentVolume\:SI4735}
{\xe \v SI4735\:getCurrentVolume}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getCurrentVolume (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01183 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 volume}}}
; \}; \par
}
}
{\xe \v getFirmwareCHIPREV\:SI4735}
{\xe \v SI4735\:getFirmwareCHIPREV}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getFirmwareCHIPREV (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP7 - Returns the Component Minor Revision (ASCII). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01176 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANE" }{}}{\fldrslt {\cs37\ul\cf2 firmwareInfo}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANN" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.CHIPREV; \};   \par
}
}
{\xe \v getFirmwareCMPMAJOR\:SI4735}
{\xe \v SI4735\:getFirmwareCMPMAJOR}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getFirmwareCMPMAJOR (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP5 - Returns the Patch ID Low byte (HEX). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01174 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANE" }{}}{\fldrslt {\cs37\ul\cf2 firmwareInfo}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANN" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.CMPMAJOR; \}; \par
}
}
{\xe \v getFirmwareCMPMINOR\:SI4735}
{\xe \v SI4735\:getFirmwareCMPMINOR}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getFirmwareCMPMINOR (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP6 - Returns the Component Major Revision (ASCII). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01175 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANE" }{}}{\fldrslt {\cs37\ul\cf2 firmwareInfo}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANN" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.CMPMINOR; \}; \par
}
}
{\xe \v getFirmwareFWMAJOR\:SI4735}
{\xe \v SI4735\:getFirmwareFWMAJOR}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getFirmwareFWMAJOR (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP1 - Part Number (HEX) }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01170 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANE" }{}}{\fldrslt {\cs37\ul\cf2 firmwareInfo}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANN" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.FWMAJOR; \};   \par
}
}
{\xe \v getFirmwareFWMINOR\:SI4735}
{\xe \v SI4735\:getFirmwareFWMINOR}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getFirmwareFWMINOR (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP2 - Returns the Firmware Major Revision (ASCII). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01171 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANE" }{}}{\fldrslt {\cs37\ul\cf2 firmwareInfo}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANN" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.FWMINOR; \};   \par
}
}
{\xe \v getFirmwarePATCHH\:SI4735}
{\xe \v SI4735\:getFirmwarePATCHH}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getFirmwarePATCHH (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP3 - Returns the Firmware Minor Revision (ASCII). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01172 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANE" }{}}{\fldrslt {\cs37\ul\cf2 firmwareInfo}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANN" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.PATCHH; \};     \par
}
}
{\xe \v getFirmwarePATCHL\:SI4735}
{\xe \v SI4735\:getFirmwarePATCHL}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getFirmwarePATCHL (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP4 - Returns the Patch ID High byte (HEX). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01173 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANE" }{}}{\fldrslt {\cs37\ul\cf2 firmwareInfo}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANN" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.PATCHL; \};     \par
}
}
{\xe \v getFirmwarePN\:SI4735}
{\xe \v SI4735\:getFirmwarePN}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getFirmwarePN (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Blend Detect Interrupt. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01169 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANE" }{}}{\fldrslt {\cs37\ul\cf2 firmwareInfo}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANN" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.PN;\};              \par
}
}
{\xe \v getGroupLost\:SI4735}
{\xe \v SI4735\:getGroupLost}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getGroupLost (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 = RDS currently synchronized. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01242 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.GRPLOST; \};             \par
}
}
{\xe \v getNumRdsFifoUsed\:SI4735}
{\xe \v SI4735\:getNumRdsFifoUsed}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getNumRdsFifoUsed (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 = One or more RDS groups discarded due to FIFO overrun. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01243 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.RDSFIFOUSED; \}; \par
}
}
{\xe \v getRadioDataSystemInterrupt\:SI4735}
{\xe \v SI4735\:getRadioDataSystemInterrupt}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getRadioDataSystemInterrupt (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Radio Data System (RDS) Interrupt status. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 63 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
RDSINT status \par
 \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00970                                               \{ \par
00971         {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAND" }{}}{\fldrslt {\cs37\ul\cf2 currentStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANK" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.RDSINT; \par
00972     \};\par
}
}
{\xe \v getRdsNewBlockA\:SI4735}
{\xe \v SI4735\:getRdsNewBlockA}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getRdsNewBlockA (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 = Found RDS synchronization }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01239 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.RDSNEWBLOCKA; \};     \par
}
{
\ql
Referenced by getRdsPI().}\par
}
{\xe \v getRdsNewBlockB\:SI4735}
{\xe \v SI4735\:getRdsNewBlockB}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getRdsNewBlockB (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 = Valid Block A data has been received. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01240 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.RDSNEWBLOCKB; \};     \par
}
}
{\xe \v getRdsReceived\:SI4735}
{\xe \v SI4735\:getRdsReceived}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getRdsReceived (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01236 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.RDSRECV; \};           \par
}
{
\ql
Referenced by getRdsPI(), getRdsText0A(), and getRdsText2A().}\par
}
{\xe \v getRdsSync\:SI4735}
{\xe \v SI4735\:getRdsSync}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getRdsSync (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 = Valid Block B data has been received. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01241 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.RDSSYNC; \};               \par
}
}
{\xe \v getRdsSyncFound\:SI4735}
{\xe \v SI4735\:getRdsSyncFound}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getRdsSyncFound (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 = Lost RDS synchronization }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01238 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.RDSSYNCFOUND; \};     \par
}
}
{\xe \v getRdsSyncLost\:SI4735}
{\xe \v SI4735\:getRdsSyncLost}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getRdsSyncLost (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 = FIFO filled to minimum number of groups }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01237 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.RDSSYNCLOST; \};       \par
}
}
{\xe \v getReceivedSignalStrengthIndicator\:SI4735}
{\xe \v SI4735\:getReceivedSignalStrengthIndicator}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getReceivedSignalStrengthIndicator (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the value of Received Signal Strength Indicator (dB\'CE\'BCV). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
uint8_t \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01036                                                         \{ \par
01037         {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAND" }{}}{\fldrslt {\cs37\ul\cf2 currentStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANK" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.RSSI; \par
01038     \};\par
}
}
{\xe \v getSignalQualityInterrupt\:SI4735}
{\xe \v SI4735\:getSignalQualityInterrupt}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getSignalQualityInterrupt (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current frequency stored in memory (it does not query the Si47XX device) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STATUS RESPONSE Set of methods to get current status information. Call them after getStatus or getFrequency or seekStation \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 63\par
}}Get the Signal Quality Interrupt status \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 63 \par
 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
RDSINT status \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00961                                             \{ \par
00962         {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAND" }{}}{\fldrslt {\cs37\ul\cf2 currentStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANK" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.RSQINT; \par
00963     \};\par
}
}
{\xe \v getStatusCTS\:SI4735}
{\xe \v SI4735\:getStatusCTS}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getStatusCTS (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Error flag Clear to Send. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
CTS \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00997 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAND" }{}}{\fldrslt {\cs37\ul\cf2 currentStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANK" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.CTS; \};\par
}
}
{\xe \v getStatusError\:SI4735}
{\xe \v SI4735\:getStatusError}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getStatusError (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Status Error. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the Error flag (true or false) of status of the least Tune or Seek \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Error flag \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00988                                  \{ \par
00989         {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAND" }{}}{\fldrslt {\cs37\ul\cf2 currentStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANK" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.ERR; \par
00990     \};\par
}
}
{\xe \v getStatusMULT\:SI4735}
{\xe \v SI4735\:getStatusMULT}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getStatusMULT (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Status the M U L T. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the value containing the multipath metric when tune is complete.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
uint8_t \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01058                                    \{ \par
01059         {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAND" }{}}{\fldrslt {\cs37\ul\cf2 currentStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANK" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.MULT; \par
01060     \};\par
}
}
{\xe \v getStatusSNR\:SI4735}
{\xe \v SI4735\:getStatusSNR}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getStatusSNR (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the SNR metric when tune is complete (dB) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the value of the SNR metric when tune is complete (dB).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
uint8_t \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01047                                   \{ \par
01048         {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAND" }{}}{\fldrslt {\cs37\ul\cf2 currentStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANK" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.SNR; \par
01049     \};\par
}
}
{\xe \v getStatusValid\:SI4735}
{\xe \v SI4735\:getStatusValid}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getStatusValid (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the channel status. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if the channel is currently valid as determined by the seek/tune properties (0x1403, 0x1404, 0x1108)\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true \par
false \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01027                                  \{ \par
01028         {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAND" }{}}{\fldrslt {\cs37\ul\cf2 currentStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANK" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.VALID; \par
01029     \};\par
}
}
{\xe \v getTuneCompleteTriggered\:SI4735}
{\xe \v SI4735\:getTuneCompleteTriggered}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::getTuneCompleteTriggered (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Tune Complete status. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seek/Tune Complete Interrupt; 1 = Tune complete has been triggered. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
STCINT status \par
 \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00979                                            \{ \par
00980         {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAND" }{}}{\fldrslt {\cs37\ul\cf2 currentStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANK" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.STCINT;\par
00981     \};\par
}
}
{\xe \v getTuneFrequencyFast\:SI4735}
{\xe \v SI4735\:getTuneFrequencyFast}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getTuneFrequencyFast (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01200 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.FAST; \};                  \par
}
}
{\xe \v getTuneFrequencyFreeze\:SI4735}
{\xe \v SI4735\:getTuneFrequencyFreeze}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getTuneFrequencyFreeze (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FAST Tuning. If set, executes fast and invalidated tune. The tune status will not be accurate. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01202 \{ {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.FREEZE; \};              \par
}
}
{\xe \v isAgcEnabled\:SI4735}
{\xe \v SI4735\:isAgcEnabled}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::isAgcEnabled (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the AGC is enabled. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true if the AGC is enabled \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01126                                \{ \par
01127         {\cf19 return} !{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANG" }{}}{\fldrslt {\cs37\ul\cf2 currentAgcStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANL" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.AGCDIS; \par
01128     \};\par
}
}
{\xe \v setAmSoftMuteMaxAttenuation\:SI4735}
{\xe \v SI4735\:setAmSoftMuteMaxAttenuation}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setAmSoftMuteMaxAttenuation (uint8_t  {\i smattn} = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Am Soft Mute Max Attenuation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function can be useful to disable Soft Mute. The value 0 disable soft mute.\par
Specified in units of dB. Default maximum attenuation is 8 dB.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; page 158.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i smattn} \cell }{Maximum attenuation to apply when in soft mute \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01104                                                                  \{\par
01105         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 sendProperty}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEK" }{}}{\fldrslt {\cs37\ul\cf2 AM_SOFT_MUTE_MAX_ATTENUATION}}}
, smattn);\par
01106     \};\par
}
}
{\xe \v setAvcAmMaxGain\:SI4735}
{\xe \v SI4735\:setAvcAmMaxGain}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setAvcAmMaxGain (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Queries Automatic Gain Control STATUS. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Avc Am Max Gain to 48dB \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01079                                   \{ \par
01080         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 sendProperty}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEA" }{}}{\fldrslt {\cs37\ul\cf2 AM_AUTOMATIC_VOLUME_CONTROL_MAX_GAIN}}}
, (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMZ" }{}}{\fldrslt {\cs37\ul\cf2 currentAvcAmMaxGain}}}
 = 48) * 340));\par
01081     \};\par
}
}
{\xe \v setFunction\:SI4735}
{\xe \v SI4735\:setFunction}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setFunction (uint8_t  {\i FUNC})}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setI2CFastMode\:SI4735}
{\xe \v SI4735\:setI2CFastMode}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setI2CFastMode (void ){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets I2C buss to 100KHz. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01296 \{ Wire.setClock(400000); \};     \par
}
}
{\xe \v setI2CFastModeCustom\:SI4735}
{\xe \v SI4735\:setI2CFastModeCustom}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setI2CFastModeCustom (long  {\i value} = {\f2 500000}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets I2C buss to 400KHz. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the I2C bus to a given value.\par
ATTENTION: use this function with cation\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{in Hz. For example: The values 500000 sets the bus to 500KHz. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01305 \{ Wire.setClock(value); \}; \par
}
}
{\xe \v setI2CLowSpeedMode\:SI4735}
{\xe \v SI4735\:setI2CLowSpeedMode}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setI2CLowSpeedMode (void ){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01294 \{ Wire.setClock(10000); \};  \par
}
}
{\xe \v setI2CStandardMode\:SI4735}
{\xe \v SI4735\:setI2CStandardMode}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setI2CStandardMode (void ){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets I2C buss to 10KHz. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01295 \{ Wire.setClock(100000); \}; \par
}
}
{\xe \v setSsbSoftMuteMaxAttenuation\:SI4735}
{\xe \v SI4735\:setSsbSoftMuteMaxAttenuation}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setSsbSoftMuteMaxAttenuation (uint8_t  {\i smattn} = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the SSB Soft Mute Max Attenuation object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets maximum attenuation during soft mute (dB). Set to 0 to disable soft mute.\par
Specified in units of dB. Default maximum attenuation is 8 dB.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i smattn} \cell }{Maximum attenuation to apply when in soft mute. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01117                                                                   \{\par
01118         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 sendProperty}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFM" }{}}{\fldrslt {\cs37\ul\cf2 SSB_SOFT_MUTE_MAX_ATTENUATION}}}
, smattn);\par
01119     \};\par
}
}
{\xe \v setTuneFrequencyFast\:SI4735}
{\xe \v SI4735\:setTuneFrequencyFast}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setTuneFrequencyFast (uint8_t  {\i FAST}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the FAST tuning status. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01201 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.FAST = FAST; \};         \par
}
}
{\xe \v setTuneFrequencyFreeze\:SI4735}
{\xe \v SI4735\:setTuneFrequencyFreeze}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setTuneFrequencyFreeze (uint8_t  {\i FREEZE}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the FREEZE status. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01203 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.FREEZE = FREEZE; \}; \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v currentAgcStatus\:SI4735}
{\xe \v SI4735\:currentAgcStatus}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 si47x_agc_status}}}
 SI4735::currentAgcStatus{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
current RDS status }}\par
}
{\xe \v currentAvcAmMaxGain\:SI4735}
{\xe \v SI4735\:currentAvcAmMaxGain}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::currentAvcAmMaxGain = 48{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Store the last mode used. }}\par
}
{\xe \v currentFrequency\:SI4735}
{\xe \v SI4735\:currentFrequency}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 si47x_frequency}}}
 SI4735::currentFrequency{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Automatic Volume Control Gain for AM - Default 48. }}\par
}
{\xe \v currentFrequencyParams\:SI4735}
{\xe \v SI4735\:currentFrequencyParams}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 si47x_set_frequency}}}
 SI4735::currentFrequencyParams{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
data structure to get current frequency }}\par
}
{\xe \v currentMaximumFrequency\:SI4735}
{\xe \v SI4735\:currentMaximumFrequency}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t SI4735::currentMaximumFrequency{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
minimum frequency of the current band }}\par
}
{\xe \v currentMinimumFrequency\:SI4735}
{\xe \v SI4735\:currentMinimumFrequency}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t SI4735::currentMinimumFrequency{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
tell the current tune (FM, AM or SSB) }}\par
}
{\xe \v currentRdsStatus\:SI4735}
{\xe \v SI4735\:currentRdsStatus}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_status}}}
 SI4735::currentRdsStatus{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
firmware information }}\par
}
{\xe \v currentRqsStatus\:SI4735}
{\xe \v SI4735\:currentRqsStatus}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rqs_status}}}
 SI4735::currentRqsStatus{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v currentSSBMode\:SI4735}
{\xe \v SI4735\:currentSSBMode}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 si47x_ssb_mode}}}
 SI4735::currentSSBMode{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
current AGC status }}\par
}
{\xe \v currentSsbStatus\:SI4735}
{\xe \v SI4735\:currentSsbStatus}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::currentSsbStatus{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v currentStatus\:SI4735}
{\xe \v SI4735\:currentStatus}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 si47x_response_status}}}
 SI4735::currentStatus{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
current Radio SIgnal Quality status }}\par
}
{\xe \v currentStep\:SI4735}
{\xe \v SI4735\:currentStep}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t SI4735::currentStep{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
current frequency }}\par
}
{\xe \v currentTune\:SI4735}
{\xe \v SI4735\:currentTune}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::currentTune{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
pin used on Arduino Board to control interrupt. If -1, interrupt is no used. }}\par
}
{\xe \v currentWorkFrequency\:SI4735}
{\xe \v SI4735\:currentWorkFrequency}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t SI4735::currentWorkFrequency{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
maximum frequency of the current band }}\par
}
{\xe \v deviceAddress\:SI4735}
{\xe \v SI4735\:deviceAddress}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t SI4735::deviceAddress = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACG" }{}}{\fldrslt {\cs37\ul\cf2 SI473X_ADDR_SEN_LOW}}}
{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
rds_buffer0A current position }}\par
}
{\xe \v firmwareInfo\:SI4735}
{\xe \v SI4735\:firmwareInfo}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 si47x_firmware_information}}}
 SI4735::firmwareInfo{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
current device status }}\par
}
{\xe \v interruptPin\:SI4735}
{\xe \v SI4735\:interruptPin}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::interruptPin{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
pin used on Arduino Board to RESET the Si47XX device }}\par
}
{\xe \v lastMode\:SI4735}
{\xe \v SI4735\:lastMode}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::lastMode = -1{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
current steps }}\par
}
{\xe \v lastTextFlagAB\:SI4735}
{\xe \v SI4735\:lastTextFlagAB}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::lastTextFlagAB{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
current I2C buss address }}\par
}
{\xe \v powerUp\:SI4735}
{\xe \v SI4735\:powerUp}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAC" }{}}{\fldrslt {\cs37\ul\cf2 si473x_powerup}}}
 SI4735::powerUp{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
indicates if USB or LSB }}\par
}
{\xe \v rds_buffer0A\:SI4735}
{\xe \v SI4735\:rds_buffer0A}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char SI4735::rds_buffer0A[9]{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RDS Radio Text buffer - Station Informaation. }}\par
{
\ql
Referenced by clearRdsBuffer0A(), and getRdsText0A().}\par
}
{\xe \v rds_buffer2A\:SI4735}
{\xe \v SI4735\:rds_buffer2A}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char SI4735::rds_buffer2A[65]{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\ql
Referenced by clearRdsBuffer2A(), getRdsText(), and getRdsText2A().}\par
}
{\xe \v rds_buffer2B\:SI4735}
{\xe \v SI4735\:rds_buffer2B}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char SI4735::rds_buffer2B[33]{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RDS Radio Text buffer - Program Information. }}\par
{
\ql
Referenced by clearRdsBuffer2B(), and getRdsText2B().}\par
}
{\xe \v rds_time\:SI4735}
{\xe \v SI4735\:rds_time}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char SI4735::rds_time[20]{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RDS Basic tuning and switching information (Type 0 groups) }}\par
{
\ql
Referenced by getRdsTime().}\par
}
{\xe \v rdsTextAdress0A\:SI4735}
{\xe \v SI4735\:rdsTextAdress0A}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SI4735::rdsTextAdress0A{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
rds_buffer2B current position }}\par
{
\ql
Referenced by getRdsText0A().}\par
}
{\xe \v rdsTextAdress2A\:SI4735}
{\xe \v SI4735\:rdsTextAdress2A}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SI4735::rdsTextAdress2A{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RDS date time received information \par
 }}\par
{
\ql
Referenced by getRdsText(), and getRdsText2A().}\par
}
{\xe \v rdsTextAdress2B\:SI4735}
{\xe \v SI4735\:rdsTextAdress2B}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SI4735::rdsTextAdress2B{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
rds_buffer2A current position }}\par
{
\ql
Referenced by getRdsText2B().}\par
}
{\xe \v resetPin\:SI4735}
{\xe \v SI4735\:resetPin}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::resetPin{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v volume\:SI4735}
{\xe \v SI4735\:volume}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::volume = 32{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v getDeviceI2CAddress\:Deal with Interrupt and I2C bus}
{\xe \v Deal with Interrupt and I2C bus\:getDeviceI2CAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t SI4735::getDeviceI2CAddress (uint8_t  {\i resetPin})}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
I2C bus address setup. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scans for two possible addresses for the Si47XX (0x11 or 0x63 )\par
This function also sets the system to the found I2C bus address of Si47XX.\par
You do not need to use this function if the SEN PIN is configured to ground (GND). The default I2C address is 0x11. Use this function if you do not know how the SEN pin is configured.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{resetPin MCU Mater (Arduino) reset pin\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
int16_t 0x11 if the SEN pin of the Si47XX is low or 0x63 if the SEN pin of the Si47XX is HIGH or 0x0 if error. \par
 \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00077                                                     \{\par
00078     int16_t error;\par
00079 \par
00080     pinMode({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 resetPin}}}
, OUTPUT);\par
00081     delay(50);\par
00082     digitalWrite({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 resetPin}}}
, LOW);\par
00083     delay(50);\par
00084     digitalWrite({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 resetPin}}}
, HIGH);\par
00085 \par
00086     Wire.begin();\par
00087     {\cf20 // check 0X11 I2C address}\par
00088     Wire.beginTransmission({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACG" }{}}{\fldrslt {\cs37\ul\cf2 SI473X_ADDR_SEN_LOW}}}
);\par
00089     error = Wire.endTransmission(); \par
00090     {\cf19 if} ( error == 0 ) \{\par
00091       {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGK" }{}}{\fldrslt {\cs37\ul\cf2 setDeviceI2CAddress}}}
(0);  \par
00092       {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACG" }{}}{\fldrslt {\cs37\ul\cf2 SI473X_ADDR_SEN_LOW}}}
;\par
00093     \}\par
00094 \par
00095     {\cf20 // check 0X63 I2C address}\par
00096     Wire.beginTransmission({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACH" }{}}{\fldrslt {\cs37\ul\cf2 SI473X_ADDR_SEN_HIGH}}}
);\par
00097     error = Wire.endTransmission();  \par
00098     {\cf19 if} ( error == 0 ) \{\par
00099       {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGK" }{}}{\fldrslt {\cs37\ul\cf2 setDeviceI2CAddress}}}
(1);  \par
00100       {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACH" }{}}{\fldrslt {\cs37\ul\cf2 SI473X_ADDR_SEN_HIGH}}}
;\par
00101     \}  \par
00102 \par
00103     {\cf20 // Did find the device   }\par
00104     {\cf19 return} 0;\par
00105 \}\par
}
}
{\xe \v setDeviceI2CAddress\:Deal with Interrupt and I2C bus}
{\xe \v Deal with Interrupt and I2C bus\:setDeviceI2CAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setDeviceI2CAddress (uint8_t  {\i senPin})}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the I2C Bus Address. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The parameter senPin is not the I2C bus address. It is the SEN pin setup of the schematic (eletronic circuit).\par
If it is connected to the ground, call this function with senPin = 0; else senPin = 1. You do not need to use this function if the SEN PIN configured to ground (GND).\par
The default value is 0x11 (senPin = 0). In this case you have to ground the pin SEN of the SI473X. If you want to change this address, call this function with senPin = 1\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i senPin} \cell }{0 - when the pin SEN (16 on SSOP version or pin 6 on QFN version) is set to low (GND - 0V) 1 - when the pin SEN (16 on SSOP version or pin 6 on QFN version) is set to high (+3.3V) \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00124                                                \{\par
00125     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
 = (senPin)? {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACH" }{}}{\fldrslt {\cs37\ul\cf2 SI473X_ADDR_SEN_HIGH}}}
 : {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACG" }{}}{\fldrslt {\cs37\ul\cf2 SI473X_ADDR_SEN_LOW}}}
;\par
00126 \};\par
}
}
{\xe \v setDeviceOtherI2CAddress\:Deal with Interrupt and I2C bus}
{\xe \v Deal with Interrupt and I2C bus\:setDeviceOtherI2CAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setDeviceOtherI2CAddress (uint8_t  {\i i2cAddr})}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the onther I2C Bus Address (for Si470X) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
You can set another I2C address different of 0x11 and 0x63\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{i2cAddr (example 0x10) \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00137                                                      \{\par
00138     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
 = i2cAddr;\par
00139 \};\par
}
}
{\xe \v SI4735\:Deal with Interrupt and I2C bus}
{\xe \v Deal with Interrupt and I2C bus\:SI4735}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SI4735::SI4735 ()}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear RDS group type 0A buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGG" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::SI4735}}} object. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00036 \{\par
00037     {\cf20 // 1 = LSB and 2 = USB; 0 = AM, FM or WB}\par
00038     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANJ" }{}}{\fldrslt {\cs37\ul\cf2 currentSsbStatus}}}
 = 0;\par
00039 \}\par
}
}
{\xe \v waitInterrupr\:Deal with Interrupt and I2C bus}
{\xe \v Deal with Interrupt and I2C bus\:waitInterrupr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::waitInterrupr (void ){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt handle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If you setup interrupt, this function will be called whenever the Si4735 changes. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00055 \{\par
00056     {\cf19 while} (!data_from_si4735)\par
00057         ;\par
00058 \}\par
}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FM Mono Stereo audio setup\par \pard\plain 
{\tc\tcl2 \v FM Mono Stereo audio setup}
{\xe \v FM Mono Stereo audio setup}
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setFmBlendStereoThreshold}}}
 (uint8_t parameter)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets RSSI threshold for stereo blend (Full stereo above threshold, blend below threshold). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setFmBlendMonoThreshold}}}
 (uint8_t parameter)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets RSSI threshold for mono blend (Full mono below threshold, blend above threshold). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKC" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setFmBlendRssiStereoThreshold}}}
 (uint8_t parameter)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets RSSI threshold for stereo blend. (Full stereo above threshold, blend below threshold.) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setFmBLendRssiMonoThreshold}}}
 (uint8_t parameter)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets RSSI threshold for mono blend (Full mono below threshold, blend above threshold). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setFmBlendSnrStereoThreshold}}}
 (uint8_t parameter)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets SNR threshold for stereo blend (Full stereo above threshold, blend below threshold). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setFmBLendSnrMonoThreshold}}}
 (uint8_t parameter)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets SNR threshold for mono blend (Full mono below threshold, blend above threshold). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKG" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setFmBlendMultiPathStereoThreshold}}}
 (uint8_t parameter)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets multipath threshold for stereo blend (Full stereo below threshold, blend above threshold). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setFmBlendMultiPathMonoThreshold}}}
 (uint8_t parameter)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets Multipath threshold for mono blend (Full mono above threshold, blend below threshold). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setFmStereoOff}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Turn Off Stereo operation. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKI" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setFmStereoOn}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Turn Off Stereo operation. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMG" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::disableFmDebug}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sends SSB_MODE property to the device. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v disableFmDebug\:FM Mono Stereo audio setup}
{\xe \v FM Mono Stereo audio setup\:disableFmDebug}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::disableFmDebug (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sends SSB_MODE property to the device. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
There is a debug feature that remains active in Si4704/05/3x-D60 firmware which can create periodic noise in audio.\par
Silicon Labs recommends you disable this feature by sending the following bytes (shown here in hexadecimal form): 0x12 0x00 0xFF 0x00 0x00 0x00.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; page 299. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00869 \{\par
00870     Wire.beginTransmission({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
);\par
00871     Wire.write(0x12);\par
00872     Wire.write(0x00);\par
00873     Wire.write(0xFF);\par
00874     Wire.write(0x00);\par
00875     Wire.write(0x00);\par
00876     Wire.write(0x00);\par
00877     Wire.endTransmission();\par
00878     delayMicroseconds(2500);\par
00879 \}\par
}
{
\ql
Referenced by SI4735::setFM().}\par
}
{\xe \v setFmBlendMonoThreshold\:FM Mono Stereo audio setup}
{\xe \v FM Mono Stereo audio setup\:setFmBlendMonoThreshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setFmBlendMonoThreshold (uint8_t  {\i parameter})}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets RSSI threshold for mono blend (Full mono below threshold, blend above threshold). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To force stereo set this to 0. To force mono set this to 127. Default value is 30 dB\'CE\'BCV.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; page 56.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parameter} \cell }{valid values: 0 to 127 \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00738 \{\par
00739     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 sendProperty}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADA" }{}}{\fldrslt {\cs37\ul\cf2 FM_BLEND_MONO_THRESHOLD}}}
, parameter);\par
00740 \}\par
}
}
{\xe \v setFmBlendMultiPathMonoThreshold\:FM Mono Stereo audio setup}
{\xe \v FM Mono Stereo audio setup\:setFmBlendMultiPathMonoThreshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setFmBlendMultiPathMonoThreshold (uint8_t  {\i parameter})}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets Multipath threshold for mono blend (Full mono above threshold, blend below threshold). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To force stereo, set to 100. To force mono, set to 0. The default is 60.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; page 60.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parameter} \cell }{valid values: 0 to 100 \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00834 \{\par
00835     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 sendProperty}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 FM_BLEND_MULTIPATH_MONO_THRESHOLD}}}
, parameter);\par
00836 \}\par
}
}
{\xe \v setFmBlendMultiPathStereoThreshold\:FM Mono Stereo audio setup}
{\xe \v FM Mono Stereo audio setup\:setFmBlendMultiPathStereoThreshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setFmBlendMultiPathStereoThreshold (uint8_t  {\i parameter})}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets multipath threshold for stereo blend (Full stereo below threshold, blend above threshold). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To force stereo, set this to 100. To force mono, set this to 0. Default value is 20.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; page 60.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parameter} \cell }{valid values: 0 to 100 \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00818 \{\par
00819     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 sendProperty}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADF" }{}}{\fldrslt {\cs37\ul\cf2 FM_BLEND_MULTIPATH_STEREO_THRESHOLD}}}
, parameter);\par
00820 \}\par
}
}
{\xe \v setFmBLendRssiMonoThreshold\:FM Mono Stereo audio setup}
{\xe \v FM Mono Stereo audio setup\:setFmBLendRssiMonoThreshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setFmBLendRssiMonoThreshold (uint8_t  {\i parameter})}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets RSSI threshold for mono blend (Full mono below threshold, blend above threshold). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To force stereo, set this to 0. To force mono, set this to 127. Default value is 30 dB\'CE\'BCV.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; page 59. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parameter} \cell }{valid values: 0 to 127 \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00770 \{\par
00771     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 sendProperty}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADC" }{}}{\fldrslt {\cs37\ul\cf2 FM_BLEND_RSSI_MONO_THRESHOLD}}}
, parameter);\par
00772 \}\par
}
}
{\xe \v setFmBlendRssiStereoThreshold\:FM Mono Stereo audio setup}
{\xe \v FM Mono Stereo audio setup\:setFmBlendRssiStereoThreshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setFmBlendRssiStereoThreshold (uint8_t  {\i parameter})}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets RSSI threshold for stereo blend. (Full stereo above threshold, blend below threshold.) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To force stereo, set this to 0. To force mono, set this to 127. Default value is 49 dB\'CE\'BCV.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; page 59.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parameter} \cell }{valid values: 0 to 127 \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00754 \{\par
00755     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 sendProperty}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADB" }{}}{\fldrslt {\cs37\ul\cf2 FM_BLEND_RSSI_STEREO_THRESHOLD}}}
, parameter);\par
00756 \}\par
}
}
{\xe \v setFmBLendSnrMonoThreshold\:FM Mono Stereo audio setup}
{\xe \v FM Mono Stereo audio setup\:setFmBLendSnrMonoThreshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setFmBLendSnrMonoThreshold (uint8_t  {\i parameter})}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets SNR threshold for mono blend (Full mono below threshold, blend above threshold). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To force stereo, set this to 0. To force mono, set this to 127. Default value is 14 dB.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; page 59.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parameter} \cell }{valid values: 0 to 127 \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00802 \{\par
00803     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 sendProperty}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 FM_BLEND_SNR_MONO_THRESHOLD}}}
, parameter);\par
00804 \}\par
}
}
{\xe \v setFmBlendSnrStereoThreshold\:FM Mono Stereo audio setup}
{\xe \v FM Mono Stereo audio setup\:setFmBlendSnrStereoThreshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setFmBlendSnrStereoThreshold (uint8_t  {\i parameter})}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets SNR threshold for stereo blend (Full stereo above threshold, blend below threshold). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To force stereo, set this to 0. To force mono, set this to 127. Default value is 27 dB.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; page 59. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parameter} \cell }{valid values: 0 to 127 \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00786 \{\par
00787     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 sendProperty}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 FM_BLEND_SNR_STEREO_THRESHOLD}}}
, parameter);\par
00788 \}\par
}
}
{\xe \v setFmBlendStereoThreshold\:FM Mono Stereo audio setup}
{\xe \v FM Mono Stereo audio setup\:setFmBlendStereoThreshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setFmBlendStereoThreshold (uint8_t  {\i parameter})}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets RSSI threshold for stereo blend (Full stereo above threshold, blend below threshold). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To force stereo, set this to 0. To force mono, set this to 127.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; page 90.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parameter} \cell }{valid values: 0 to 127 \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00722 \{\par
00723     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 sendProperty}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACZ" }{}}{\fldrslt {\cs37\ul\cf2 FM_BLEND_STEREO_THRESHOLD}}}
, parameter);\par
00724 \}\par
}
}
{\xe \v setFmStereoOff\:FM Mono Stereo audio setup}
{\xe \v FM Mono Stereo audio setup\:setFmStereoOff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setFmStereoOff ()}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Turn Off Stereo operation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TO DO\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00844 \{\par
00846 \}\par
}
}
{\xe \v setFmStereoOn\:FM Mono Stereo audio setup}
{\xe \v FM Mono Stereo audio setup\:setFmStereoOn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setFmStereoOn ()}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Turn Off Stereo operation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TO DO\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00854 \{\par
00856 \}\par
}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FM RDS/DBDS\par \pard\plain 
{\tc\tcl2 \v FM RDS/DBDS}
{\xe \v FM RDS/DBDS}
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::RdsInit}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the control member variables for RDS. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMH" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::clearRdsBuffer2A}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
disable some Si47XX debug resources implemented by the Silicon Labs }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMI" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::clearRdsBuffer2B}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear RDS group type 2A buffer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMJ" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::clearRdsBuffer0A}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear RDS group type 2B buffer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setRdsConfig}}}
 (uint8_t RDSEN, uint8_t BLETHA, uint8_t BLETHB, uint8_t BLETHC, uint8_t BLETHD)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP3 - RDS FIFO Used; Number of groups remaining in the RDS FIFO (0 if empty). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKL" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setRdsIntSource}}}
 (uint8_t RDSNEWBLOCKB, uint8_t RDSNEWBLOCKA, uint8_t RDSSYNCFOUND, uint8_t RDSSYNCLOST, uint8_t RDSRECV)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configures interrupt related to RDS. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getRdsStatus}}}
 (uint8_t INTACK, uint8_t MTFIFO, uint8_t STATUSONLY)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the RDS status. Store the status in currentRdsStatus member. RDS COMMAND FM_RDS_STATUS. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKN" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getRdsStatus}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets RDS Status. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKX" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getRdsPI}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the programa type. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getRdsGroupType}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the Group Type (extracted from the Block B) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getRdsFlagAB}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the current Text Flag A/B \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALC" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getRdsTextSegmentAddress}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the address of the text segment. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getRdsVersionCode}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the version code (extracted from the Block B) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getRdsProgramType}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the Program Type (extracted from the Block B) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getNext2Block}}}
 (char *)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Process data received from group 2B. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getNext4Block}}}
 (char *)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Process data received from group 2A. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALD" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getRdsText}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the RDS Text when the message is of the Group Type 2 version A. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALE" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getRdsText0A}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the station name and other messages. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getRdsText2A}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Text processed for the 2A group. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getRdsText2B}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Text processed for the 2B group. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getRdsTime}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the RDS time and date when the Group type is 4. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v clearRdsBuffer0A\:FM RDS/DBDS}
{\xe \v FM RDS/DBDS\:clearRdsBuffer0A}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::clearRdsBuffer0A (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear RDS group type 2B buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear RDS buffer 0A (text) \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01426 \{\par
01427     {\cf19 for} ({\cf18 int} i = 0; i < 9; i++)\par
01428         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMM" }{}}{\fldrslt {\cs37\ul\cf2 rds_buffer0A}}}
[i] = {\cf23 ' '}; {\cf20 // Station Name buffer}\par
01429 \}\par
}
{
\ql
References SI4735::rds_buffer0A.}\par
{
\ql
Referenced by SI4735::getRdsStatus(), and SI4735::RdsInit().}\par
}
{\xe \v clearRdsBuffer2A\:FM RDS/DBDS}
{\xe \v FM RDS/DBDS\:clearRdsBuffer2A}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::clearRdsBuffer2A (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
disable some Si47XX debug resources implemented by the Silicon Labs }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear RDS buffer 2A (text) \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01403 \{\par
01404     {\cf19 for} ({\cf18 int} i = 0; i < 65; i++)\par
01405         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMK" }{}}{\fldrslt {\cs37\ul\cf2 rds_buffer2A}}}
[i] = {\cf23 ' '}; {\cf20 // Radio Text buffer - Program Information}\par
01406 \}\par
}
{
\ql
References SI4735::rds_buffer2A.}\par
{
\ql
Referenced by SI4735::getRdsStatus(), and SI4735::RdsInit().}\par
}
{\xe \v clearRdsBuffer2B\:FM RDS/DBDS}
{\xe \v FM RDS/DBDS\:clearRdsBuffer2B}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::clearRdsBuffer2B (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear RDS group type 2A buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear RDS buffer 2B (text) \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01415 \{\par
01416     {\cf19 for} ({\cf18 int} i = 0; i < 33; i++)\par
01417         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAML" }{}}{\fldrslt {\cs37\ul\cf2 rds_buffer2B}}}
[i] = {\cf23 ' '}; {\cf20 // Radio Text buffer - Station Informaation}\par
01418 \}\par
}
{
\ql
References SI4735::rds_buffer2B.}\par
{
\ql
Referenced by SI4735::getRdsStatus(), and SI4735::RdsInit().}\par
}
{\xe \v getNext2Block\:FM RDS/DBDS}
{\xe \v FM RDS/DBDS\:getNext2Block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::getNext2Block (char *  {\i c})}}
\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Process data received from group 2B. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i c} \cell }{char array reference to the "group 2B" text \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01724 \{\par
01725     {\cf18 char} raw[2];\par
01726     {\cf18 int} i, j;\par
01727 \par
01728     raw[1] = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKDL;\par
01729     raw[0] = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKDH;\par
01730 \par
01731     {\cf19 for} (i = j = 0; i < 2; i++)\par
01732     \{\par
01733         {\cf19 if} (raw[i] == 0xD || raw[i] == 0xA)\par
01734         \{\par
01735             c[j] = {\cf23 '\\0'};\par
01736             {\cf19 return};\par
01737         \}\par
01738         {\cf19 if} (raw[i] >= 32)\par
01739         \{\par
01740             c[j] = raw[i];\par
01741             j++;\par
01742         \}\par
01743         {\cf19 else}\par
01744         \{\par
01745             c[i] = {\cf23 ' '};\par
01746         \}\par
01747     \}\par
01748 \}\par
}
{
\ql
Referenced by SI4735::getRdsText0A(), and SI4735::getRdsText2B().}\par
}
{\xe \v getNext4Block\:FM RDS/DBDS}
{\xe \v FM RDS/DBDS\:getNext4Block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::getNext4Block (char *  {\i c})}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Process data received from group 2A. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i c} \cell }{char array reference to the "group  2A" text \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01758 \{\par
01759     {\cf18 char} raw[4];\par
01760     {\cf18 int} i, j;\par
01761 \par
01762     raw[0] = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKCH;\par
01763     raw[1] = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKCL;\par
01764     raw[2] = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKDH;\par
01765     raw[3] = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKDL;\par
01766     {\cf19 for} (i = j = 0; i < 4; i++)\par
01767     \{\par
01768         {\cf19 if} (raw[i] == 0xD || raw[i] == 0xA)\par
01769         \{\par
01770             c[j] = {\cf23 '\\0'};\par
01771             {\cf19 return};\par
01772         \}\par
01773         {\cf19 if} (raw[i] >= 32)\par
01774         \{\par
01775             c[j] = raw[i];\par
01776             j++;\par
01777         \}\par
01778         {\cf19 else}\par
01779         \{\par
01780             c[i] = {\cf23 ' '};\par
01781         \}\par
01782     \}\par
01783 \}\par
}
{
\ql
Referenced by SI4735::getRdsText(), and SI4735::getRdsText2A().}\par
}
{\xe \v getRdsFlagAB\:FM RDS/DBDS}
{\xe \v FM RDS/DBDS\:getRdsFlagAB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getRdsFlagAB (void )}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the current Text Flag A/B \par
 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
uint8_t current Text Flag A/B \par
 \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01650 \{\par
01651     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAS" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blockb}}}
 blkb;\par
01652 \par
01653     blkb.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOX" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.lowValue = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKBL;\par
01654     blkb.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOX" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.highValue = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKBH;\par
01655 \par
01656     {\cf19 return} blkb.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOY" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.textABFlag;\par
01657 \}\par
}
}
{\xe \v getRdsGroupType\:FM RDS/DBDS}
{\xe \v FM RDS/DBDS\:getRdsGroupType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getRdsGroupType (void )}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the Group Type (extracted from the Block B) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
BLOCKBL \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01633 \{\par
01634     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAS" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blockb}}}
 blkb;\par
01635 \par
01636     blkb.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOX" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.lowValue = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKBL;\par
01637     blkb.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOX" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.highValue = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKBH;\par
01638 \par
01639     {\cf19 return} blkb.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOY" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.groupType;\par
01640 \}\par
}
}
{\xe \v getRdsPI\:FM RDS/DBDS}
{\xe \v FM RDS/DBDS\:getRdsPI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t SI4735::getRdsPI (void )}}
\par
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the programa type. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read the Block A content\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 77 and 78\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
BLOCKAL \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01617 \{\par
01618     {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKO" }{}}{\fldrslt {\cs37\ul\cf2 getRdsReceived}}}
() && {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 getRdsNewBlockA}}}
())\par
01619     \{\par
01620         {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKAL;\par
01621     \}\par
01622     {\cf19 return} 0;\par
01623 \}\par
}
{
\ql
References SI4735::getRdsNewBlockA(), and SI4735::getRdsReceived().}\par
}
{\xe \v getRdsProgramType\:FM RDS/DBDS}
{\xe \v FM RDS/DBDS\:getRdsProgramType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getRdsProgramType (void )}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the Program Type (extracted from the Block B) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\field {\*\fldinst { HYPERLINK "https://en.wikipedia.org/wiki/Radio_Data_System" }{}}{\fldrslt {\cs37\ul\cf2 https://en.wikipedia.org/wiki/Radio_Data_System}}}
\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
program type (an integer betwenn 0 and 31) \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01707 \{\par
01708     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAS" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blockb}}}
 blkb;\par
01709 \par
01710     blkb.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOX" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.lowValue = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKBL;\par
01711     blkb.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOX" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.highValue = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKBH;\par
01712 \par
01713     {\cf19 return} blkb.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOY" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.programType;\par
01714 \}\par
}
}
{\xe \v getRdsStatus\:FM RDS/DBDS}
{\xe \v FM RDS/DBDS\:getRdsStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::getRdsStatus ()}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets RDS Status. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Same result of calling getRdsStatus(0,0,0).\par
Please, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 getRdsStatus(uint8_t INTACK, uint8_t MTFIFO, uint8_t STATUSONLY)}}} instead {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKN" }{}}{\fldrslt {\cs37\ul\cf2 getRdsStatus()}}} if you want other behaviour.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getRdsStatus(uint8_t INTACK, uint8_t MTFIFO, uint8_t STATUSONLY)}}} \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01599 \{\par
01600     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKN" }{}}{\fldrslt {\cs37\ul\cf2 getRdsStatus}}}
(0, 0, 0);\par
01601 \}\par
}
}
{\xe \v getRdsStatus\:FM RDS/DBDS}
{\xe \v FM RDS/DBDS\:getRdsStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::getRdsStatus (uint8_t  {\i INTACK}, uint8_t  {\i MTFIFO}, uint8_t  {\i STATUSONLY})}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the RDS status. Store the status in currentRdsStatus member. RDS COMMAND FM_RDS_STATUS. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 55 and 77\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i INTACK} \cell }{Interrupt Acknowledge; 0 = RDSINT status preserved. 1 = Clears RDSINT. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i MTFIFO} \cell }{0 = If FIFO not empty, read and remove oldest FIFO entry; 1 = Clear RDS Receive FIFO. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i STATUSONLY} \cell }{Determines if data should be removed from the RDS FIFO. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01550 \{\par
01551     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_command}}}
 rds_cmd;\par
01552     {\cf17 static} uint16_t lastFreq;\par
01553     {\cf20 // checking current FUNC (Am or FM)}\par
01554     {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 currentTune}}}
 != {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 FM_TUNE_FREQ}}}
)\par
01555         {\cf19 return};\par
01556 \par
01557     {\cf19 if} (lastFreq != {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMW" }{}}{\fldrslt {\cs37\ul\cf2 currentWorkFrequency}}}
)\par
01558     \{\par
01559         lastFreq = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMW" }{}}{\fldrslt {\cs37\ul\cf2 currentWorkFrequency}}}
;\par
01560         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMH" }{}}{\fldrslt {\cs37\ul\cf2 clearRdsBuffer2A}}}
();\par
01561         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMI" }{}}{\fldrslt {\cs37\ul\cf2 clearRdsBuffer2B}}}
();\par
01562         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMJ" }{}}{\fldrslt {\cs37\ul\cf2 clearRdsBuffer0A}}}
();\par
01563     \}\par
01564 \par
01565     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
01566 \par
01567     rds_cmd.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.INTACK = INTACK;\par
01568     rds_cmd.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.MTFIFO = MTFIFO;\par
01569     rds_cmd.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.STATUSONLY = STATUSONLY;\par
01570 \par
01571     Wire.beginTransmission({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
);\par
01572     Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACU" }{}}{\fldrslt {\cs37\ul\cf2 FM_RDS_STATUS}}}
);\par
01573     Wire.write(rds_cmd.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPA" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
);\par
01574     Wire.endTransmission();\par
01575 \par
01576     {\cf19 do}\par
01577     \{\par
01578         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
01579         {\cf20 // Gets response information}\par
01580         Wire.requestFrom({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
, 13);\par
01581         {\cf19 for} (uint8_t i = 0; i < 13; i++)\par
01582             {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPB" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[i] = Wire.read();\par
01583     \} {\cf19 while} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.ERR);\par
01584     delayMicroseconds(550);\par
01585 \}\par
}
{
\ql
References SI4735::clearRdsBuffer0A(), SI4735::clearRdsBuffer2A(), SI4735::clearRdsBuffer2B(), and SI4735::waitToSend().}\par
}
{\xe \v getRdsText\:FM RDS/DBDS}
{\xe \v FM RDS/DBDS\:getRdsText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * SI4735::getRdsText (void )}}
\par
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the RDS Text when the message is of the Group Type 2 version A. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
char* The string (char array) with the content (Text) received from group 2A \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01793 \{\par
01794 \par
01795     {\cf20 // Needs to get the "Text segment address code".}\par
01796     {\cf20 // Each message should be ended by the code 0D (Hex)}\par
01797 \par
01798     {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMO" }{}}{\fldrslt {\cs37\ul\cf2 rdsTextAdress2A}}}
 >= 16)\par
01799         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMO" }{}}{\fldrslt {\cs37\ul\cf2 rdsTextAdress2A}}}
 = 0;\par
01800 \par
01801     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 getNext4Block}}}
(&{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMK" }{}}{\fldrslt {\cs37\ul\cf2 rds_buffer2A}}}
[{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMO" }{}}{\fldrslt {\cs37\ul\cf2 rdsTextAdress2A}}}
 * 4]);\par
01802 \par
01803     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMO" }{}}{\fldrslt {\cs37\ul\cf2 rdsTextAdress2A}}}
 += 4;\par
01804 \par
01805     {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMK" }{}}{\fldrslt {\cs37\ul\cf2 rds_buffer2A}}}
;\par
01806 \}\par
}
{
\ql
References SI4735::getNext4Block(), SI4735::rds_buffer2A, and SI4735::rdsTextAdress2A.}\par
}
{\xe \v getRdsText0A\:FM RDS/DBDS}
{\xe \v FM RDS/DBDS\:getRdsText0A}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * SI4735::getRdsText0A (void )}}
\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the station name and other messages. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
char* should return a string with the station name. However, some stations send other kind of messages \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01817 \{\par
01818     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAS" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blockb}}}
 blkB;\par
01819 \par
01820     {\cf20 // getRdsStatus();}\par
01821 \par
01822     {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKO" }{}}{\fldrslt {\cs37\ul\cf2 getRdsReceived}}}
())\par
01823     \{\par
01824         {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 getRdsGroupType}}}
() == 0)\par
01825         \{\par
01826             {\cf20 // Process group type 0}\par
01827             blkB.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOX" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.highValue = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKBH;\par
01828             blkB.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOX" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.lowValue = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKBL;\par
01829 \par
01830             {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMQ" }{}}{\fldrslt {\cs37\ul\cf2 rdsTextAdress0A}}}
 = blkB.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPC" }{}}{\fldrslt {\cs37\ul\cf2 group0}}}
.address;\par
01831             {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMQ" }{}}{\fldrslt {\cs37\ul\cf2 rdsTextAdress0A}}}
 >= 0 && {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMQ" }{}}{\fldrslt {\cs37\ul\cf2 rdsTextAdress0A}}}
 < 4)\par
01832             \{\par
01833                 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 getNext2Block}}}
(&{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMM" }{}}{\fldrslt {\cs37\ul\cf2 rds_buffer0A}}}
[{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMQ" }{}}{\fldrslt {\cs37\ul\cf2 rdsTextAdress0A}}}
 * 2]);\par
01834                 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMM" }{}}{\fldrslt {\cs37\ul\cf2 rds_buffer0A}}}
[8] = {\cf23 '\\0'};\par
01835                 {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMM" }{}}{\fldrslt {\cs37\ul\cf2 rds_buffer0A}}}
;\par
01836             \}\par
01837         \}\par
01838     \}\par
01839     {\cf19 return} NULL;\par
01840 \}\par
}
{
\ql
References SI4735::getNext2Block(), SI4735::getRdsReceived(), SI4735::rds_buffer0A, and SI4735::rdsTextAdress0A.}\par
}
{\xe \v getRdsText2A\:FM RDS/DBDS}
{\xe \v FM RDS/DBDS\:getRdsText2A}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * SI4735::getRdsText2A (void )}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Text processed for the 2A group. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
char* string with the Text of the group A2 \par
 \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01850 \{\par
01851     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAS" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blockb}}}
 blkB;\par
01852 \par
01853     {\cf20 // getRdsStatus();}\par
01854     {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKO" }{}}{\fldrslt {\cs37\ul\cf2 getRdsReceived}}}
())\par
01855     \{\par
01856         {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 getRdsGroupType}}}
() == 2 {\cf20 /* && getRdsVersionCode() == 0 */})\par
01857         \{\par
01858             {\cf20 // Process group 2A}\par
01859             {\cf20 // Decode B block information}\par
01860             blkB.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOX" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.highValue = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKBH;\par
01861             blkB.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOX" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.lowValue = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKBL;\par
01862             {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMO" }{}}{\fldrslt {\cs37\ul\cf2 rdsTextAdress2A}}}
 = blkB.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPD" }{}}{\fldrslt {\cs37\ul\cf2 group2}}}
.address;\par
01863 \par
01864             {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMO" }{}}{\fldrslt {\cs37\ul\cf2 rdsTextAdress2A}}}
 >= 0 && {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMO" }{}}{\fldrslt {\cs37\ul\cf2 rdsTextAdress2A}}}
 < 16)\par
01865             \{\par
01866                 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 getNext4Block}}}
(&{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMK" }{}}{\fldrslt {\cs37\ul\cf2 rds_buffer2A}}}
[{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMO" }{}}{\fldrslt {\cs37\ul\cf2 rdsTextAdress2A}}}
 * 4]);\par
01867                 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMK" }{}}{\fldrslt {\cs37\ul\cf2 rds_buffer2A}}}
[63] = {\cf23 '\\0'};\par
01868                 {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMK" }{}}{\fldrslt {\cs37\ul\cf2 rds_buffer2A}}}
;\par
01869             \}\par
01870         \}\par
01871     \}\par
01872     {\cf19 return} NULL;\par
01873 \}\par
}
{
\ql
References SI4735::getNext4Block(), SI4735::getRdsReceived(), SI4735::rds_buffer2A, and SI4735::rdsTextAdress2A.}\par
}
{\xe \v getRdsText2B\:FM RDS/DBDS}
{\xe \v FM RDS/DBDS\:getRdsText2B}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * SI4735::getRdsText2B (void )}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Text processed for the 2B group. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
char* string with the Text of the group AB \par
 \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01883 \{\par
01884     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAS" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blockb}}}
 blkB;\par
01885 \par
01886     {\cf20 // getRdsStatus();}\par
01887     {\cf20 // if (getRdsReceived())}\par
01888     {\cf20 // \{}\par
01889     {\cf20 // if (getRdsNewBlockB())}\par
01890     {\cf20 // \{}\par
01891     {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 getRdsGroupType}}}
() == 2 {\cf20 /* && getRdsVersionCode() == 1 */})\par
01892     \{\par
01893         {\cf20 // Process group 2B}\par
01894         blkB.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOX" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.highValue = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKBH;\par
01895         blkB.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOX" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.lowValue = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKBL;\par
01896         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMP" }{}}{\fldrslt {\cs37\ul\cf2 rdsTextAdress2B}}}
 = blkB.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPD" }{}}{\fldrslt {\cs37\ul\cf2 group2}}}
.address;\par
01897         {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMP" }{}}{\fldrslt {\cs37\ul\cf2 rdsTextAdress2B}}}
 >= 0 && {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMP" }{}}{\fldrslt {\cs37\ul\cf2 rdsTextAdress2B}}}
 < 16)\par
01898         \{\par
01899             {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 getNext2Block}}}
(&{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAML" }{}}{\fldrslt {\cs37\ul\cf2 rds_buffer2B}}}
[{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMP" }{}}{\fldrslt {\cs37\ul\cf2 rdsTextAdress2B}}}
 * 2]);\par
01900             {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAML" }{}}{\fldrslt {\cs37\ul\cf2 rds_buffer2B}}}
;\par
01901         \}\par
01902     \}\par
01903     {\cf20 //  \}}\par
01904     {\cf20 // \}}\par
01905     {\cf19 return} NULL;\par
01906 \}\par
}
{
\ql
References SI4735::getNext2Block(), SI4735::rds_buffer2B, and SI4735::rdsTextAdress2B.}\par
}
{\xe \v getRdsTextSegmentAddress\:FM RDS/DBDS}
{\xe \v FM RDS/DBDS\:getRdsTextSegmentAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getRdsTextSegmentAddress (void )}}
\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the address of the text segment. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
2A - Each text segment in version 2A groups consists of four characters. A messages of this group can be have up to 64 characters.\par
2B - In version 2B groups, each text segment consists of only two characters. When the current RDS status is using this version, the maximum message length will be 32 characters.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
uint8_t the address of the text segment. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01672 \{\par
01673     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAS" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blockb}}}
 blkb;\par
01674     blkb.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOX" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.lowValue = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKBL;\par
01675     blkb.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOX" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.highValue = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKBH;\par
01676 \par
01677     {\cf19 return} blkb.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOY" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.content;\par
01678 \}\par
}
}
{\xe \v getRdsTime\:FM RDS/DBDS}
{\xe \v FM RDS/DBDS\:getRdsTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * SI4735::getRdsTime (void )}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the RDS time and date when the Group type is 4. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
char* a string with hh:mm +/- offset \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01916 \{\par
01917     {\cf20 // Under Test and construction}\par
01918     {\cf20 // Need to check the Group Type before.}\par
01919     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_date_time}}}
 dt;\par
01920 \par
01921     uint16_t minute;\par
01922     uint16_t hour;\par
01923 \par
01924     {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 getRdsGroupType}}}
() == 4)\par
01925     \{\par
01926         {\cf18 char} offset_sign;\par
01927         {\cf18 int} offset_h;\par
01928         {\cf18 int} offset_m;\par
01929 \par
01930         {\cf20 // uint16_t y, m, d;}\par
01931 \par
01932         dt.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPE" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[4] = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKBL;\par
01933         dt.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPE" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[5] = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKBH;\par
01934         dt.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPE" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[2] = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKCL;\par
01935         dt.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPE" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[3] = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKCH;\par
01936         dt.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPE" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[0] = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKDL;\par
01937         dt.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPE" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[1] = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKDH;\par
01938 \par
01939         {\cf20 // Unfortunately it was necessary to wotk well on the GCC compiler on 32-bit}\par
01940         {\cf20 // platforms. See si47x_rds_date_time (typedef union) and CGG \'93Crosses boundary\'94 issue/features.}\par
01941         {\cf20 // Now it is working on Atmega328, STM32, Arduino DUE, ESP32 and more.}\par
01942         minute = (dt.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.minute2 << 2) | dt.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.minute1;\par
01943         hour = (dt.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.hour2 << 4) | dt.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.hour1;\par
01944 \par
01945         offset_sign = (dt.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.offset_sense == 1) ? {\cf23 '+'} : {\cf23 '-'};\par
01946         offset_h = (dt.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.offset * 30) / 60;\par
01947         offset_m = (dt.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.offset * 30) - (offset_h * 60);\par
01948         {\cf20 // sprintf(rds_time, "%02u:%02u %c%02u:%02u", dt.refined.hour, dt.refined.minute, offset_sign, offset_h, offset_m);}\par
01949         sprintf({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMN" }{}}{\fldrslt {\cs37\ul\cf2 rds_time}}}
, {\cf22 "%02u:%02u %c%02u:%02u"}, hour, minute, offset_sign, offset_h, offset_m);\par
01950 \par
01951         {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMN" }{}}{\fldrslt {\cs37\ul\cf2 rds_time}}}
;\par
01952     \}\par
01953 \par
01954     {\cf19 return} NULL;\par
01955 \}\par
}
{
\ql
References SI4735::rds_time.}\par
}
{\xe \v getRdsVersionCode\:FM RDS/DBDS}
{\xe \v FM RDS/DBDS\:getRdsVersionCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SI4735::getRdsVersionCode (void )}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the version code (extracted from the Block B) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0=A or 1=B \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01688 \{\par
01689     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAS" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blockb}}}
 blkb;\par
01690 \par
01691     blkb.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOX" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.lowValue = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKBL;\par
01692     blkb.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOX" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.highValue = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 currentRdsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.BLOCKBH;\par
01693 \par
01694     {\cf19 return} blkb.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOY" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.versionCode;\par
01695 \}\par
}
}
{\xe \v RdsInit\:FM RDS/DBDS}
{\xe \v FM RDS/DBDS\:RdsInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::RdsInit ()}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the control member variables for RDS. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RDS implementation\par
This method is called by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 setRdsConfig()}}}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 setRdsConfig()}}} \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01389 \{\par
01390     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMH" }{}}{\fldrslt {\cs37\ul\cf2 clearRdsBuffer2A}}}
();\par
01391     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMI" }{}}{\fldrslt {\cs37\ul\cf2 clearRdsBuffer2B}}}
();\par
01392     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMJ" }{}}{\fldrslt {\cs37\ul\cf2 clearRdsBuffer0A}}}
();\par
01393     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMO" }{}}{\fldrslt {\cs37\ul\cf2 rdsTextAdress2A}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMP" }{}}{\fldrslt {\cs37\ul\cf2 rdsTextAdress2B}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 lastTextFlagAB}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMQ" }{}}{\fldrslt {\cs37\ul\cf2 rdsTextAdress0A}}}
 = 0;\par
01394 \}\par
}
{
\ql
References SI4735::clearRdsBuffer0A(), SI4735::clearRdsBuffer2A(), and SI4735::clearRdsBuffer2B().}\par
{
\ql
Referenced by SI4735::setRdsConfig().}\par
}
{\xe \v setRdsConfig\:FM RDS/DBDS}
{\xe \v FM RDS/DBDS\:setRdsConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setRdsConfig (uint8_t  {\i RDSEN}, uint8_t  {\i BLETHA}, uint8_t  {\i BLETHB}, uint8_t  {\i BLETHC}, uint8_t  {\i BLETHD})}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP3 - RDS FIFO Used; Number of groups remaining in the RDS FIFO (0 if empty). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets RDS property (FM_RDS_CONFIG)\par
Configures RDS settings to enable RDS processing (RDSEN) and set RDS block error thresholds.\par
When a RDS Group is received, all block errors must be less than or equal the associated block\par
error threshold for the group to be stored in the RDS FIFO.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; page 104\par
}}IMPORTANT: All block errors must be less than or equal the associated block error threshold for the group to be stored in the RDS FIFO. 0 = No errors. 1 = 1\'962 bit errors detected and corrected. 2 = 3\'965 bit errors detected and corrected. 3 = Uncorrectable. Recommended Block Error Threshold options: 2,2,2,2 = No group stored if any errors are uncorrected. 3,3,3,3 = Group stored regardless of errors. 0,0,0,0 = No group stored containing corrected or uncorrected errors. 3,2,3,3 = Group stored with corrected errors on B, regardless of errors on A, C, or D.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{RDSEN RDS Processing Enable; 1 = RDS processing enabled. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{BLETHA Block Error Threshold BLOCKA. \par
 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{BLETHB Block Error Threshold BLOCKB. \par
 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{BLETHC Block Error Threshold BLOCKC. \par
 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{BLETHD Block Error Threshold BLOCKD. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01462 \{\par
01463     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 si47x_property}}}
 property;\par
01464     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAQ" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_config}}}
 config;\par
01465 \par
01466     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
01467 \par
01468     {\cf20 // Set property value}\par
01469     {\cf17 property}.value = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 FM_RDS_CONFIG}}}
;\par
01470 \par
01471     {\cf20 // Arguments}\par
01472     config.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPG" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.RDSEN = RDSEN;\par
01473     config.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPG" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.BLETHA = BLETHA;\par
01474     config.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPG" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.BLETHB = BLETHB;\par
01475     config.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPG" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.BLETHC = BLETHC;\par
01476     config.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPG" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.BLETHD = BLETHD;\par
01477     config.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPG" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.DUMMY1 = 0;\par
01478 \par
01479     Wire.beginTransmission({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
);\par
01480     Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 SET_PROPERTY}}}
);\par
01481     Wire.write(0x00);                  {\cf20 // Always 0x00 (I need to check it)}\par
01482     Wire.write(property.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOE" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.byteHigh); {\cf20 // Send property - High byte - most significant first}\par
01483     Wire.write(property.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOE" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.byteLow);  {\cf20 // Low byte}\par
01484     Wire.write(config.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPH" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[1]);         {\cf20 // Send the argments. Most significant first}\par
01485     Wire.write(config.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPH" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[0]);\par
01486     Wire.endTransmission();\par
01487     delayMicroseconds(550);\par
01488 \par
01489     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RdsInit}}}
(); \par
01490 \}\par
}
{
\ql
References SI4735::RdsInit(), and SI4735::waitToSend().}\par
}
{\xe \v setRdsIntSource\:FM RDS/DBDS}
{\xe \v FM RDS/DBDS\:setRdsIntSource}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setRdsIntSource (uint8_t  {\i RDSNEWBLOCKB}, uint8_t  {\i RDSNEWBLOCKA}, uint8_t  {\i RDSSYNCFOUND}, uint8_t  {\i RDSSYNCLOST}, uint8_t  {\i RDSRECV})}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configures interrupt related to RDS. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use this method if want to use interrupt\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; page 103\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i RDSRECV} \cell }{If set, generate RDSINT when RDS FIFO has at least FM_RDS_INT_FIFO_COUNT entries. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i RDSSYNCLOST} \cell }{If set, generate RDSINT when RDS loses synchronization. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i RDSSYNCFOUND} \cell }{set, generate RDSINT when RDS gains synchronization. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i RDSNEWBLOCKA} \cell }{If set, generate an interrupt when Block A data is found or subsequently changed \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i RDSNEWBLOCKB} \cell }{If set, generate an interrupt when Block B data is found or subsequently changed \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01508 \{\par
01509     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 si47x_property}}}
 property;\par
01510     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_int_source}}}
 rds_int_source;\par
01511 \par
01512     {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 currentTune}}}
 != {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 FM_TUNE_FREQ}}}
)\par
01513         {\cf19 return};\par
01514 \par
01515     rds_int_source.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPI" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.RDSNEWBLOCKB = RDSNEWBLOCKB;\par
01516     rds_int_source.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPI" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.RDSNEWBLOCKA = RDSNEWBLOCKA;\par
01517     rds_int_source.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPI" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.RDSSYNCFOUND = RDSSYNCFOUND;\par
01518     rds_int_source.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPI" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.RDSSYNCLOST = RDSSYNCLOST;\par
01519     rds_int_source.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPI" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.RDSRECV = RDSRECV;\par
01520     rds_int_source.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPI" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.DUMMY1 = 0;\par
01521     rds_int_source.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPI" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.DUMMY2 = 0;\par
01522 \par
01523     {\cf17 property}.value = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 FM_RDS_INT_SOURCE}}}
;\par
01524 \par
01525     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
01526 \par
01527     Wire.beginTransmission({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
);\par
01528     Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 SET_PROPERTY}}}
);\par
01529     Wire.write(0x00);                  {\cf20 // Always 0x00 (I need to check it)}\par
01530     Wire.write(property.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOE" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.byteHigh); {\cf20 // Send property - High byte - most significant first}\par
01531     Wire.write(property.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOE" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.byteLow);  {\cf20 // Low byte}\par
01532     Wire.write(rds_int_source.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPJ" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[1]); {\cf20 // Send the argments. Most significant first}\par
01533     Wire.write(rds_int_source.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPJ" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[0]);\par
01534     Wire.endTransmission();\par
01535     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
01536 \}\par
}
{
\ql
References SI4735::waitToSend().}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Frequency and Si47XX device status\par \pard\plain 
{\tc\tcl2 \v Frequency and Si47XX device status}
{\xe \v Frequency and Si47XX device status}
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGX" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getFrequency}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current frequency of the Si4735 (AM or FM) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGY" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getCurrentFrequency}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current frequency. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGW" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getStatus}}}
 (uint8_t, uint8_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the Si47XX device. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getStatus}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tune the receiver. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHL" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getAutomaticGainControl}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Queries Automatic Gain Control STATUS. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHT" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setAutomaticGainControl}}}
 (uint8_t AGCDIS, uint8_t AGCIDX)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Automatic Gain Control setup. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHN" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setAvcAmMaxGain}}}
 (uint8_t gain)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the maximum gain for automatic volume control. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHU" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getCurrentReceivedSignalQuality}}}
 (uint8_t INTACK)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Overrides the AGC setting. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHV" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getCurrentReceivedSignalQuality}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Queries the status of the Received Signal Quality (RSQ) of the current channel (FM_RSQ_STATUS) }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v getAutomaticGainControl\:Frequency and Si47XX device status}
{\xe \v Frequency and Si47XX device status\:getAutomaticGainControl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::getAutomaticGainControl ()}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Queries Automatic Gain Control STATUS. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
After call this method, you can call isAgcEnabled to know the AGC status and getAgcGainIndex to know the gain index value.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; For FM page 80; for AM page 142. \par
AN332 REV 0.8 Universal Programming Guide Amendment for SI4735-D60 SSB and NBFM patches; page 18. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01096 \{\par
01097     uint8_t cmd;\par
01098 \par
01099     {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 currentTune}}}
 == {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 FM_TUNE_FREQ}}}
)\par
01100     \{ {\cf20 // FM TUNE}\par
01101         cmd = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACR" }{}}{\fldrslt {\cs37\ul\cf2 FM_AGC_STATUS}}}
;\par
01102     \}\par
01103     {\cf19 else}\par
01104     \{ {\cf20 // AM TUNE - SAME COMMAND used on SSB mode}\par
01105         cmd = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADL" }{}}{\fldrslt {\cs37\ul\cf2 AM_AGC_STATUS}}}
;\par
01106     \}\par
01107 \par
01108     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
01109 \par
01110     Wire.beginTransmission({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
);\par
01111     Wire.write(cmd);\par
01112     Wire.endTransmission();\par
01113 \par
01114     {\cf19 do}\par
01115     \{\par
01116         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
01117         Wire.requestFrom({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
, 3);\par
01118         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANG" }{}}{\fldrslt {\cs37\ul\cf2 currentAgcStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOM" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[0] = Wire.read(); {\cf20 // STATUS response}\par
01119         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANG" }{}}{\fldrslt {\cs37\ul\cf2 currentAgcStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOM" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[1] = Wire.read(); {\cf20 // RESP 1}\par
01120         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANG" }{}}{\fldrslt {\cs37\ul\cf2 currentAgcStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOM" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[2] = Wire.read(); {\cf20 // RESP 2}\par
01121     \} {\cf19 while} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANG" }{}}{\fldrslt {\cs37\ul\cf2 currentAgcStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANL" }{}}{\fldrslt {\cs37\ul\cf2 refined}}}
.ERR);    {\cf20 // If error, try get AGC status again.}\par
01122 \}\par
}
{
\ql
References SI4735::waitToSend().}\par
}
{\xe \v getCurrentFrequency\:Frequency and Si47XX device status}
{\xe \v Frequency and Si47XX device status\:getCurrentFrequency}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t SI4735::getCurrentFrequency ()}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current frequency. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current frequency saved in memory.\par
Unlike getFrequency, this method gets the current frequency recorded after the last setFrequency command.\par
This method avoids bus traffic and CI processing.\par
However, you can not get others status information like RSSI.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGX" }{}}{\fldrslt {\cs37\ul\cf2 getFrequency()}}} \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01032 \{\par
01033     {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMW" }{}}{\fldrslt {\cs37\ul\cf2 currentWorkFrequency}}}
;\par
01034 \}\par
}
}
{\xe \v getCurrentReceivedSignalQuality\:Frequency and Si47XX device status}
{\xe \v Frequency and Si47XX device status\:getCurrentReceivedSignalQuality}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::getCurrentReceivedSignalQuality (uint8_t  {\i INTACK})}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Overrides the AGC setting. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Queries the status of the Received Signal Quality (RSQ) of the current channel.\par
This method sould be called berore call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 getCurrentRSSI()}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHX" }{}}{\fldrslt {\cs37\ul\cf2 getCurrentSNR()}}} etc. Command FM_RSQ_STATUS\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 75 and 141\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i INTACK} \cell }{Interrupt Acknowledge. 0 = Interrupt status preserved; 1 = Clears RSQINT, BLENDINT, SNRHINT, SNRLINT, RSSIHINT, RSSILINT, MULTHINT, MULTLINT. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01196 \{\par
01197         uint8_t arg;\par
01198         uint8_t cmd;\par
01199         {\cf18 int} sizeResponse;\par
01200 \par
01201         {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 currentTune}}}
 == {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 FM_TUNE_FREQ}}}
)\par
01202         \{ {\cf20 // FM TUNE}\par
01203             cmd = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACT" }{}}{\fldrslt {\cs37\ul\cf2 FM_RSQ_STATUS}}}
;\par
01204             sizeResponse = 8; {\cf20 // Check it}\par
01205         \}\par
01206         {\cf19 else}\par
01207         \{ {\cf20 // AM TUNE}\par
01208             cmd = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADK" }{}}{\fldrslt {\cs37\ul\cf2 AM_RSQ_STATUS}}}
;\par
01209             sizeResponse = 6; {\cf20 // Check it}\par
01210         \}\par
01211 \par
01212         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
01213 \par
01214         arg = INTACK;\par
01215         Wire.beginTransmission({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
);\par
01216         Wire.write(cmd);\par
01217         Wire.write(arg); {\cf20 // send B00000001}\par
01218         Wire.endTransmission();\par
01219 \par
01220         {\cf20 // Check it}\par
01221         {\cf20 // do}\par
01222         {\cf20 //\{}\par
01223             {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
01224             Wire.requestFrom({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
, sizeResponse);\par
01225             {\cf20 // Gets response information}\par
01226             {\cf19 for} (uint8_t i = 0; i < sizeResponse; i++)\par
01227                 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 currentRqsStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAON" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[i] = Wire.read();\par
01228         {\cf20 //\} while (currentRqsStatus.resp.ERR); // Try again if error found}\par
01229 \}\par
}
{
\ql
References SI4735::waitToSend().}\par
}
{\xe \v getCurrentReceivedSignalQuality\:Frequency and Si47XX device status}
{\xe \v Frequency and Si47XX device status\:getCurrentReceivedSignalQuality}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::getCurrentReceivedSignalQuality (void )}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Queries the status of the Received Signal Quality (RSQ) of the current channel (FM_RSQ_STATUS) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 75 and 141\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i INTACK} \cell }{Interrupt Acknowledge. 0 = Interrupt status preserved; 1 = Clears RSQINT, BLENDINT, SNRHINT, SNRLINT, RSSIHINT, RSSILINT, MULTHINT, MULTLINT. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01243 \{\par
01244     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHV" }{}}{\fldrslt {\cs37\ul\cf2 getCurrentReceivedSignalQuality}}}
(0);\par
01245 \}\par
}
}
{\xe \v getFrequency\:Frequency and Si47XX device status}
{\xe \v Frequency and Si47XX device status\:getFrequency}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t SI4735::getFrequency (void )}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current frequency of the Si4735 (AM or FM) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device Status Information\par
The method status do it an more. See getStatus below.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 73 (FM) and 139 (AM) \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01009 \{\par
01010     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 si47x_frequency}}}
 freq;\par
01011     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 getStatus}}}
(0, 1);\par
01012 \par
01013     freq.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANX" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.FREQL = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAND" }{}}{\fldrslt {\cs37\ul\cf2 currentStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANK" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.READFREQL;\par
01014     freq.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANX" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.FREQH = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAND" }{}}{\fldrslt {\cs37\ul\cf2 currentStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANK" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.READFREQH;\par
01015 \par
01016     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMW" }{}}{\fldrslt {\cs37\ul\cf2 currentWorkFrequency}}}
 = freq.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANW" }{}}{\fldrslt {\cs37\ul\cf2 value}}}
;\par
01017     {\cf19 return} freq.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANW" }{}}{\fldrslt {\cs37\ul\cf2 value}}}
;\par
01018 \}\par
}
}
{\xe \v getStatus\:Frequency and Si47XX device status}
{\xe \v Frequency and Si47XX device status\:getStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::getStatus ()}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tune the receiver. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the Si4735 (AM or FM)\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 73 (FM) and 139 (AM) \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01080 \{\par
01081     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 getStatus}}}
(0, 1);\par
01082 \}\par
}
}
{\xe \v getStatus\:Frequency and Si47XX device status}
{\xe \v Frequency and Si47XX device status\:getStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::getStatus (uint8_t  {\i INTACK}, uint8_t  {\i CANCEL})}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the Si47XX device. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the Si4735 (AM or FM)\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 73 (FM) and 139 (AM)\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{INTACK Seek/Tune Interrupt Clear. If set, clears the seek/tune complete interrupt status indicator; \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{CANCEL Cancel seek. If set, aborts a seek currently in progress; \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01047 \{\par
01048     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 si47x_tune_status}}}
 status;\par
01049     uint8_t cmd = ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 currentTune}}}
 == {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 FM_TUNE_FREQ}}}
) ? {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 FM_TUNE_STATUS}}}
 : {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 AM_TUNE_STATUS}}}
;\par
01050 \par
01051     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
01052 \par
01053     status.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOO" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.INTACK = INTACK;\par
01054     status.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOO" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.CANCEL = CANCEL;\par
01055 \par
01056     Wire.beginTransmission({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
);\par
01057     Wire.write(cmd);\par
01058     Wire.write(status.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOP" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
);\par
01059     Wire.endTransmission();\par
01060     {\cf20 // Reads the current status (including current frequency).}\par
01061     {\cf19 do}\par
01062     \{\par
01063         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
01064         Wire.requestFrom({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
, 8); {\cf20 // Check it}\par
01065         {\cf20 // Gets response information}\par
01066         {\cf19 for} (uint8_t i = 0; i < 8; i++)\par
01067             {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAND" }{}}{\fldrslt {\cs37\ul\cf2 currentStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOQ" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[i] = Wire.read();\par
01068     \} {\cf19 while} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAND" }{}}{\fldrslt {\cs37\ul\cf2 currentStatus}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANK" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.ERR); {\cf20 // If error, try it again}\par
01069     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
01070 \}\par
}
{
\ql
References SI4735::waitToSend().}\par
}
{\xe \v setAutomaticGainControl\:Frequency and Si47XX device status}
{\xe \v Frequency and Si47XX device status\:setAutomaticGainControl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setAutomaticGainControl (uint8_t  {\i AGCDIS}, uint8_t  {\i AGCIDX})}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Automatic Gain Control setup. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If FM, overrides AGC setting by disabling the AGC and forcing the LNA to have a certain gain that ranges between 0 (minimum attenuation) and 26 (maximum attenuation).\par
If AM/SSB, Overrides the AM AGC setting by disabling the AGC and forcing the gain index that ranges between 0 (minimum attenuation) and 37+ATTN_BACKUP (maximum attenuation).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; For FM page 81; for AM page 143\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{AGCDIS This param selects whether the AGC is enabled or disabled (0 = AGC enabled; 1 = AGC disabled); \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{AGCIDX AGC Index (0 = Minimum attenuation (max gain); 1 \'96 36 = Intermediate attenuation); if >greater than 36 - Maximum attenuation (min gain) ). \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01141 \{\par
01142     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 si47x_agc_overrride}}}
 agc;\par
01143 \par
01144     uint8_t cmd;\par
01145 \par
01146     cmd = ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 currentTune}}}
 == {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 FM_TUNE_FREQ}}}
) ? {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACS" }{}}{\fldrslt {\cs37\ul\cf2 FM_AGC_OVERRIDE}}}
 : {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADM" }{}}{\fldrslt {\cs37\ul\cf2 AM_AGC_OVERRIDE}}}
;\par
01147 \par
01148     agc.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOR" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.AGCDIS = AGCDIS;\par
01149     agc.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOR" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.AGCIDX = AGCIDX;\par
01150 \par
01151     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
01152 \par
01153     Wire.beginTransmission({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
);\par
01154     Wire.write(cmd);\par
01155     Wire.write(agc.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOS" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[0]);\par
01156     Wire.write(agc.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOS" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[1]);\par
01157     Wire.endTransmission();\par
01158 \par
01159     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
01160 \}\par
}
{
\ql
References SI4735::waitToSend().}\par
}
{\xe \v setAvcAmMaxGain\:Frequency and Si47XX device status}
{\xe \v Frequency and Si47XX device status\:setAvcAmMaxGain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setAvcAmMaxGain (uint8_t  {\i gain})}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the maximum gain for automatic volume control. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If no parameter is sent, it will be consider 48dB.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; page 152 \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHM" }{}}{\fldrslt {\cs37\ul\cf2 setAvcAmMaxGain()}}}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{gain Select a value between 12 and 192. Defaul value 48dB. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01174                                           \{\par
01175     uint16_t aux;\par
01176     aux = ( gain > 12 && gain < 193 )? (gain * 340) : (48 * 340);\par
01177     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMZ" }{}}{\fldrslt {\cs37\ul\cf2 currentAvcAmMaxGain}}}
 =  gain;\par
01178     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 sendProperty}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEA" }{}}{\fldrslt {\cs37\ul\cf2 AM_AUTOMATIC_VOLUME_CONTROL_MAX_GAIN}}}
, aux);\par
01179 \}\par
}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Host and slave MCU setup\par \pard\plain 
{\tc\tcl2 \v Host and slave MCU setup}
{\xe \v Host and slave MCU setup}
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::reset}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset the SI473X \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::waitToSend}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset the Si47XX device. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setPowerUp}}}
 (uint8_t CTSIEN, uint8_t GPO2OEN, uint8_t PATCH, uint8_t XOSCEN, uint8_t FUNC, uint8_t OPMODE)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Power Up parameters for si473X. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGS" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::radioPowerUp}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configure the Si47XX to power it up. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGD" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::analogPowerUp}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Power the receiver up. Call setPowerUp before call this method. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGT" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::powerDown}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deprecated. Use radioPowerUp. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v analogPowerUp\:Host and slave MCU setup}
{\xe \v Host and slave MCU setup\:analogPowerUp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::analogPowerUp (void )}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Power the receiver up. Call setPowerUp before call this method. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
You have to call setPowerUp method before.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "deprecated__deprecated000001" }{}}{\fldrslt {\cs37\ul\cf2 Deprecated}}}:\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid Consider use radioPowerUp instead\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setPowerUp()}}} \par
Si47XX PROGRAMMING GUIDE; AN332; pages 64, 129 \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00266 \{\par
00267     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGS" }{}}{\fldrslt {\cs37\ul\cf2 radioPowerUp}}}
();\par
00268 \}\par
}
{
\ql
References SI4735::radioPowerUp().}\par
}
{\xe \v powerDown\:Host and slave MCU setup}
{\xe \v Host and slave MCU setup\:powerDown}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::powerDown (void )}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deprecated. Use radioPowerUp. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Moves the device from powerup to powerdown mode.\par
After Power Down command, only the Power Up command is accepted.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 67, 132 \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGS" }{}}{\fldrslt {\cs37\ul\cf2 radioPowerUp()}}} \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00281 \{\par
00282     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
00283     Wire.beginTransmission({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
);\par
00284     Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACK" }{}}{\fldrslt {\cs37\ul\cf2 POWER_DOWN}}}
);\par
00285     Wire.endTransmission();\par
00286     delayMicroseconds(2500);\par
00287 \}\par
}
{
\ql
References SI4735::waitToSend().}\par
{
\ql
Referenced by SI4735::queryLibraryId(), SI4735::setAM(), and SI4735::setFM().}\par
}
{\xe \v radioPowerUp\:Host and slave MCU setup}
{\xe \v Host and slave MCU setup\:radioPowerUp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::radioPowerUp (void )}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configure the Si47XX to power it up. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Powerup the Si47XX.\par
Before call this function call the setPowerUp to set up the parameters.\par
Parameters you have to set up with setPowerUp\par
CTSIEN Interrupt anabled or disabled; GPO2OEN GPO2 Output Enable or disabled; PATCH Boot normally or patch; XOSCEN Use external crystal oscillator; FUNC defaultFunction = 0 = FM Receive; 1 = AM (LW/MW/SW) Receiver. OPMODE SI473X_ANALOG_AUDIO (B00000101) or SI473X_DIGITAL_AUDIO (B00001011)\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setPowerUp()}}} \par
Si47XX PROGRAMMING GUIDE; AN332; pages 64, 129 \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00241                               \{\par
00242     {\cf20 // delayMicroseconds(1000);}\par
00243     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
00244     Wire.beginTransmission({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
);\par
00245     Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACI" }{}}{\fldrslt {\cs37\ul\cf2 POWER_UP}}}
);\par
00246     Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 powerUp}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANR" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[0]); {\cf20 // Content of ARG1}\par
00247     Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 powerUp}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANR" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[1]); {\cf20 // COntent of ARG2}\par
00248     Wire.endTransmission();\par
00249     {\cf20 // Delay at least 500 ms between powerup command and first tune command to wait for}\par
00250     {\cf20 // the oscillator to stabilize if XOSCEN is set and crystal is used as the RCLK.}\par
00251     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
00252     delay(10);\par
00253 \}\par
}
{
\ql
References SI4735::waitToSend().}\par
{
\ql
Referenced by SI4735::analogPowerUp(), SI4735::setAM(), SI4735::setFM(), SI4735::setSSB(), and SI4735::setup().}\par
}
{\xe \v reset\:Host and slave MCU setup}
{\xe \v Host and slave MCU setup\:reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::reset (void )}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset the SI473X \par
 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00151 \{\par
00152     pinMode({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 resetPin}}}
, OUTPUT);\par
00153     delay(10);\par
00154     digitalWrite({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 resetPin}}}
, LOW);\par
00155     delay(10);\par
00156     digitalWrite({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 resetPin}}}
, HIGH);\par
00157     delay(10);\par
00158 \}\par
}
{
\ql
Referenced by SI4735::setup(), and SI4735::ssbSetup().}\par
}
{\xe \v setPowerUp\:Host and slave MCU setup}
{\xe \v Host and slave MCU setup\:setPowerUp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setPowerUp (uint8_t  {\i CTSIEN}, uint8_t  {\i GPO2OEN}, uint8_t  {\i PATCH}, uint8_t  {\i XOSCEN}, uint8_t  {\i FUNC}, uint8_t  {\i OPMODE})}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Power Up parameters for si473X. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use this method to chenge the defaul behavior of the Si473X. Use it before PowerUp()\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 65 and 129\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{CTSIEN sets Interrupt anabled or disabled (1 = anabled and 0 = disabled ) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{GPO2OEN sets GP02 Si473X pin enabled (1 = anabled and 0 = disabled ) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{PATCH Used for firmware patch updates. Use it always 0 here. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{XOSCEN sets external Crystal enabled or disabled \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{FUNC sets the receiver function have to be used [0 = FM Receive; 1 = AM (LW/MW/SW) and SSB (if SSB patch apllied)] \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{OPMODE set the kind of audio mode you want to use. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00195 \{\par
00196     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 powerUp}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.CTSIEN = CTSIEN;   {\cf20 // 1 -> Interrupt anabled;}\par
00197     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 powerUp}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.GPO2OEN = GPO2OEN; {\cf20 // 1 -> GPO2 Output Enable;}\par
00198     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 powerUp}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.PATCH = PATCH;     {\cf20 // 0 -> Boot normally;}\par
00199     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 powerUp}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.XOSCEN = XOSCEN;   {\cf20 // 1 -> Use external crystal oscillator;}\par
00200     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 powerUp}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.FUNC = FUNC;       {\cf20 // 0 = FM Receive; 1 = AM/SSB (LW/MW/SW) Receiver.}\par
00201     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 powerUp}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.OPMODE = OPMODE;   {\cf20 // 0x5 = 00000101 = Analog audio outputs (LOUT/ROUT).}\par
00202 \par
00203     {\cf20 // Set the current tuning frequancy mode 0X20 = FM and 0x40 = AM (LW/MW/SW)}\par
00204     {\cf20 // See See Si47XX PROGRAMMING GUIDE; AN332; pages 55 and 124}\par
00205 \par
00206     {\cf19 if} (FUNC == 0)\par
00207     \{\par
00208         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 currentTune}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 FM_TUNE_FREQ}}}
;\par
00209         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.FREEZE = 1;\par
00210     \}\par
00211     {\cf19 else}\par
00212     \{\par
00213         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 currentTune}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADH" }{}}{\fldrslt {\cs37\ul\cf2 AM_TUNE_FREQ}}}
;\par
00214         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.FREEZE = 0;\par
00215     \}\par
00216     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.FAST = 1;\par
00217     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.DUMMY1 = 0;\par
00218     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.ANTCAPH = 0;\par
00219     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.ANTCAPL = 1;\par
00220 \}\par
}
}
{\xe \v waitToSend\:Host and slave MCU setup}
{\xe \v Host and slave MCU setup\:waitToSend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::waitToSend (void )}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset the Si47XX device. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wait for the si473x is ready (Clear to Send (CTS) status bit have to be 1). \par
This function should be used before sending any command to a SI47XX device.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 63, 128 \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00170 \{\par
00171     {\cf19 do}\par
00172     \{\par
00173         delayMicroseconds({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGC" }{}}{\fldrslt {\cs37\ul\cf2 MIN_DELAY_WAIT_SEND_LOOP}}}
); {\cf20 // Need check the minimum value.}\par
00174         Wire.requestFrom({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
, 1);\par
00175     \} {\cf19 while} (!(Wire.read() & B10000000));\par
00176 \}\par
}
{
\ql
Referenced by SI4735::downloadPatch(), SI4735::getAutomaticGainControl(), SI4735::getCurrentReceivedSignalQuality(), SI4735::getFirmware(), SI4735::getRdsStatus(), SI4735::getStatus(), SI4735::patchPowerUp(), SI4735::powerDown(), SI4735::queryLibraryId(), SI4735::radioPowerUp(), SI4735::seekStation(), SI4735::sendProperty(), SI4735::sendSSBModeProperty(), SI4735::setAutomaticGainControl(), SI4735::setBandwidth(), SI4735::setFrequency(), SI4735::setRdsConfig(), SI4735::setRdsIntSource(), SI4735::setSSBBfo(), and SI4735::ssbPowerUp().}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RDS Data types\par \pard\plain 
{\tc\tcl2 \v RDS Data types}
{\xe \v RDS Data types}
{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rqs_status}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Radio Signal Quality data representation. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABL" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rqs_status.resp}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_command}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data type for RDS Status command and response information. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_command.arg}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_status}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Response data type for current channel and reads an entry from the RDS FIFO. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_status.resp}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_int_source}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FM_RDS_INT_SOURCE property data type. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_int_source.refined}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAQ" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_config}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data type for FM_RDS_CONFIG Property. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAQ" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_config.arg}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAR" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blocka}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Block A data type. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAR" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABQ" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blocka.refined}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABR" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blocka.raw}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAS" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blockb}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Block B data type. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAS" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABS" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blockb.group0}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blockb.group2}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blockb.refined}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABV" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blockb.raw}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_date_time}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABW" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_date_time.refined}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structure Documentation\par
\pard\plain 
{\xe \v si47x_rqs_status}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union si47x_rqs_status\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Radio Signal Quality data representation. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data type for status information about the received signal quality (FM_RSQ_STATUS and AM_RSQ_STATUS)\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 75 and \par
}}}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
\cell }{raw[8]\cell }{\cell }{\row }
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABL" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rqs_status}}}
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
\cell }{resp\cell }{\cell }{\row }
}
{\xe \v si47x_rqs_status.resp}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_rqs_status.resp\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
\cell }{AFCRL: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Valid Channel. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
\cell }{BLENDINT: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
\cell }{CTS: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
\cell }{DUMMY1: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
\cell }{DUMMY2: 2\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
\cell }{DUMMY3: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multipath Detect High. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
\cell }{DUMMY4: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AFC Rail Indicator. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
\cell }{DUMMY5: 4\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Soft Mute Indicator. Indicates soft mute is engaged. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
\cell }{ERR: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
\cell }{FREQOFF\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP6 - Contains the current multipath metric. (0 = no multipath; 100 = full multipath) }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
\cell }{MULT\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP5 - Contains the current SNR metric (0\'96127 dB). }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
\cell }{MULTHINT: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multipath Detect Low. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
\cell }{MULTLINT: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SNR Detect High. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
\cell }{PILOT: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates amount of stereo blend in% (100 = full stereo, 0 = full mono). }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
\cell }{RDSINT: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
\cell }{RSQINT: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
\cell }{RSSI\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates stereo pilot presence. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
\cell }{RSSIHINT: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSI Detect Low. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
\cell }{RSSIILINT: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
\cell }{SMUTE: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
\cell }{SNR\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP4 - Contains the current receive signal strength (0\'E2\'80\'93127 dB\'CE\'BCV). }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
\cell }{SNRHINT: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SNR Detect Low. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
\cell }{SNRLINT: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSI Detect High. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
\cell }{STBLEND: 7\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
\cell }{STCINT: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
\cell }{VALID: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Blend Detect Interrupt. }\cell }{\row }
}
{\xe \v si47x_rds_command}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union si47x_rds_command\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data type for RDS Status command and response information. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 77 and 78 \par
Also {\field {\*\fldinst { HYPERLINK "https://en.wikipedia.org/wiki/Radio_Data_System" }{}}{\fldrslt {\cs37\ul\cf2 https://en.wikipedia.org/wiki/Radio_Data_System}}}
 \par
}}}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_command}}}
{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
\cell }{arg\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
\cell }{raw\cell }{\cell }{\row }
}
{\xe \v si47x_rds_command.arg}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_rds_command.arg\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
\cell }{dummy: 5\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
\cell }{INTACK: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
\cell }{MTFIFO: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
\cell }{STATUSONLY: 1\cell }{\cell }{\row }
}
{\xe \v si47x_rds_status}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union si47x_rds_status\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Response data type for current channel and reads an entry from the RDS FIFO. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 77 and 78 \par
}}}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
\cell }{raw[13]\cell }{\cell }{\row }
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_status}}}
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
\cell }{resp\cell }{\cell }{\row }
}
{\xe \v si47x_rds_status.resp}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_rds_status.resp\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
\cell }{BLEA: 2\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
\cell }{BLEB: 2\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
\cell }{BLEC: 2\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
\cell }{BLED: 2\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP11 - RDS Block D; LOW byte. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
\cell }{BLOCKAH\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP3 - RDS FIFO Used; Number of groups remaining in the RDS FIFO (0 if empty). }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
\cell }{BLOCKAL\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP4 - RDS Block A; HIGH byte. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
\cell }{BLOCKBH\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP5 - RDS Block A; LOW byte. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
\cell }{BLOCKBL\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP6 - RDS Block B; HIGH byte. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
\cell }{BLOCKCH\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP7 - RDS Block B; LOW byte. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
\cell }{BLOCKCL\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP8 - RDS Block C; HIGH byte. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
\cell }{BLOCKDH\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP9 - RDS Block C; LOW byte. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
\cell }{BLOCKDL\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP10 - RDS Block D; HIGH byte. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
\cell }{CTS: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
\cell }{DUMMY1: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
\cell }{DUMMY2: 2\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
\cell }{DUMMY3: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RDS Sync Found; 1 = Found RDS synchronization. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
\cell }{DUMMY4: 2\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RDS New Block B; 1 = Valid Block B data has been received. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
\cell }{DUMMY5: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RDS Sync; 1 = RDS currently synchronized. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
\cell }{DUMMY6: 5\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Group Lost; 1 = One or more RDS groups discarded due to FIFO overrun. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
\cell }{ERR: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
\cell }{GRPLOST: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
\cell }{RDSFIFOUSED\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
\cell }{RDSINT: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
\cell }{RDSNEWBLOCKA: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
\cell }{RDSNEWBLOCKB: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RDS New Block A; 1 = Valid Block A data has been received. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
\cell }{RDSRECV: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
\cell }{RDSSYNC: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
\cell }{RDSSYNCFOUND: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RDS Sync Lost; 1 = Lost RDS synchronization. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
\cell }{RDSSYNCLOST: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RDS Received; 1 = FIFO filled to minimum number of groups set by RDSFIFOCNT. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
\cell }{RSQINT: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
\cell }{STCINT: 1\cell }{\cell }{\row }
}
{\xe \v si47x_rds_int_source}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union si47x_rds_int_source\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FM_RDS_INT_SOURCE property data type. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; page 103 \par
also {\field {\*\fldinst { HYPERLINK "https://en.wikipedia.org/wiki/Radio_Data_System" }{}}{\fldrslt {\cs37\ul\cf2 https://en.wikipedia.org/wiki/Radio_Data_System}}}
 \par
}}}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
\cell }{raw[2]\cell }{\cell }{\row }
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_int_source}}}
{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
\cell }{refined\cell }{\cell }{\row }
}
{\xe \v si47x_rds_int_source.refined}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_rds_int_source.refined\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
\cell }{DUMMY1: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
f set, generate RDSINT when RDS gains synchronization. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
\cell }{DUMMY2: 5\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If set, generate an interrupt when Block B data is found or subsequently changed. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
\cell }{DUMMY3: 5\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reserved - Always write to 0. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
\cell }{RDSNEWBLOCKA: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Always write to 0. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
\cell }{RDSNEWBLOCKB: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If set, generate an interrupt when Block A data is found or subsequently changed. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
\cell }{RDSRECV: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
\cell }{RDSSYNCFOUND: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If set, generate RDSINT when RDS loses synchronization. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
\cell }{RDSSYNCLOST: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If set, generate RDSINT when RDS FIFO has at least FM_RDS_INT_FIFO_COUNT entries. }\cell }{\row }
}
{\xe \v si47x_rds_config}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union si47x_rds_config\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data type for FM_RDS_CONFIG Property. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
IMPORTANT: all block errors must be less than or equal the associated block error threshold for the group to be stored in the RDS FIFO. 0 = No errors; 1 = 1\'962 bit errors detected and corrected; 2 = 3\'965 bit errors detected and corrected; 3 = Uncorrectable. Recommended Block Error Threshold options: 2,2,2,2 = No group stored if any errors are uncorrected. 3,3,3,3 = Group stored regardless of errors. 0,0,0,0 = No group stored containing corrected or uncorrected errors. 3,2,3,3 = Group stored with corrected errors on B, regardless of errors on A, C, or D.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 58 and 104 \par
}}}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_config}}}
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
\cell }{arg\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
\cell }{raw[2]\cell }{\cell }{\row }
}
{\xe \v si47x_rds_config.arg}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_rds_config.arg\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
\cell }{BLETHA: 2\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Block Error Threshold BLOCKB. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
\cell }{BLETHB: 2\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Block Error Threshold BLOCKC. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
\cell }{BLETHC: 2\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Block Error Threshold BLOCKD. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
\cell }{BLETHD: 2\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
\cell }{DUMMY1: 7\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 = RDS Processing Enable. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
\cell }{RDSEN: 1\cell }{\cell }{\row }
}
{\xe \v si47x_rds_blocka}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union si47x_rds_blocka\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Block A data type. \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABR" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blocka}}}
{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
\cell }{raw\cell }{\cell }{\row }
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABQ" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blocka}}}
{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
\cell }{refined\cell }{\cell }{\row }
}
{\xe \v si47x_rds_blocka.refined}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_rds_blocka.refined\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint16_t{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
\cell }{pi\cell }{\cell }{\row }
}
{\xe \v si47x_rds_blocka.raw}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_rds_blocka.raw\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
\cell }{highValue\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
\cell }{lowValue\cell }{\cell }{\row }
}
{\xe \v si47x_rds_blockb}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union si47x_rds_blockb\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Block B data type. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For GCC on System-V ABI on 386-compatible (32-bit processors), the following stands:\par
1) Bit-fields are allocated from right to left (least to most significant). 2) A bit-field must entirely reside in a storage unit appropriate for its declared type. Thus a bit-field never crosses its unit boundary. 3) Bit-fields may share a storage unit with other struct/union members, including members that are not bit-fields. Of course, struct members occupy different parts of the storage unit. 4) Unnamed bit-fields' types do not affect the alignment of a structure or union, although individual bit-fields' member offsets obey the alignment constraints. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
also Si47XX PROGRAMMING GUIDE; AN332; pages 78 and 79 \par
also {\field {\*\fldinst { HYPERLINK "https://en.wikipedia.org/wiki/Radio_Data_System" }{}}{\fldrslt {\cs37\ul\cf2 https://en.wikipedia.org/wiki/Radio_Data_System}}}
 \par
}}}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABS" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blockb}}}
{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
\cell }{group0\cell }{\cell }{\row }
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blockb}}}
{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
\cell }{group2\cell }{\cell }{\row }
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABV" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blockb}}}
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
\cell }{raw\cell }{\cell }{\row }
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blockb}}}
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
\cell }{refined\cell }{\cell }{\row }
}
{\xe \v si47x_rds_blockb.group0}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_rds_blockb.group0\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint16_t{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
\cell }{address: 2\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
\cell }{DI: 1\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
\cell }{groupType: 4\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
\cell }{MS: 1\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
\cell }{programType: 5\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
\cell }{TA: 1\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
\cell }{trafficProgramCode: 1\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
\cell }{versionCode: 1\cell }{\cell }{\row }
}
{\xe \v si47x_rds_blockb.group2}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_rds_blockb.group2\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint16_t{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
\cell }{address: 4\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
\cell }{groupType: 4\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
\cell }{programType: 5\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
\cell }{textABFlag: 1\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
\cell }{trafficProgramCode: 1\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
\cell }{versionCode: 1\cell }{\cell }{\row }
}
{\xe \v si47x_rds_blockb.refined}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_rds_blockb.refined\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint16_t{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
\cell }{content: 4\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
\cell }{groupType: 4\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
\cell }{programType: 5\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
\cell }{textABFlag: 1\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
\cell }{trafficProgramCode: 1\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
\cell }{versionCode: 1\cell }{\cell }{\row }
}
{\xe \v si47x_rds_blockb.raw}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_rds_blockb.raw\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
\cell }{highValue\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
\cell }{lowValue\cell }{\cell }{\row }
}
{\xe \v si47x_rds_date_time}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union si47x_rds_date_time\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Group type 4A ( RDS Date and Time) When group type 4A is used by the station, it shall be transmitted every minute according to EN 50067. This Structure uses blocks 2,3 and 5 (B,C,D)\par
ATTENTION: To make it compatible with 8, 16 and 32 bits platforms and avoid Crosses boundary, it was necessary to split minute and hour representation. \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
\cell }{raw[6]\cell }{\cell }{\row }
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABW" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_date_time}}}
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
\cell }{refined\cell }{\cell }{\row }
}
{\xe \v si47x_rds_date_time.refined}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_rds_date_time.refined\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
\cell }{hour1: 4\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
\cell }{hour2: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
\cell }{minute1: 2\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
\cell }{minute2: 4\cell }{\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
\cell }{mjd: 17\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
\cell }{offset: 5\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
\cell }{offset_sense: 1\cell }{\cell }{\row }
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Receiver Status and Setup\par \pard\plain 
{\tc\tcl2 \v Receiver Status and Setup}
{\xe \v Receiver Status and Setup}
{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 si47x_agc_status}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABX" }{}}{\fldrslt {\cs37\ul\cf2 si47x_agc_status.refined}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 si47x_agc_overrride}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABY" }{}}{\fldrslt {\cs37\ul\cf2 si47x_agc_overrride.arg}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 si47x_bandwidth_config}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABZ" }{}}{\fldrslt {\cs37\ul\cf2 si47x_bandwidth_config.param}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 si47x_ssb_mode}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 si47x_ssb_mode.param}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAY" }{}}{\fldrslt {\cs37\ul\cf2 si4735_digital_output_format}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Digital audio output format data structure (Property 0x0102. DIGITAL_OUTPUT_FORMAT). } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAY" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACB" }{}}{\fldrslt {\cs37\ul\cf2 si4735_digital_output_format.refined}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAZ" }{}}{\fldrslt {\cs37\ul\cf2 si4735_digital_output_sample_rate}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Digital audio output sample structure (Property 0x0104. DIGITAL_OUTPUT_SAMPLE_RATE). } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAZ" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structure Documentation\par
\pard\plain 
{\xe \v si47x_agc_status}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union si47x_agc_status\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AGC data types FM / AM and SSB structure to AGC\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; For FM page 80; for AM page 142 \par
AN332 REV 0.8 Universal Programming Guide Amendment for SI4735-D60 SSB and NBFM patches; page 18. \par
}}}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
\cell }{raw[3]\cell }{\cell }{\row }
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABX" }{}}{\fldrslt {\cs37\ul\cf2 si47x_agc_status}}}
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
\cell }{refined\cell }{\cell }{\row }
}
{\xe \v si47x_agc_status.refined}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_agc_status.refined\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
\cell }{AGCDIS: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
\cell }{AGCIDX\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
\cell }{CTS: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
\cell }{DUMMY: 7\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
\cell }{DUMMY1: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
\cell }{DUMMY2: 2\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
\cell }{ERR: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
\cell }{RDSINT: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
\cell }{RSQINT: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
\cell }{STCINT: 1\cell }{\cell }{\row }
}
{\xe \v si47x_agc_overrride}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union si47x_agc_overrride\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If FM, Overrides AGC setting by disabling the AGC and forcing the LNA to have a certain gain that ranges between 0 (minimum attenuation) and 26 (maximum attenuation). If AM, overrides the AGC setting by disabling the AGC and forcing the gain index that ranges between 0\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; For FM page 81; for AM page 143 \par
}}}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABY" }{}}{\fldrslt {\cs37\ul\cf2 si47x_agc_overrride}}}
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
\cell }{arg\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
\cell }{raw[2]\cell }{\cell }{\row }
}
{\xe \v si47x_agc_overrride.arg}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_agc_overrride.arg\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
\cell }{AGCDIS: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
\cell }{AGCIDX\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
\cell }{DUMMY: 7\cell }{\cell }{\row }
}
{\xe \v si47x_bandwidth_config}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union si47x_bandwidth_config\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The bandwidth of the AM channel filter data type AMCHFLT values: 0 = 6 kHz Bandwidth \par
 1 = 4 kHz Bandwidth 2 = 3 kHz Bandwidth 3 = 2 kHz Bandwidth 4 = 1 kHz Bandwidth 5 = 1.8 kHz Bandwidth 6 = 2.5 kHz Bandwidth, gradual roll off 7\'9615 = Reserved (Do not use)\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 125 and 151 \par
}}}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABZ" }{}}{\fldrslt {\cs37\ul\cf2 si47x_bandwidth_config}}}
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
\cell }{param\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
\cell }{raw[2]\cell }{\cell }{\row }
}
{\xe \v si47x_bandwidth_config.param}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_bandwidth_config.param\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
\cell }{AMCHFLT: 4\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
\cell }{AMPLFLT: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
\cell }{DUMMY1: 4\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selects the bandwidth of the AM channel filter. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
\cell }{DUMMY2: 7\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the AM Power Line Noise Rejection Filter. }\cell }{\row }
}
{\xe \v si47x_ssb_mode}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union si47x_ssb_mode\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SSB - datatype for SSB_MODE (property 0x0101)\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; page 24 \par
}}}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 si47x_ssb_mode}}}
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
\cell }{param\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
\cell }{raw[2]\cell }{\cell }{\row }
}
{\xe \v si47x_ssb_mode.param}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_ssb_mode.param\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
\cell }{AUDIOBW: 4\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
\cell }{AVC_DIVIDER: 4\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SSB side band cutoff filter for band passand low pass filter. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
\cell }{AVCEN: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
set 0 for SSB mode; set 3 for SYNC mode; }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
\cell }{DSP_AFCDIS: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Always write 0;. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
\cell }{DUMMY1: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SSB Soft-mute Based on RSSI or SNR. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
\cell }{SBCUTFLT: 4\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 = 1.2KHz (default); 1=2.2KHz; 2=3KHz; 3=4KHz; 4=500Hz; 5=1KHz }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
\cell }{SMUTESEL: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SSB Automatic Volume Control (AVC) enable; 0=disable; 1=enable (default);. }\cell }{\row }
}
{\xe \v si4735_digital_output_format}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union si4735_digital_output_format\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Digital audio output format data structure (Property 0x0102. DIGITAL_OUTPUT_FORMAT). \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to configure: DCLK edge, data format, force mono, and sample precision.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; page 195. \par
}}}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint16_t{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
\cell }{raw\cell }{\cell }{\row }
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACB" }{}}{\fldrslt {\cs37\ul\cf2 si4735_digital_output_format}}}
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
\cell }{refined\cell }{\cell }{\row }
}
{\xe \v si4735_digital_output_format.refined}
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si4735_digital_output_format.refined\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
\cell }{dummy: 8\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Digital Output DCLK Edge (0 = use DCLK rising edge, 1 = use DCLK falling edge) }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
\cell }{OFALL: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Digital Output Mode (0000=I2S, 0110 = Left-justified, 1000 = MSB at second DCLK after DFS pulse, 1100 = MSB at first DCLK after DFS pulse). }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
\cell }{OMODE: 4\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Digital Output Mono Mode (0=Use mono/stereo blend ). }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
\cell }{OMONO: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Digital Output Audio Sample Precision (0=16 bits, 1=20 bits, 2=24 bits, 3=8bits). }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
\cell }{OSIZE: 2\cell }{\cell }{\row }
}
{\xe \v si4735_digital_output_sample_rate}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si4735_digital_output_sample_rate\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Digital audio output sample structure (Property 0x0104. DIGITAL_OUTPUT_SAMPLE_RATE). \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to enable digital audio output and to configure the digital audio output sample rate in samples per second (sps).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; page 196. \par
}}}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint16_t{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
\cell }{DOSR\cell }{\cell }{\row }
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SI473X data types\par \pard\plain 
{\tc\tcl2 \v SI473X data types}
{\xe \v SI473X data types}
{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SI473X data representation. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAC" }{}}{\fldrslt {\cs37\ul\cf2 si473x_powerup}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Power Up arguments data type. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAC" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 si473x_powerup.arg}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 si47x_frequency}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents how the frequency is stored in the si4735. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 si47x_frequency.raw}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 si47x_antenna_capacitor}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Antenna Tuning Capacitor data type manupulation. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 si47x_antenna_capacitor.raw}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 si47x_set_frequency}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AM Tune frequency data type command (AM_TUNE_FREQ command) } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABE" }{}}{\fldrslt {\cs37\ul\cf2 si47x_set_frequency.arg}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAG" }{}}{\fldrslt {\cs37\ul\cf2 si47x_seek}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seek frequency (automatic tuning) } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAG" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABF" }{}}{\fldrslt {\cs37\ul\cf2 si47x_seek.arg}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 si47x_response_status}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Response status command. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 si47x_response_status.resp}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 si47x_firmware_information}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data representation for Firmware Information (GET_REV) } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 si47x_firmware_information.resp}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 si47x_firmware_query_library}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Firmware Query Library ID response. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 si47x_firmware_query_library.resp}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 si47x_tune_status}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seek station status. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 si47x_tune_status.arg}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 si47x_property}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data type to deal with SET_PROPERTY command. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 si47x_property.raw}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SI473X data representation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The goal here is separate data from code. The Si47XX family works with many internal data that can be represented by data structure or defined data type in C/C++. These C/C++ resources have been used widely here. \par
 This aproach made the library easier to build and maintain. Each data structure created here has its reference (name of the document and page on which it was based). In other words, to make the SI47XX device easier to deal, some defined data types were created to handle byte and bits to process commands, properties and responses. These data types will be usefull to deal with SI473X \par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structure Documentation\par
\pard\plain 
{\xe \v si473x_powerup}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union si473x_powerup\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Power Up arguments data type. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 64 and 65 \par
}}}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 si473x_powerup}}}
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
\cell }{arg\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
\cell }{raw[2]\cell }{\cell }{\row }
}
{\xe \v si473x_powerup.arg}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si473x_powerup.arg\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
\cell }{CTSIEN: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GPO2 Output Enable (0 = GPO2 output disabled; 1 = GPO2 output enabled). }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
\cell }{FUNC: 4\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
\cell }{GPO2OEN: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Patch Enable (0 = Boot normally; 1 = Copy non-volatile memory to RAM). }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
\cell }{OPMODE\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CTS Interrupt Enable (0 = CTS interrupt disabled; 1 = CTS interrupt enabled). }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
\cell }{PATCH: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Crystal Oscillator Enable (0 = crystal oscillator disabled; 1 = Use crystal oscillator and and OPMODE=ANALOG AUDIO) . }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
\cell }{XOSCEN: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function (0 = FM Receive; 1\'9614 = Reserved; 15 = Query Library ID) }\cell }{\row }
}
{\xe \v si47x_frequency}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union si47x_frequency\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents how the frequency is stored in the si4735. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
It helps to convert frequency in uint16_t to two bytes (uint8_t) (FREQL and FREQH) \par
 \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 si47x_frequency}}}
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
\cell }{raw\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
\cell }{value\cell }{\cell }{\row }
}
{\xe \v si47x_frequency.raw}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_frequency.raw\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
\cell }{FREQH\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tune Frequency High byte. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
\cell }{FREQL\cell }{\cell }{\row }
}
{\xe \v si47x_antenna_capacitor}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union si47x_antenna_capacitor\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Antenna Tuning Capacitor data type manupulation. \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 si47x_antenna_capacitor}}}
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
\cell }{raw\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
\cell }{value\cell }{\cell }{\row }
}
{\xe \v si47x_antenna_capacitor.raw}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_antenna_capacitor.raw\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
\cell }{ANTCAPH\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Antenna Tuning Capacitor High byte. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
\cell }{ANTCAPL\cell }{\cell }{\row }
}
{\xe \v si47x_set_frequency}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union si47x_set_frequency\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AM Tune frequency data type command (AM_TUNE_FREQ command) \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 135 \par
}}}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABE" }{}}{\fldrslt {\cs37\ul\cf2 si47x_set_frequency}}}
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
\cell }{arg\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
\cell }{raw[5]\cell }{\cell }{\row }
}
{\xe \v si47x_set_frequency.arg}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_set_frequency.arg\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
\cell }{ANTCAPH\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ARG3 - Tune Frequency Low byte. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
\cell }{ANTCAPL\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ARG4 - Antenna Tuning Capacitor High byte. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
\cell }{DUMMY1: 4\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Valid only for FM (Must be 0 to AM) }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
\cell }{FAST: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
\cell }{FREEZE: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ARG1 - FAST Tuning. If set, executes fast and invalidated tune. The tune status will not be accurate. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
\cell }{FREQH\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SSB Upper Side Band (USB) and Lower Side Band (LSB) Selection. 10 = USB is selected; 01 = LSB is selected. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
\cell }{FREQL\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ARG2 - Tune Frequency High byte. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
\cell }{USBLSB: 2\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Always set 0. }\cell }{\row }
}
{\xe \v si47x_seek}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union si47x_seek\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seek frequency (automatic tuning) \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents searching for a valid frequency data type. \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABF" }{}}{\fldrslt {\cs37\ul\cf2 si47x_seek}}}
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
\cell }{arg\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
\cell }{raw\cell }{\cell }{\row }
}
{\xe \v si47x_seek.arg}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_seek.arg\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
\cell }{RESERVED1: 2\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
\cell }{RESERVED2: 4\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines the direction of the search, either UP = 1, or DOWN = 0. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
\cell }{SEEKUP: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines whether the seek should Wrap = 1, or Halt = 0 when it hits the band limit. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
\cell }{WRAP: 1\cell }{\cell }{\row }
}
{\xe \v si47x_response_status}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union si47x_response_status\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Response status command. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Response data from a query status command\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; pages 73 and \par
}}}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
\cell }{raw[8]\cell }{\cell }{\row }
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 si47x_response_status}}}
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
\cell }{resp\cell }{\cell }{\row }
}
{\xe \v si47x_response_status.resp}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_response_status.resp\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
\cell }{AFCRL: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Valid Channel. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
\cell }{BLTF: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
\cell }{CTS: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error. 0 = No error 1 = Error. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
\cell }{DUMMY1: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seek/Tune Complete Interrupt; 1 = Tune complete has been triggered. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
\cell }{DUMMY2: 2\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Received Signal Quality Interrupt; 0 = interrupt has not been triggered. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
\cell }{DUMMY3: 5\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AFC Rail Indicator. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
\cell }{ERR: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
\cell }{MULT\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This byte contains the SNR metric when tune is complete (dB). }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
\cell }{RDSINT: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
\cell }{READANTCAP\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the multipath metric when tune is complete. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
\cell }{READFREQH\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reports if a seek hit the band limit. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
\cell }{READFREQL\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read Frequency High byte. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
\cell }{RSQINT: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Radio Data System (RDS) Interrup; 0 = interrupt has not been triggered. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
\cell }{RSSI\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read Frequency Low byte. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
\cell }{SNR\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Received Signal Strength Indicator (dB\'CE\'BCV) }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
\cell }{STCINT: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
\cell }{VALID: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear to Send. }\cell }{\row }
}
{\xe \v si47x_firmware_information}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union si47x_firmware_information\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data representation for Firmware Information (GET_REV) \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The part number, chip revision, firmware revision, patch revision and component revision numbers.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 66 and 131 \par
}}}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
\cell }{raw[9]\cell }{\cell }{\row }
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 si47x_firmware_information}}}
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
\cell }{resp\cell }{\cell }{\row }
}
{\xe \v si47x_firmware_information.resp}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_firmware_information.resp\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
\cell }{CHIPREV\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP7 - Component Minor Revision (ASCII). }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
\cell }{CMPMAJOR\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP5 - Patch ID Low byte (HEX). }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
\cell }{CMPMINOR\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP6 - Component Major Revision (ASCII). }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
\cell }{CTS: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
\cell }{DUMMY1: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
\cell }{DUMMY2: 2\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
\cell }{ERR: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
\cell }{FWMAJOR\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP1 - Final 2 digits of Part Number (HEX). }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
\cell }{FWMINOR\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP2 - Firmware Major Revision (ASCII). }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
\cell }{PATCHH\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP3 - Firmware Minor Revision (ASCII). }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
\cell }{PATCHL\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP4 - Patch ID High byte (HEX). }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
\cell }{PN\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
\cell }{RDSINT: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
\cell }{RSQINT: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
\cell }{STCINT: 1\cell }{\cell }{\row }
}
{\xe \v si47x_firmware_query_library}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union si47x_firmware_query_library\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Firmware Query Library ID response. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to represent the response of a power up command with FUNC = 15 (patch)\par
To confirm that the patch is compatible with the internal device library revision, the library revision should be confirmed by issuing the POWER_UP command with Function = 15 (query library ID)\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; page 12 \par
}}}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
\cell }{raw[8]\cell }{\cell }{\row }
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 si47x_firmware_query_library}}}
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
\cell }{resp\cell }{\cell }{\row }
}
{\xe \v si47x_firmware_query_library.resp}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_firmware_query_library.resp\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
\cell }{CHIPREV\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP5 - Reserved, various values. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
\cell }{CTS: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
\cell }{DUMMY1: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
\cell }{DUMMY2: 2\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
\cell }{ERR: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
\cell }{FWMAJOR\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP1 - Final 2 digits of Part Number (HEX). }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
\cell }{FWMINOR\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP2 - Firmware Major Revision (ASCII). }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
\cell }{LIBRARYID\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP6 - Chip Revision (ASCII). }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
\cell }{PN\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
\cell }{RDSINT: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
\cell }{RESERVED1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP3 - Firmware Minor Revision (ASCII). }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
\cell }{RESERVED2\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RESP4 - Reserved, various values. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
\cell }{RSQINT: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
\cell }{STCINT: 1\cell }{\cell }{\row }
}
{\xe \v si47x_tune_status}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union si47x_tune_status\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seek station status. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Status of FM_TUNE_FREQ or FM_SEEK_START commands or Status of AM_TUNE_FREQ or AM_SEEK_START commands.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 73 and 139 \par
}}}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 si47x_tune_status}}}
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
\cell }{arg\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
\cell }{raw\cell }{\cell }{\row }
}
{\xe \v si47x_tune_status.arg}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_tune_status.arg\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
\cell }{CANCEL: 1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If set, clears the seek/tune complete interrupt status indicator. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
\cell }{INTACK: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
\cell }{RESERVED2: 6\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If set, aborts a seek currently in progress. }\cell }{\row }
}
{\xe \v si47x_property}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union si47x_property\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data type to deal with SET_PROPERTY command. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Property Data type (help to deal with SET_PROPERTY command on si473X) \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 si47x_property}}}
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
\cell }{raw\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
\cell }{value\cell }{\cell }{\row }
}
{\xe \v si47x_property.raw}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct si47x_property.raw\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
\cell }{byteHigh\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
\cell }{byteLow\cell }{\cell }{\row }
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Si4735-D60 Single Side Band (SSB) support\par \pard\plain 
{\tc\tcl2 \v Si4735-D60 Single Side Band (SSB) support}
{\xe \v Si4735-D60 Single Side Band (SSB) support}
{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setSSBBfo}}}
 (int offset)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the SSB Beat Frequency Offset (BFO). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALM" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setSSBConfig}}}
 (uint8_t AUDIOBW, uint8_t SBCUTFLT, uint8_t AVC_DIVIDER, uint8_t AVCEN, uint8_t SMUTESEL, uint8_t DSP_AFCDIS)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the SSB receiver mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setSSBDspAfc}}}
 (uint8_t DSP_AFCDIS)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets DSP AFC disable or enable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALU" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setSSBSoftMute}}}
 (uint8_t SMUTESEL)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets SSB Soft-mute Based on RSSI or SNR Selection: }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALQ" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setSSBAutomaticVolumeControl}}}
 (uint8_t AVCEN)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets SSB Automatic Volume Control (AVC) for SSB mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALS" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setSSBAvcDivider}}}
 (uint8_t AVC_DIVIDER)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets AVC Divider. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALR" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setSBBSidebandCutoffFilter}}}
 (uint8_t SBCUTFLT)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets SBB Sideband Cutoff Filter for band pass and low pass filters. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALP" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setSSBAudioBandwidth}}}
 (uint8_t AUDIOBW)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SSB Audio Bandwidth for SSB mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setSSB}}}
 (uint8_t usblsb)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the radio to AM function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALN" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setSSB}}}
 (uint16_t fromFreq, uint16_t toFreq, uint16_t intialFreq, uint16_t step, uint8_t usblsb)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::sendSSBModeProperty}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sends the property command to the device. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 si47x_firmware_query_library}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALV" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::queryLibraryId}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Query the library information of the Si47XX device. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALW" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::patchPowerUp}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method can be used to prepare the device to apply SSBRX patch. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALK" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::ssbSetup}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the Si473X device on SSB (same AM Mode). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALZ" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::ssbPowerUp}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function can be useful for debug and test. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALX" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::downloadPatch}}}
 (const uint8_t *ssb_patch_content, const uint16_t ssb_patch_content_size)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfers the content of a patch stored in a array of bytes to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735}}} device. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALY" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::downloadPatch}}}
 (int eeprom_i2c_address)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfers the content of a patch stored in a eeprom to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735}}} device. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v downloadPatch\:Si4735-D60 Single Side Band (SSB) support}
{\xe \v Si4735-D60 Single Side Band (SSB) support\:downloadPatch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::downloadPatch (const uint8_t *  {\i ssb_patch_content}, const uint16_t  {\i ssb_patch_content_size})}}
\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfers the content of a patch stored in a array of bytes to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735}}} device. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
You must mount an array as shown below and know the size of that array as well.\par
It is importante to say that patches to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735}}} are distributed in binary form and have to be transferred to the internal RAM of the device by the host MCU (in this case Arduino). Since the RAM is volatile memory, the patch stored into the device gets lost when you turn off the system. Consequently, the content of the patch has to be transferred again to the device each time after turn on the system or reset the device.\par
The disadvantage of this approach is the amount of memory used by the patch content. This may limit the use of other radio functions you want implemented in Arduino.\par
Example of content: const PROGMEM uint8_t ssb_patch_content_full[] = \{ // SSB patch for whole SSBRX full download 0x15, 0x00, 0x0F, 0xE0, 0xF2, 0x73, 0x76, 0x2F, 0x16, 0x6F, 0x26, 0x1E, 0x00, 0x4B, 0x2C, 0x58, 0x16, 0xA3, 0x74, 0x0F, 0xE0, 0x4C, 0x36, 0xE4, 0x16, 0x3B, 0x1D, 0x4A, 0xEC, 0x36, 0x28, 0xB7, 0x16, 0x00, 0x3A, 0x47, 0x37, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9D, 0x29\}; \par
const int size_content_full = sizeof ssb_patch_content_full;\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 64 and 215-220. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ssb_patch_content} \cell }{point to array of bytes content patch. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ssb_patch_content_size} \cell }{array size (number of bytes). The maximum size allowed for a patch is 15856 bytes\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
false if an error is found. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 02427 \{\par
02428     uint8_t content;\par
02429     {\cf17 register} {\cf18 int} i, offset;\par
02430     {\cf20 // Send patch to the SI4735 device}\par
02431     {\cf19 for} (offset = 0; offset < (int) ssb_patch_content_size; offset += 8)\par
02432     \{\par
02433         Wire.beginTransmission({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
);\par
02434         {\cf19 for} (i = 0; i < 8; i++)\par
02435         \{\par
02436             content = pgm_read_byte_near(ssb_patch_content + (i + offset));\par
02437             Wire.write(content);\par
02438         \}\par
02439         Wire.endTransmission();\par
02440 \par
02441         {\cf20 // Testing download performance}\par
02442         {\cf20 // approach 1 - Faster - less secure (it might crash in some architectures)}\par
02443         delayMicroseconds({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGC" }{}}{\fldrslt {\cs37\ul\cf2 MIN_DELAY_WAIT_SEND_LOOP}}}
); {\cf20 // Need check the minimum value}\par
02444 \par
02445         {\cf20 // approach 2 - More control. A little more secure than approach 1}\par
02446         {\cf20 /*}\par
02447 {\cf20         do}\par
02448 {\cf20         \{}\par
02449 {\cf20             delayMicroseconds(150); // Minimum delay founded (Need check the minimum value)}\par
02450 {\cf20             Wire.requestFrom(deviceAddress, 1);}\par
02451 {\cf20         \} while (!(Wire.read() & B10000000));}\par
02452 {\cf20         */}\par
02453 \par
02454         {\cf20 // approach 3 - same approach 2}\par
02455         {\cf20 // waitToSend();}\par
02456 \par
02457         {\cf20 // approach 4 - safer}\par
02458         {\cf20 /*}\par
02459 {\cf20         waitToSend();}\par
02460 {\cf20         uint8_t cmd_status;}\par
02461 {\cf20         Uncomment the lines below if you want to check erro.}\par
02462 {\cf20         Wire.requestFrom(deviceAddress, 1);}\par
02463 {\cf20         cmd_status = Wire.read();}\par
02464 {\cf20         The SI4735 issues a status after each 8 byte transfered.}\par
02465 {\cf20         Just the bit 7 (CTS) should be seted. if bit 6 (ERR) is seted, the system halts.}\par
02466 {\cf20         if (cmd_status != 0x80)}\par
02467 {\cf20            return false;}\par
02468 {\cf20         */}\par
02469     \}\par
02470     delayMicroseconds(250);\par
02471     {\cf19 return} {\cf17 true};\par
02472 \}\par
}
}
{\xe \v downloadPatch\:Si4735-D60 Single Side Band (SSB) support}
{\xe \v Si4735-D60 Single Side Band (SSB) support\:downloadPatch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::downloadPatch (int  {\i eeprom_i2c_address})}}
\par
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfers the content of a patch stored in a eeprom to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735}}} device. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TO USE THIS METHOD YOU HAVE TO HAVE A EEPROM WRITEN WITH THE PATCH CONTENT\par
ATTENTION: Under construction...\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the sketch write_ssb_patch_eeprom.ino (TO DO)\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i eeprom_i2c_address} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
false if an error is found. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 02489 \{\par
02490     {\cf18 int} ssb_patch_content_size;\par
02491     uint8_t cmd_status;\par
02492     {\cf18 int} i, offset;\par
02493     uint8_t eepromPage[8];\par
02494 \par
02495     {\cf17 union }\{\par
02496         {\cf17 struct}\par
02497         \{\par
02498             uint8_t lowByte;\par
02499             uint8_t highByte;\par
02500         \} raw;\par
02501         uint16_t value;\par
02502     \} eeprom;\par
02503 \par
02504     {\cf20 // The first two bytes are the size of the patches}\par
02505     {\cf20 // Set the position in the eeprom to read the size of the patch content}\par
02506     Wire.beginTransmission(eeprom_i2c_address);\par
02507     Wire.write(0); {\cf20 // writes the most significant byte}\par
02508     Wire.write(0); {\cf20 // writes the less significant byte}\par
02509     Wire.endTransmission();\par
02510     Wire.requestFrom(eeprom_i2c_address, 2);\par
02511     eeprom.raw.highByte = Wire.read();\par
02512     eeprom.raw.lowByte = Wire.read();\par
02513 \par
02514     ssb_patch_content_size = eeprom.value;\par
02515 \par
02516     {\cf20 // the patch content starts on position 2 (the first two bytes are the size of the patch)}\par
02517     {\cf19 for} (offset = 2; offset < ssb_patch_content_size; offset += 8)\par
02518     \{\par
02519         {\cf20 // Set the position in the eeprom to read next 8 bytes}\par
02520         eeprom.value = offset;\par
02521         Wire.beginTransmission(eeprom_i2c_address);\par
02522         Wire.write(eeprom.raw.highByte); {\cf20 // writes the most significant byte}\par
02523         Wire.write(eeprom.raw.lowByte);  {\cf20 // writes the less significant byte}\par
02524         Wire.endTransmission();\par
02525 \par
02526         {\cf20 // Reads the next 8 bytes from eeprom}\par
02527         Wire.requestFrom(eeprom_i2c_address, 8);\par
02528         {\cf19 for} (i = 0; i < 8; i++)\par
02529             eepromPage[i] = Wire.read();\par
02530 \par
02531         {\cf20 // sends the page (8 bytes) to the SI4735}\par
02532         Wire.beginTransmission({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
);\par
02533         {\cf19 for} (i = 0; i < 8; i++)\par
02534             Wire.write(eepromPage[i]);\par
02535         Wire.endTransmission();\par
02536 \par
02537         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
02538 \par
02539         Wire.requestFrom({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
, 1);\par
02540         cmd_status = Wire.read();\par
02541         {\cf20 // The SI4735 issues a status after each 8 byte transfered.}\par
02542         {\cf20 // Just the bit 7 (CTS) should be seted. if bit 6 (ERR) is seted, the system halts.}\par
02543         {\cf19 if} (cmd_status != 0x80)\par
02544             {\cf19 return} {\cf17 false};\par
02545     \}\par
02546     delayMicroseconds(250);\par
02547     {\cf19 return} {\cf17 true};\par
02548 \}\par
}
{
\ql
References SI4735::waitToSend().}\par
}
{\xe \v patchPowerUp\:Si4735-D60 Single Side Band (SSB) support}
{\xe \v Si4735-D60 Single Side Band (SSB) support\:patchPowerUp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::patchPowerUp ()}}
\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method can be used to prepare the device to apply SSBRX patch. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Call queryLibraryId before call this method. Powerup the device by issuing the POWER_UP command with FUNC = 1 (AM/SW/LW Receive).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 64 and 215-220 and \par
AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE AMENDMENT FOR SI4735-D60 SSB AND NBFM PATCHES; page 7. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 02341 \{\par
02342     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
02343     Wire.beginTransmission({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
);\par
02344     Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACI" }{}}{\fldrslt {\cs37\ul\cf2 POWER_UP}}}
);\par
02345     Wire.write(0b00110001);          {\cf20 // Set to AM, Enable External Crystal Oscillator; Set patch enable; GPO2 output disabled; CTS interrupt disabled.}\par
02346     Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFU" }{}}{\fldrslt {\cs37\ul\cf2 SI473X_ANALOG_AUDIO}}}
); {\cf20 // Set to Analog Output}\par
02347     Wire.endTransmission();\par
02348     delayMicroseconds(2500);\par
02349 \}\par
}
{
\ql
References SI4735::waitToSend().}\par
}
{\xe \v queryLibraryId\:Si4735-D60 Single Side Band (SSB) support}
{\xe \v Si4735-D60 Single Side Band (SSB) support\:queryLibraryId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 si47x_firmware_query_library}}}
 SI4735::queryLibraryId ()}}
\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Query the library information of the Si47XX device. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SI47XX PATCH RESOURCES\par
Used to confirm if the patch is compatible with the internal device library revision.\par
You have to call this function if you are applying a patch on SI47XX (SI4735-D60).\par
The first command that is sent to the device is the POWER_UP command to confirm that the patch is compatible with the internal device library revision.\par
The device moves into the powerup mode, returns the reply, and moves into the powerdown mode.\par
The POWER_UP command is sent to the device again to configure the mode of the device and additionally is used to start the patching process.\par
When applying the patch, the PATCH bit in ARG1 of the POWER_UP command must be set to 1 to begin the patching process. [AN332 page 219].\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 64 and 215-220. \par
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 si47x_firmware_query_library}}}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
a struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 si47x_firmware_query_library}}} (see it in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAB" }{}}{\fldrslt {\cs37\ul\cf2 SI4735.h}}}) \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 02302 \{\par
02303     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 si47x_firmware_query_library}}}
 libraryID;\par
02304 \par
02305     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGT" }{}}{\fldrslt {\cs37\ul\cf2 powerDown}}}
(); {\cf20 // Is it necessary}\par
02306 \par
02307     {\cf20 // delay(500);}\par
02308 \par
02309     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
02310     Wire.beginTransmission({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
);\par
02311     Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACI" }{}}{\fldrslt {\cs37\ul\cf2 POWER_UP}}}
);\par
02312     Wire.write(0b00011111);          {\cf20 // Set to Read Library ID, disable interrupt; disable GPO2OEN; boot normaly; enable External Crystal Oscillator  .}\par
02313     Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFU" }{}}{\fldrslt {\cs37\ul\cf2 SI473X_ANALOG_AUDIO}}}
); {\cf20 // Set to Analog Line Input.}\par
02314     Wire.endTransmission();\par
02315 \par
02316     {\cf19 do}\par
02317     \{\par
02318         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
02319         Wire.requestFrom({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
, 8);\par
02320         {\cf19 for} ({\cf18 int} i = 0; i < 8; i++)\par
02321             libraryID.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPL" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[i] = Wire.read();\par
02322     \} {\cf19 while} (libraryID.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPM" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.ERR); {\cf20 // If error found, try it again.}\par
02323 \par
02324     delayMicroseconds(2500);\par
02325 \par
02326     {\cf19 return} libraryID;\par
02327 \}\par
}
{
\ql
References SI4735::powerDown(), and SI4735::waitToSend().}\par
}
{\xe \v sendSSBModeProperty\:Si4735-D60 Single Side Band (SSB) support}
{\xe \v Si4735-D60 Single Side Band (SSB) support\:sendSSBModeProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::sendSSBModeProperty (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sends the property command to the device. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Just send the property SSB_MOD to the device. Internal use (privete method). \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 02259 \{\par
02260     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 si47x_property}}}
 property;\par
02261     {\cf17 property}.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 value}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFF" }{}}{\fldrslt {\cs37\ul\cf2 SSB_MODE}}}
;\par
02262     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
02263     Wire.beginTransmission({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
);\par
02264     Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 SET_PROPERTY}}}
);\par
02265     Wire.write(0x00);                  {\cf20 // Always 0x00}\par
02266     Wire.write(property.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOE" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.byteHigh); {\cf20 // High byte first}\par
02267     Wire.write(property.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOE" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.byteLow);  {\cf20 // Low byte after}\par
02268     Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANH" }{}}{\fldrslt {\cs37\ul\cf2 currentSSBMode}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPN" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[1]); {\cf20 // SSB MODE params; freq. high byte first}\par
02269     Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANH" }{}}{\fldrslt {\cs37\ul\cf2 currentSSBMode}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPN" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[0]); {\cf20 // SSB MODE params; freq. low byte after}\par
02270 \par
02271     Wire.endTransmission();\par
02272     delayMicroseconds(550);\par
02273 \}\par
}
{
\ql
References SI4735::waitToSend().}\par
{
\ql
Referenced by SI4735::setSBBSidebandCutoffFilter(), SI4735::setSSBAudioBandwidth(), SI4735::setSSBAutomaticVolumeControl(), SI4735::setSSBAvcDivider(), SI4735::setSSBConfig(), SI4735::setSSBDspAfc(), and SI4735::setSSBSoftMute().}\par
}
{\xe \v setSBBSidebandCutoffFilter\:Si4735-D60 Single Side Band (SSB) support}
{\xe \v Si4735-D60 Single Side Band (SSB) support\:setSBBSidebandCutoffFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setSBBSidebandCutoffFilter (uint8_t  {\i SBCUTFLT})}}
\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets SBB Sideband Cutoff Filter for band pass and low pass filters. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 = Band pass filter to cutoff both the unwanted side band and high frequency components > 2.0 kHz of the wanted side band. (default)\par
1 = Low pass filter to cutoff the unwanted side band. Other values = not allowed.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; page 24\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i SBCUTFLT} \cell }{0 or 1; see above \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 02160 \{\par
02161     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANH" }{}}{\fldrslt {\cs37\ul\cf2 currentSSBMode}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPO" }{}}{\fldrslt {\cs37\ul\cf2 param}}}
.SBCUTFLT = SBCUTFLT;\par
02162     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 sendSSBModeProperty}}}
();\par
02163 \}\par
}
{
\ql
References SI4735::sendSSBModeProperty().}\par
}
{\xe \v setSSB\:Si4735-D60 Single Side Band (SSB) support}
{\xe \v Si4735-D60 Single Side Band (SSB) support\:setSSB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setSSB (uint16_t  {\i fromFreq}, uint16_t  {\i toFreq}, uint16_t  {\i initialFreq}, uint16_t  {\i step}, uint8_t  {\i usblsb})}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the radio to SSB (LW/MW/SW) function.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; pages 13 and 14\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fromFreq} \cell }{minimum frequency for the band \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i toFreq} \cell }{maximum frequency for the band \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i initialFreq} \cell }{initial frequency \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i step} \cell }{step used to go to the next channel \par
 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i usblsb} \cell }{SSB Upper Side Band (USB) and Lower Side Band (LSB) Selection; value 2 (banary 10) = USB; value 1 (banary 01) = LSB. \par
 \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 02238 \{\par
02239     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMU" }{}}{\fldrslt {\cs37\ul\cf2 currentMinimumFrequency}}}
 = fromFreq;\par
02240     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMV" }{}}{\fldrslt {\cs37\ul\cf2 currentMaximumFrequency}}}
 = toFreq;\par
02241     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 currentStep}}}
 = step;\par
02242 \par
02243     {\cf19 if} (initialFreq < fromFreq || initialFreq > toFreq)\par
02244         initialFreq = fromFreq;\par
02245 \par
02246     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALN" }{}}{\fldrslt {\cs37\ul\cf2 setSSB}}}
(usblsb);\par
02247 \par
02248     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMW" }{}}{\fldrslt {\cs37\ul\cf2 currentWorkFrequency}}}
 = initialFreq;\par
02249     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGU" }{}}{\fldrslt {\cs37\ul\cf2 setFrequency}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMW" }{}}{\fldrslt {\cs37\ul\cf2 currentWorkFrequency}}}
);\par
02250     delayMicroseconds(550);\par
02251 \}\par
}
}
{\xe \v setSSB\:Si4735-D60 Single Side Band (SSB) support}
{\xe \v Si4735-D60 Single Side Band (SSB) support\:setSSB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setSSB (uint8_t  {\i usblsb})}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the radio to AM function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
It means: LW MW and SW.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; pages 13 and 14 \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJD" }{}}{\fldrslt {\cs37\ul\cf2 setAM()}}} \par
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGU" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setFrequency(uint16_t freq)}}}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i usblsb} \cell }{upper or lower side band; 1 = LSB; 2 = USB \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 02210 \{\par
02211     {\cf20 // Is it needed to load patch when switch to SSB?}\par
02212     {\cf20 // powerDown();}\par
02213     {\cf20 // It starts with the same AM parameters.}\par
02214     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 setPowerUp}}}
(1, 1, 0, 1, 1, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFU" }{}}{\fldrslt {\cs37\ul\cf2 SI473X_ANALOG_AUDIO}}}
);\par
02215     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGS" }{}}{\fldrslt {\cs37\ul\cf2 radioPowerUp}}}
();\par
02216     {\cf20 // ssbPowerUp(); // Not used for regular operation}\par
02217     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIU" }{}}{\fldrslt {\cs37\ul\cf2 setVolume}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 volume}}}
); {\cf20 // Set to previus configured volume}\par
02218     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANJ" }{}}{\fldrslt {\cs37\ul\cf2 currentSsbStatus}}}
 = usblsb;\par
02219     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMY" }{}}{\fldrslt {\cs37\ul\cf2 lastMode}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGA" }{}}{\fldrslt {\cs37\ul\cf2 SSB_CURRENT_MODE}}}
;\par
02220 \}\par
}
{
\ql
References SI4735::radioPowerUp().}\par
}
{\xe \v setSSBAudioBandwidth\:Si4735-D60 Single Side Band (SSB) support}
{\xe \v Si4735-D60 Single Side Band (SSB) support\:setSSBAudioBandwidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setSSBAudioBandwidth (uint8_t  {\i AUDIOBW})}}
\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SSB Audio Bandwidth for SSB mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 = 1.2 kHz low-pass filter (default).\par
1 = 2.2 kHz low-pass filter.\par
2 = 3.0 kHz low-pass filter.\par
3 = 4.0 kHz low-pass filter.\par
4 = 500 Hz band-pass filter for receiving CW signal, i.e. [250 Hz, 750 Hz] with center frequency at 500 Hz when USB is selected or [-250 Hz, -750 1Hz] with center frequency at -500Hz when LSB is selected* .\par
5 = 1 kHz band-pass filter for receiving CW signal, i.e. [500 Hz, 1500 Hz] with center frequency at 1 kHz when USB is selected or [-500 Hz, -1500 1 Hz] with center frequency at -1kHz when LSB is selected.\par
Other values = reserved.\par
If audio bandwidth selected is about 2 kHz or below, it is recommended to set SBCUTFLT[3:0] to 0 to enable the band pass filter for better high- cut performance on the wanted side band. Otherwise, set it to 1.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; page 24\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i AUDIOBW} \cell }{the valid values are 0, 1, 2, 3, 4 or 5; see description above \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 02190 \{\par
02191     {\cf20 // Sets the audio filter property parameter}\par
02192     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANH" }{}}{\fldrslt {\cs37\ul\cf2 currentSSBMode}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPO" }{}}{\fldrslt {\cs37\ul\cf2 param}}}
.AUDIOBW = AUDIOBW;\par
02193     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 sendSSBModeProperty}}}
();\par
02194 \}\par
}
{
\ql
References SI4735::sendSSBModeProperty().}\par
}
{\xe \v setSSBAutomaticVolumeControl\:Si4735-D60 Single Side Band (SSB) support}
{\xe \v Si4735-D60 Single Side Band (SSB) support\:setSSBAutomaticVolumeControl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setSSBAutomaticVolumeControl (uint8_t  {\i AVCEN})}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets SSB Automatic Volume Control (AVC) for SSB mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; page 24\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i AVCEN} \cell }{0 = Disable AVC; 1 = Enable AVC (default). \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 02126 \{\par
02127     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANH" }{}}{\fldrslt {\cs37\ul\cf2 currentSSBMode}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPO" }{}}{\fldrslt {\cs37\ul\cf2 param}}}
.AVCEN = AVCEN;\par
02128     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 sendSSBModeProperty}}}
();\par
02129 \}\par
}
{
\ql
References SI4735::sendSSBModeProperty().}\par
}
{\xe \v setSSBAvcDivider\:Si4735-D60 Single Side Band (SSB) support}
{\xe \v Si4735-D60 Single Side Band (SSB) support\:setSSBAvcDivider}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setSSBAvcDivider (uint8_t  {\i AVC_DIVIDER})}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets AVC Divider. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; page 24 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i AVC_DIVIDER} \cell }{SSB mode, set divider = 0; SYNC mode, set divider = 3; Other values = not allowed. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 02141 \{\par
02142     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANH" }{}}{\fldrslt {\cs37\ul\cf2 currentSSBMode}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPO" }{}}{\fldrslt {\cs37\ul\cf2 param}}}
.AVC_DIVIDER = AVC_DIVIDER;\par
02143     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 sendSSBModeProperty}}}
();\par
02144 \}\par
}
{
\ql
References SI4735::sendSSBModeProperty().}\par
}
{\xe \v setSSBBfo\:Si4735-D60 Single Side Band (SSB) support}
{\xe \v Si4735-D60 Single Side Band (SSB) support\:setSSBBfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setSSBBfo (int  {\i offset})}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the SSB Beat Frequency Offset (BFO). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Single Side Band (SSB) implementation\par
This implementation was tested only on Si4735-D60 device.\par
SSB modulation is a refinement of amplitude modulation that one of the side band and the carrier are suppressed.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; pages 3 and 5\par
}}First of all, it is important to say that the SSB patch content is not part of this library. The paches used here were made available by Mr. Vadim Afonkin on his Dropbox repository. It is important to note that the author of this library does not encourage anyone to use the SSB patches content for commercial purposes. In other words, this library only supports SSB patches, the patches themselves are not part of this library. \par
What does SSB patch means? In this context, a patch is a piece of software used to change the behavior of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735}}} device. There is little information available about patching the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735}}}.\par
The following information is the understanding of the author of this project and it is not necessarily correct.\par
A patch is executed internally (run by internal MCU) of the device. Usually, patches are used to fixes bugs or add improvements and new features of the firmware installed in the internal ROM of the device. Patches to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735}}} are distributed in binary form and have to be transferred to the internal RAM of the device by the host MCU (in this case Arduino boards). Since the RAM is volatile memory, the patch stored into the device gets lost when you turn off the system. Consequently, the content of the patch has to be transferred again to the device each time after turn on the system or reset the device.\par
I would like to thank Mr Vadim Afonkin for making available the SSBRX patches for SI4735-D60 on his Dropbox repository. On this repository you have two files, amrx_6_0_1_ssbrx_patch_full_0x9D29.csg and amrx_6_0_1_ssbrx_patch_init_0xA902.csg. It is important to know that the patch content of the original files is constant hexadecimal representation used by the language C/C++. Actally, the original files are in ASCII format (not in binary format). If you are not using C/C++ or if you want to load the files directly to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735}}}, you must convert the values to numeric value of the hexadecimal constants. For example: 0x15 = 21 (00010101); 0x16 = 22 (00010110); 0x01 = 1 (00000001); 0xFF = 255 (11111111);\par
ATTENTION: The author of this project does not guarantee that procedures shown here will work in your development environment. Given this, it is at your own risk to continue with the procedures suggested here. This library works with the I\'B2C communication protocol and it is designed to apply a SSB extension PATCH to CI SI4735-D60. Once again, the author disclaims any liability for any damage this procedure may cause to your {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735}}} or other devices that you are using.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; pages 5 and 23\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{16-bit signed value (unit in Hz). The valid range is -16383 to +16383 Hz. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 02022 \{\par
02023 \par
02024     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 si47x_property}}}
 property;\par
02025     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 si47x_frequency}}}
 bfo_offset;\par
02026 \par
02027     {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 currentTune}}}
 == {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 FM_TUNE_FREQ}}}
) {\cf20 // Only for AM/SSB mode}\par
02028         {\cf19 return};\par
02029 \par
02030     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
02031 \par
02032     {\cf17 property}.value = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFE" }{}}{\fldrslt {\cs37\ul\cf2 SSB_BFO}}}
;\par
02033     bfo_offset.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANW" }{}}{\fldrslt {\cs37\ul\cf2 value}}}
 = offset;\par
02034 \par
02035     Wire.beginTransmission({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
);\par
02036     Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 SET_PROPERTY}}}
);\par
02037     Wire.write(0x00);                  {\cf20 // Always 0x00}\par
02038     Wire.write(property.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOE" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.byteHigh); {\cf20 // High byte first}\par
02039     Wire.write(property.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOE" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.byteLow);  {\cf20 // Low byte after}\par
02040     Wire.write(bfo_offset.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANX" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.FREQH);  {\cf20 // Offset freq. high byte first}\par
02041     Wire.write(bfo_offset.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANX" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.FREQL);  {\cf20 // Offset freq. low byte first}\par
02042 \par
02043     Wire.endTransmission();\par
02044     delayMicroseconds(550);\par
02045 \}\par
}
{
\ql
References SI4735::waitToSend().}\par
}
{\xe \v setSSBConfig\:Si4735-D60 Single Side Band (SSB) support}
{\xe \v Si4735-D60 Single Side Band (SSB) support\:setSSBConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setSSBConfig (uint8_t  {\i AUDIOBW}, uint8_t  {\i SBCUTFLT}, uint8_t  {\i AVC_DIVIDER}, uint8_t  {\i AVCEN}, uint8_t  {\i SMUTESEL}, uint8_t  {\i DSP_AFCDIS})}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the SSB receiver mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
You can use this method for: \par
1) Enable or disable AFC track to carrier function for receiving normal AM signals;\par
2) Set the audio bandwidth;\par
3) Set the side band cutoff filter;\par
4) Set soft-mute based on RSSI or SNR;\par
5) Enable or disbable automatic volume control (AVC) function.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; page 24\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i AUDIOBW} \cell }{SSB Audio bandwidth; 0 = 1.2KHz (default); 1=2.2KHz; 2=3KHz; 3=4KHz; 4=500Hz; 5=1KHz. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i SBCUTFLT} \cell }{SSB side band cutoff filter for band passand low pass filter if 0, the band pass filter to cutoff both the unwanted side band and high frequency component > 2KHz of the wanted side band (default). \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i AVC_DIVIDER} \cell }{set 0 for SSB mode; set 3 for SYNC mode. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i AVCEN} \cell }{SSB Automatic Volume Control (AVC) enable; 0=disable; 1=enable (default). \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i SMUTESEL} \cell }{SSB Soft-mute Based on RSSI or SNR. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DSP_AFCDIS} \cell }{DSP AFC Disable or enable; 0=SYNC MODE, AFC enable; 1=SSB MODE, AFC disable. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 02071 \{\par
02072     {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 currentTune}}}
 == {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 FM_TUNE_FREQ}}}
) {\cf20 // Only AM/SSB mode}\par
02073         {\cf19 return};\par
02074 \par
02075     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANH" }{}}{\fldrslt {\cs37\ul\cf2 currentSSBMode}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPO" }{}}{\fldrslt {\cs37\ul\cf2 param}}}
.AUDIOBW = AUDIOBW;\par
02076     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANH" }{}}{\fldrslt {\cs37\ul\cf2 currentSSBMode}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPO" }{}}{\fldrslt {\cs37\ul\cf2 param}}}
.SBCUTFLT = SBCUTFLT;\par
02077     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANH" }{}}{\fldrslt {\cs37\ul\cf2 currentSSBMode}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPO" }{}}{\fldrslt {\cs37\ul\cf2 param}}}
.AVC_DIVIDER = AVC_DIVIDER;\par
02078     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANH" }{}}{\fldrslt {\cs37\ul\cf2 currentSSBMode}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPO" }{}}{\fldrslt {\cs37\ul\cf2 param}}}
.AVCEN = AVCEN;\par
02079     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANH" }{}}{\fldrslt {\cs37\ul\cf2 currentSSBMode}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPO" }{}}{\fldrslt {\cs37\ul\cf2 param}}}
.SMUTESEL = SMUTESEL;\par
02080     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANH" }{}}{\fldrslt {\cs37\ul\cf2 currentSSBMode}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPO" }{}}{\fldrslt {\cs37\ul\cf2 param}}}
.DUMMY1 = 0;\par
02081     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANH" }{}}{\fldrslt {\cs37\ul\cf2 currentSSBMode}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPO" }{}}{\fldrslt {\cs37\ul\cf2 param}}}
.DSP_AFCDIS = DSP_AFCDIS;\par
02082 \par
02083     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 sendSSBModeProperty}}}
();\par
02084 \}\par
}
{
\ql
References SI4735::sendSSBModeProperty().}\par
}
{\xe \v setSSBDspAfc\:Si4735-D60 Single Side Band (SSB) support}
{\xe \v Si4735-D60 Single Side Band (SSB) support\:setSSBDspAfc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setSSBDspAfc (uint8_t  {\i DSP_AFCDIS})}}
\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets DSP AFC disable or enable. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; page 24\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DSP_AFCDIS} \cell }{0 = SYNC mode, AFC enable; 1 = SSB mode, AFC disable \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 02096 \{\par
02097     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANH" }{}}{\fldrslt {\cs37\ul\cf2 currentSSBMode}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPO" }{}}{\fldrslt {\cs37\ul\cf2 param}}}
.DSP_AFCDIS = DSP_AFCDIS;\par
02098     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 sendSSBModeProperty}}}
();\par
02099 \}\par
}
{
\ql
References SI4735::sendSSBModeProperty().}\par
}
{\xe \v setSSBSoftMute\:Si4735-D60 Single Side Band (SSB) support}
{\xe \v Si4735-D60 Single Side Band (SSB) support\:setSSBSoftMute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setSSBSoftMute (uint8_t  {\i SMUTESEL})}}
\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets SSB Soft-mute Based on RSSI or SNR Selection: }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; page 24\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i SMUTESEL} \cell }{0 = Soft-mute based on RSSI (default); 1 = Soft-mute based on SNR. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 02111 \{\par
02112     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANH" }{}}{\fldrslt {\cs37\ul\cf2 currentSSBMode}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPO" }{}}{\fldrslt {\cs37\ul\cf2 param}}}
.SMUTESEL = SMUTESEL;\par
02113     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 sendSSBModeProperty}}}
();\par
02114 \}\par
}
{
\ql
References SI4735::sendSSBModeProperty().}\par
}
{\xe \v ssbPowerUp\:Si4735-D60 Single Side Band (SSB) support}
{\xe \v Si4735-D60 Single Side Band (SSB) support\:ssbPowerUp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::ssbPowerUp ()}}
\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function can be useful for debug and test. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 02371 \{\par
02372     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
02373     Wire.beginTransmission({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
);\par
02374     Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACI" }{}}{\fldrslt {\cs37\ul\cf2 POWER_UP}}}
);\par
02375     Wire.write(0b00010001); {\cf20 // Set to AM/SSB, disable interrupt; disable GPO2OEN; boot normaly; enable External Crystal Oscillator  .}\par
02376     Wire.write(0b00000101); {\cf20 // Set to Analog Line Input.}\par
02377     Wire.endTransmission();\par
02378     delayMicroseconds(2500);\par
02379 \par
02380     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 powerUp}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.CTSIEN = 0;          {\cf20 // 1 -> Interrupt anabled;}\par
02381     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 powerUp}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.GPO2OEN = 0;         {\cf20 // 1 -> GPO2 Output Enable;}\par
02382     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 powerUp}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.PATCH = 0;           {\cf20 // 0 -> Boot normally;}\par
02383     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 powerUp}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.XOSCEN = 1;          {\cf20 // 1 -> Use external crystal oscillator;}\par
02384     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 powerUp}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.FUNC = 1;            {\cf20 // 0 = FM Receive; 1 = AM/SSB (LW/MW/SW) Receiver.}\par
02385     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 powerUp}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.OPMODE = 0b00000101; {\cf20 // 0x5 = 00000101 = Analog audio outputs (LOUT/ROUT).}\par
02386 \}\par
}
{
\ql
References SI4735::waitToSend().}\par
}
{\xe \v ssbSetup\:Si4735-D60 Single Side Band (SSB) support}
{\xe \v Si4735-D60 Single Side Band (SSB) support\:ssbSetup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::ssbSetup ()}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the Si473X device on SSB (same AM Mode). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Same {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setup}}} optimized to improve loading patch performance \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 02359 \{\par
02360     {\cf20 // setPowerUp(powerUp.arg.CTSIEN, 0, 0, 1, 1, SI473X_ANALOG_AUDIO);}\par
02361     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 reset}}}
();\par
02362     {\cf20 // radioPowerUp();}\par
02363 \}\par
}
{
\ql
References SI4735::reset().}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Si47XX device Mode, Band and Frequency setup\par \pard\plain 
{\tc\tcl2 \v Si47XX device Mode, Band and Frequency setup}
{\xe \v Si47XX device Mode, Band and Frequency setup}
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setTuneFrequencyAntennaCapacitor}}}
 (uint16_t capacitor)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Only FM. Freeze Metrics During Alternate Frequency Jump. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGU" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setFrequency}}}
 (uint16_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the frequency to the corrent function of the Si4735 (FM, AM or SSB) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setFrequencyStep}}}
 (uint16_t step)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the current step value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJO" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::frequencyUp}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increments the current frequency on current band/function by using the current step. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::frequencyDown}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrements the current frequency on current band/function by using the current step. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJD" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setAM}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the radio to AM function. It means: LW MW and SW. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setFM}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the radio to FM function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setAM}}}
 (uint16_t fromFreq, uint16_t toFreq, uint16_t intialFreq, uint16_t step)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the radio to AM (LW/MW/SW) function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJG" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setFM}}}
 (uint16_t fromFreq, uint16_t toFreq, uint16_t initialFreq, uint16_t step)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the radio to FM function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJQ" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::isCurrentTuneFM}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if the current function is FM (FM_TUNE_FREQ). }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v frequencyDown\:Si47XX device Mode, Band and Frequency setup}
{\xe \v Si47XX device Mode, Band and Frequency setup\:frequencyDown}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::frequencyDown ()}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrements the current frequency on current band/function by using the current step. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 setFrequencyStep()}}} \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00506 \{\par
00507 \par
00508     {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMW" }{}}{\fldrslt {\cs37\ul\cf2 currentWorkFrequency}}}
 <= {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMU" }{}}{\fldrslt {\cs37\ul\cf2 currentMinimumFrequency}}}
)\par
00509         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMW" }{}}{\fldrslt {\cs37\ul\cf2 currentWorkFrequency}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMV" }{}}{\fldrslt {\cs37\ul\cf2 currentMaximumFrequency}}}
;\par
00510     {\cf19 else}\par
00511         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMW" }{}}{\fldrslt {\cs37\ul\cf2 currentWorkFrequency}}}
 -= {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 currentStep}}}
;\par
00512 \par
00513     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGU" }{}}{\fldrslt {\cs37\ul\cf2 setFrequency}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMW" }{}}{\fldrslt {\cs37\ul\cf2 currentWorkFrequency}}}
);\par
00514 \}\par
}
}
{\xe \v frequencyUp\:Si47XX device Mode, Band and Frequency setup}
{\xe \v Si47XX device Mode, Band and Frequency setup\:frequencyUp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::frequencyUp ()}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increments the current frequency on current band/function by using the current step. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 setFrequencyStep()}}} \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00489 \{\par
00490     {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMW" }{}}{\fldrslt {\cs37\ul\cf2 currentWorkFrequency}}}
 >= {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMV" }{}}{\fldrslt {\cs37\ul\cf2 currentMaximumFrequency}}}
)\par
00491         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMW" }{}}{\fldrslt {\cs37\ul\cf2 currentWorkFrequency}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMU" }{}}{\fldrslt {\cs37\ul\cf2 currentMinimumFrequency}}}
;\par
00492     {\cf19 else}\par
00493         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMW" }{}}{\fldrslt {\cs37\ul\cf2 currentWorkFrequency}}}
 += {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 currentStep}}}
;\par
00494 \par
00495     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGU" }{}}{\fldrslt {\cs37\ul\cf2 setFrequency}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMW" }{}}{\fldrslt {\cs37\ul\cf2 currentWorkFrequency}}}
);\par
00496 \}\par
}
}
{\xe \v isCurrentTuneFM\:Si47XX device Mode, Band and Frequency setup}
{\xe \v Si47XX device Mode, Band and Frequency setup\:isCurrentTuneFM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SI4735::isCurrentTuneFM ()}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if the current function is FM (FM_TUNE_FREQ). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true if the current function is FM (FM_TUNE_FREQ). \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00623 \{\par
00624     {\cf19 return} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 currentTune}}}
 == {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 FM_TUNE_FREQ}}}
);\par
00625 \}\par
}
}
{\xe \v setAM\:Si47XX device Mode, Band and Frequency setup}
{\xe \v Si47XX device Mode, Band and Frequency setup\:setAM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setAM ()}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the radio to AM function. It means: LW MW and SW. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the band range you want to use for the AM mode.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; page 129. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00526 \{\par
00527     {\cf20 // If you\'92re already using AM mode, it is not necessary to call powerDown and radioPowerUp. }\par
00528     {\cf20 // The other properties also should have the same value as the previous status.}\par
00529     {\cf19 if} ( {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMY" }{}}{\fldrslt {\cs37\ul\cf2 lastMode}}}
 != {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFZ" }{}}{\fldrslt {\cs37\ul\cf2 AM_CURRENT_MODE}}}
 ) \{\par
00530         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGT" }{}}{\fldrslt {\cs37\ul\cf2 powerDown}}}
();\par
00531         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 setPowerUp}}}
(1, 1, 0, 1, 1, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFU" }{}}{\fldrslt {\cs37\ul\cf2 SI473X_ANALOG_AUDIO}}}
);\par
00532         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGS" }{}}{\fldrslt {\cs37\ul\cf2 radioPowerUp}}}
();\par
00533         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHM" }{}}{\fldrslt {\cs37\ul\cf2 setAvcAmMaxGain}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMZ" }{}}{\fldrslt {\cs37\ul\cf2 currentAvcAmMaxGain}}}
); {\cf20 // Set AM Automatic Volume Gain to 48}\par
00534         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIU" }{}}{\fldrslt {\cs37\ul\cf2 setVolume}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 volume}}}
); {\cf20 // Set to previus configured volume}\par
00535     \}\par
00536     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANJ" }{}}{\fldrslt {\cs37\ul\cf2 currentSsbStatus}}}
 = 0;\par
00537     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMY" }{}}{\fldrslt {\cs37\ul\cf2 lastMode}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFZ" }{}}{\fldrslt {\cs37\ul\cf2 AM_CURRENT_MODE}}}
;\par
00538 \}\par
}
{
\ql
References SI4735::powerDown(), and SI4735::radioPowerUp().}\par
{
\ql
Referenced by SI4735::setAM().}\par
}
{\xe \v setAM\:Si47XX device Mode, Band and Frequency setup}
{\xe \v Si47XX device Mode, Band and Frequency setup\:setAM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setAM (uint16_t  {\i fromFreq}, uint16_t  {\i toFreq}, uint16_t  {\i initialFreq}, uint16_t  {\i step})}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the radio to AM (LW/MW/SW) function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJD" }{}}{\fldrslt {\cs37\ul\cf2 setAM()}}}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fromFreq} \cell }{minimum frequency for the band \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i toFreq} \cell }{maximum frequency for the band \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i initialFreq} \cell }{initial frequency \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i step} \cell }{step used to go to the next channel \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00571 \{\par
00572 \par
00573     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMU" }{}}{\fldrslt {\cs37\ul\cf2 currentMinimumFrequency}}}
 = fromFreq;\par
00574     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMV" }{}}{\fldrslt {\cs37\ul\cf2 currentMaximumFrequency}}}
 = toFreq;\par
00575     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 currentStep}}}
 = step;\par
00576 \par
00577     {\cf19 if} (initialFreq < fromFreq || initialFreq > toFreq)\par
00578         initialFreq = fromFreq;\par
00579 \par
00580     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJD" }{}}{\fldrslt {\cs37\ul\cf2 setAM}}}
();\par
00581     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMW" }{}}{\fldrslt {\cs37\ul\cf2 currentWorkFrequency}}}
 = initialFreq;\par
00582     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGU" }{}}{\fldrslt {\cs37\ul\cf2 setFrequency}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMW" }{}}{\fldrslt {\cs37\ul\cf2 currentWorkFrequency}}}
);\par
00583 \}\par
}
{
\ql
References SI4735::setAM().}\par
}
{\xe \v setFM\:Si47XX device Mode, Band and Frequency setup}
{\xe \v Si47XX device Mode, Band and Frequency setup\:setFM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setFM ()}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the radio to FM function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; page 64. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00548 \{\par
00549     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGT" }{}}{\fldrslt {\cs37\ul\cf2 powerDown}}}
();\par
00550     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 setPowerUp}}}
(1, 1, 0, 1, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFU" }{}}{\fldrslt {\cs37\ul\cf2 SI473X_ANALOG_AUDIO}}}
);\par
00551     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGS" }{}}{\fldrslt {\cs37\ul\cf2 radioPowerUp}}}
();\par
00552     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIU" }{}}{\fldrslt {\cs37\ul\cf2 setVolume}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 volume}}}
); {\cf20 // Set to previus configured volume}\par
00553     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANJ" }{}}{\fldrslt {\cs37\ul\cf2 currentSsbStatus}}}
 = 0;\par
00554     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMG" }{}}{\fldrslt {\cs37\ul\cf2 disableFmDebug}}}
();\par
00555     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMY" }{}}{\fldrslt {\cs37\ul\cf2 lastMode}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 FM_CURRENT_MODE}}}
;\par
00556 \}\par
}
{
\ql
References SI4735::disableFmDebug(), SI4735::powerDown(), and SI4735::radioPowerUp().}\par
{
\ql
Referenced by SI4735::setFM().}\par
}
{\xe \v setFM\:Si47XX device Mode, Band and Frequency setup}
{\xe \v Si47XX device Mode, Band and Frequency setup\:setFM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setFM (uint16_t  {\i fromFreq}, uint16_t  {\i toFreq}, uint16_t  {\i initialFreq}, uint16_t  {\i step})}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the radio to FM function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the band range you want to use for the FM mode.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 setFM()}}}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fromFreq} \cell }{minimum frequency for the band \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i toFreq} \cell }{maximum frequency for the band \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i initialFreq} \cell }{initial frequency (default frequency) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i step} \cell }{step used to go to the next channel \par
 \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00600 \{\par
00601 \par
00602     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMU" }{}}{\fldrslt {\cs37\ul\cf2 currentMinimumFrequency}}}
 = fromFreq;\par
00603     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMV" }{}}{\fldrslt {\cs37\ul\cf2 currentMaximumFrequency}}}
 = toFreq;\par
00604     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 currentStep}}}
 = step;\par
00605 \par
00606     {\cf19 if} (initialFreq < fromFreq || initialFreq > toFreq)\par
00607         initialFreq = fromFreq;\par
00608 \par
00609     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 setFM}}}
();\par
00610 \par
00611     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMW" }{}}{\fldrslt {\cs37\ul\cf2 currentWorkFrequency}}}
 = initialFreq;\par
00612     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGU" }{}}{\fldrslt {\cs37\ul\cf2 setFrequency}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMW" }{}}{\fldrslt {\cs37\ul\cf2 currentWorkFrequency}}}
);\par
00613 \}\par
}
{
\ql
References SI4735::setFM().}\par
}
{\xe \v setFrequency\:Si47XX device Mode, Band and Frequency setup}
{\xe \v Si47XX device Mode, Band and Frequency setup\:setFrequency}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setFrequency (uint16_t  {\i freq})}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the frequency to the corrent function of the Si4735 (FM, AM or SSB) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
You have to call setup or setPowerUp before call setFrequency.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 70, 135 \par
AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE; page 13\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint16_t} \cell }{freq Is the frequency to change. For example, FM => 10390 = 103.9 MHz; AM => 810 = 810 KHz. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00435 \{\par
00436     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
(); {\cf20 // Wait for the si473x is ready.}\par
00437     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequency}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANW" }{}}{\fldrslt {\cs37\ul\cf2 value}}}
 = freq;\par
00438     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.FREQH = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequency}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANX" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.FREQH;\par
00439     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.FREQL = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequency}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANX" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.FREQL;\par
00440 \par
00441     {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANJ" }{}}{\fldrslt {\cs37\ul\cf2 currentSsbStatus}}}
 != 0)\par
00442     \{\par
00443         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.DUMMY1 = 0;\par
00444         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.USBLSB = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANJ" }{}}{\fldrslt {\cs37\ul\cf2 currentSsbStatus}}}
; {\cf20 // Set to LSB or USB}\par
00445         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.FAST = 1;                  {\cf20 // Used just on AM and FM}\par
00446         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.FREEZE = 0;                {\cf20 // Used just on FM}\par
00447     \}\par
00448 \par
00449     Wire.beginTransmission({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
);\par
00450     Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 currentTune}}}
);\par
00451     Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANY" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[0]); {\cf20 // Send a byte with FAST and  FREEZE information; if not FM must be 0;}\par
00452     Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.FREQH);\par
00453     Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.FREQL);\par
00454     Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.ANTCAPH);\par
00455     {\cf20 // If current tune is not FM sent one more byte}\par
00456     {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 currentTune}}}
 != {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 FM_TUNE_FREQ}}}
)\par
00457         Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.ANTCAPL);\par
00458 \par
00459     Wire.endTransmission();\par
00460     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();                {\cf20 // Wait for the si473x is ready.}\par
00461     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMW" }{}}{\fldrslt {\cs37\ul\cf2 currentWorkFrequency}}}
 = freq; {\cf20 // check it}\par
00462     delay({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGB" }{}}{\fldrslt {\cs37\ul\cf2 MAX_DELAY_AFTER_SET_FREQUENCY}}}
); {\cf20 // For some reason I need to delay here. }\par
00463 \}\par
}
{
\ql
References SI4735::waitToSend().}\par
}
{\xe \v setFrequencyStep\:Si47XX device Mode, Band and Frequency setup}
{\xe \v Si47XX device Mode, Band and Frequency setup\:setFrequencyStep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setFrequencyStep (uint16_t  {\i step})}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the current step value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function does not check the limits of the current band. Please, don't take a step bigger than your legs.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i step} \cell }{if you are using FM, 10 means 100KHz. If you are using AM 10 means 10KHz For AM, 1 (1KHz) to 1000 (1MHz) are valid values. For FM 5 (50KHz) and 10 (100KHz) are valid values. \par
 \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00477 \{\par
00478     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 currentStep}}}
 = step;\par
00479 \}\par
}
}
{\xe \v setTuneFrequencyAntennaCapacitor\:Si47XX device Mode, Band and Frequency setup}
{\xe \v Si47XX device Mode, Band and Frequency setup\:setTuneFrequencyAntennaCapacitor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setTuneFrequencyAntennaCapacitor (uint16_t  {\i capacitor})}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Only FM. Freeze Metrics During Alternate Frequency Jump. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selects the tuning capacitor value.\par
For FM, Antenna Tuning Capacitor is valid only when using TXO/LPI pin as the antenna input.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 71 and 136\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i capacitor} \cell }{If zero, the tuning capacitor value is selected automatically. If the value is set to anything other than 0: AM - the tuning capacitance is manually set as 95 fF x ANTCAP + 7 pF. ANTCAP manual range is 1\'966143; FM - the valid range is 0 to 191. \par
 According to Silicon Labs, automatic capacitor tuning is recommended (value 0). \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00399 \{\par
00400     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 si47x_antenna_capacitor}}}
 cap;\par
00401 \par
00402     cap.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 value}}}
 = capacitor;\par
00403 \par
00404     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.DUMMY1 = 0;\par
00405 \par
00406     {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 currentTune}}}
 == {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 FM_TUNE_FREQ}}}
)\par
00407     \{\par
00408         {\cf20 // For FM, the capacitor value has just one byte}\par
00409         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.ANTCAPH = (capacitor <= 191) ? cap.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.ANTCAPL : 0;\par
00410     \}\par
00411     {\cf19 else}\par
00412     \{\par
00413         {\cf19 if} (capacitor <= 6143)\par
00414         \{\par
00415             {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.FREEZE = 0; {\cf20 // This parameter is not used for AM}\par
00416             {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.ANTCAPH = cap.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.ANTCAPH;\par
00417             {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 currentFrequencyParams}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.ANTCAPL = cap.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.ANTCAPL;\par
00418         \}\par
00419     \}\par
00420 \}\par
}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Si47XX device information and start up\par \pard\plain 
{\tc\tcl2 \v Si47XX device information and start up}
{\xe \v Si47XX device information and start up}
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJR" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::getFirmware}}}
 (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets firmware information. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGP" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setup}}}
 (uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 resetPin}}}
, int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGQ" }{}}{\fldrslt {\cs37\ul\cf2 interruptPin}}}
, uint8_t defaultFunction, uint8_t audioMode={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFU" }{}}{\fldrslt {\cs37\ul\cf2 SI473X_ANALOG_AUDIO}}}
)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the Si473X device. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setup}}}
 (uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 resetPin}}}
, uint8_t defaultFunction)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wait for the Si47XX device is ready to receive a command. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v getFirmware\:Si47XX device information and start up}
{\xe \v Si47XX device information and start up\:getFirmware}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::getFirmware (void )}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets firmware information. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 66, 131 \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00299 \{\par
00300     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
00301 \par
00302     Wire.beginTransmission({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
);\par
00303     Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACJ" }{}}{\fldrslt {\cs37\ul\cf2 GET_REV}}}
);\par
00304     Wire.endTransmission();\par
00305 \par
00306     {\cf19 do}\par
00307     \{\par
00308         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
00309         {\cf20 // Request for 9 bytes response}\par
00310         Wire.requestFrom({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
, 9);\par
00311         {\cf19 for} ({\cf18 int} i = 0; i < 9; i++)\par
00312             {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANE" }{}}{\fldrslt {\cs37\ul\cf2 firmwareInfo}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANU" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[i] = Wire.read();\par
00313     \} {\cf19 while} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANE" }{}}{\fldrslt {\cs37\ul\cf2 firmwareInfo}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANN" }{}}{\fldrslt {\cs37\ul\cf2 resp}}}
.ERR);\par
00314 \}\par
}
{
\ql
References SI4735::waitToSend().}\par
{
\ql
Referenced by SI4735::setup().}\par
}
{\xe \v setup\:Si47XX device information and start up}
{\xe \v Si47XX device information and start up\:setup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setup (uint8_t  {\i resetPin}, int  {\i interruptPin}, uint8_t  {\i defaultFunction}, uint8_t  {\i audioMode} = {\f2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFU" }{}}{\fldrslt {\cs37\ul\cf2 SI473X_ANALOG_AUDIO}}}
})}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the Si473X device. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If the audio mode parameter is not entered, analog mode will be considered.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{resetPin Digital Arduino Pin used to RESET command \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{interruptPin interrupt Arduino Pin (see your Arduino pinout). If less than 0, iterrupt disabled \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{defaultFunction \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{audioMode default SI473X_ANALOG_AUDIO (Analog Audio). Use SI473X_ANALOG_AUDIO or SI473X_DIGITAL_AUDIO \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00329 \{\par
00330     uint8_t interruptEnable = 0;\par
00331     Wire.begin();\par
00332 \par
00333     this->{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 resetPin}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 resetPin}}}
;\par
00334     this->{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGQ" }{}}{\fldrslt {\cs37\ul\cf2 interruptPin}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGQ" }{}}{\fldrslt {\cs37\ul\cf2 interruptPin}}}
;\par
00335 \par
00336     {\cf20 // Arduino interrupt setup (you have to know which Arduino Pins can deal with interrupt).}\par
00337     {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGQ" }{}}{\fldrslt {\cs37\ul\cf2 interruptPin}}}
 >= 0)\par
00338     \{\par
00339         pinMode({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGQ" }{}}{\fldrslt {\cs37\ul\cf2 interruptPin}}}
, INPUT);\par
00340         attachInterrupt(digitalPinToInterrupt({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGQ" }{}}{\fldrslt {\cs37\ul\cf2 interruptPin}}}
), interrupt_hundler, RISING);\par
00341         interruptEnable = 1;\par
00342     \}\par
00343 \par
00344     pinMode({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 resetPin}}}
, OUTPUT);\par
00345     digitalWrite({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 resetPin}}}
, HIGH);\par
00346 \par
00347     data_from_si4735 = {\cf17 false};\par
00348 \par
00349     {\cf20 // Set the initial SI473X behavior}\par
00350     {\cf20 // CTSIEN   1 -> Interrupt anabled or disable;}\par
00351     {\cf20 // GPO2OEN  1 -> GPO2 Output Enable;}\par
00352     {\cf20 // PATCH    0 -> Boot normally;}\par
00353     {\cf20 // XOSCEN   1 -> Use external crystal oscillator;}\par
00354     {\cf20 // FUNC     defaultFunction = 0 = FM Receive; 1 = AM (LW/MW/SW) Receiver.}\par
00355     {\cf20 // OPMODE   SI473X_ANALOG_AUDIO or SI473X_DIGITAL_AUDIO.}\par
00356     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 setPowerUp}}}
(interruptEnable, 0, 0, 1, defaultFunction, audioMode);\par
00357 \par
00358     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 reset}}}
();\par
00359     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGS" }{}}{\fldrslt {\cs37\ul\cf2 radioPowerUp}}}
();\par
00360     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIU" }{}}{\fldrslt {\cs37\ul\cf2 setVolume}}}
(30); {\cf20 // Default volume level.}\par
00361     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJR" }{}}{\fldrslt {\cs37\ul\cf2 getFirmware}}}
();\par
00362 \}\par
}
{
\ql
References SI4735::getFirmware(), SI4735::radioPowerUp(), and SI4735::reset().}\par
}
{\xe \v setup\:Si47XX device information and start up}
{\xe \v Si47XX device information and start up\:setup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setup (uint8_t  {\i resetPin}, uint8_t  {\i defaultFunction})}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wait for the Si47XX device is ready to receive a command. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the Si473X device. \par
Use this setup if you are not using interrupt resource\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{resetPin Digital Arduino Pin used to RESET command \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint8_t} \cell }{defaultFunction \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00375 \{\par
00376     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 setup}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 resetPin}}}
, -1, defaultFunction);\par
00377     delay(250);\par
00378 \}\par
}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Si47XX filter setup\par \pard\plain 
{\tc\tcl2 \v Si47XX filter setup}
{\xe \v Si47XX filter setup}
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
 }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJH" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setBandwidth}}}
 (uint8_t AMCHFLT, uint8_t AMPLFLT)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selects the bandwidth of the channel filter for AM reception. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v setBandwidth\:Si47XX filter setup}
{\xe \v Si47XX filter setup\:setBandwidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setBandwidth (uint8_t  {\i AMCHFLT}, uint8_t  {\i AMPLFLT})}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selects the bandwidth of the channel filter for AM reception. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The choices are 6, 4, 3, 2, 2.5, 1.8, or 1 (kHz). The default bandwidth is 2 kHz. It works only in AM / SSB (LW/MW/SW)\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 125, 151, 277, 181.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i AMCHFLT} \cell }{the choices are: 0 = 6 kHz Bandwidth \par
 1 = 4 kHz Bandwidth 2 = 3 kHz Bandwidth 3 = 2 kHz Bandwidth 4 = 1 kHz Bandwidth 5 = 1.8 kHz Bandwidth 6 = 2.5 kHz Bandwidth, gradual roll off 7\'9615 = Reserved (Do not use). \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i AMPLFLT} \cell }{Enables the AM Power Line Noise Rejection Filter. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00650 \{\par
00651     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 si47x_bandwidth_config}}}
 filter;\par
00652     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 si47x_property}}}
 property;\par
00653 \par
00654     {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 currentTune}}}
 == {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 FM_TUNE_FREQ}}}
) {\cf20 // Only for AM/SSB mode}\par
00655         {\cf19 return};\par
00656 \par
00657     {\cf19 if} (AMCHFLT > 6)\par
00658         {\cf19 return};\par
00659 \par
00660     {\cf17 property}.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 value}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADZ" }{}}{\fldrslt {\cs37\ul\cf2 AM_CHANNEL_FILTER}}}
;\par
00661 \par
00662     filter.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOD" }{}}{\fldrslt {\cs37\ul\cf2 param}}}
.AMCHFLT = AMCHFLT;\par
00663     filter.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOD" }{}}{\fldrslt {\cs37\ul\cf2 param}}}
.AMPLFLT = AMPLFLT;\par
00664 \par
00665     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
00666     this->{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 volume}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 volume}}}
;\par
00667     Wire.beginTransmission({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
);\par
00668     Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 SET_PROPERTY}}}
);\par
00669     Wire.write(0x00);                  {\cf20 // Always 0x00}\par
00670     Wire.write(property.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOE" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.byteHigh); {\cf20 // High byte first}\par
00671     Wire.write(property.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOE" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.byteLow);  {\cf20 // Low byte after}\par
00672     Wire.write(filter.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOF" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[1]);         {\cf20 // Raw data for AMCHFLT and}\par
00673     Wire.write(filter.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOF" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
[0]);         {\cf20 // AMPLFLT}\par
00674     Wire.endTransmission();\par
00675     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
00676 \}\par
}
{
\ql
References SI4735::waitToSend().}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tools method\par \pard\plain 
{\tc\tcl2 \v Tools method}
{\xe \v Tools method}
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::sendProperty}}}
 (uint16_t propertyValue, uint16_t param)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
wait for interrupt (useful if you are using interrupt resource) }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v sendProperty\:Tools method}
{\xe \v Tools method\:sendProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::sendProperty (uint16_t  {\i propertyValue}, uint16_t  {\i parameter}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
wait for interrupt (useful if you are using interrupt resource) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sends (sets) property to the SI47XX.\par
This method is used for others to send generic properties and params to SI47XX\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 68, 124 and 133. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00690 \{\par
00691     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 si47x_property}}}
 property;\par
00692     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 si47x_property}}}
 param;\par
00693 \par
00694     {\cf17 property}.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 value}}}
 = propertyValue;\par
00695     param.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 value}}}
 = parameter;\par
00696     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
00697     Wire.beginTransmission({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
);\par
00698     Wire.write({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 SET_PROPERTY}}}
);\par
00699     Wire.write(0x00);\par
00700     Wire.write(property.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOE" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.byteHigh); {\cf20 // Send property - High byte - most significant first}\par
00701     Wire.write(property.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOE" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.byteLow);  {\cf20 // Send property - Low byte - less significant after}\par
00702     Wire.write(param.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOE" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.byteHigh);    {\cf20 // Send the argments. High Byte - Most significant first}\par
00703     Wire.write(param.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOE" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
.byteLow);     {\cf20 // Send the argments. Low Byte - Less significant after}\par
00704     Wire.endTransmission();\par
00705     delayMicroseconds(550);\par
00706 \}\par
}
{
\ql
References SI4735::waitToSend().}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tune\par \pard\plain 
{\tc\tcl2 \v Tune}
{\xe \v Tune}
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJT" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::seekStation}}}
 (uint8_t SEEKUP, uint8_t WRAP)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Look for a station (Automatic tune) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::seekStationUp}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Search for the next station. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::seekStationDown}}}
 ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Search the previous station. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setSeekAmLimits}}}
 (uint16_t bottom, uint16_t top)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the bottom frequency and top frequency of the AM band for seek. Default is 520 to 1710. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setSeekAmSpacing}}}
 (uint16_t spacing)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selects frequency spacingfor AM seek. Default is 10 kHz spacing. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setSeekSrnThreshold}}}
 (uint16_t value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the SNR threshold for a valid AM Seek/Tune. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJZ" }{}}{\fldrslt {\cs37\ul\cf2 SI4735::setSeekRssiThreshold}}}
 (uint16_t value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the RSSI threshold for a valid AM Seek/Tune. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v seekStation\:Tune}
{\xe \v Tune\:seekStation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::seekStation (uint8_t  {\i SEEKUP}, uint8_t  {\i WRAP})}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Look for a station (Automatic tune) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 55, 72, 125 and 137\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i SEEKUP} \cell }{Seek Up/Down. Determines the direction of the search, either UP = 1, or DOWN = 0. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Wrap/Halt.} \cell }{Determines whether the seek should Wrap = 1, or Halt = 0 when it hits the band limit. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01260 \{\par
01261     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAG" }{}}{\fldrslt {\cs37\ul\cf2 si47x_seek}}}
 seek;\par
01262 \par
01263     {\cf20 // Check which FUNCTION (AM or FM) is working now}\par
01264     uint8_t seek_start = ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 currentTune}}}
 == {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 FM_TUNE_FREQ}}}
) ? {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 FM_SEEK_START}}}
 : {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 AM_SEEK_START}}}
;\par
01265 \par
01266     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 waitToSend}}}
();\par
01267 \par
01268     seek.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOU" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.SEEKUP = SEEKUP;\par
01269     seek.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOU" }{}}{\fldrslt {\cs37\ul\cf2 arg}}}
.WRAP = WRAP;\par
01270 \par
01271     Wire.beginTransmission({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 deviceAddress}}}
);\par
01272     Wire.write(seek_start);\par
01273     Wire.write(seek.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOV" }{}}{\fldrslt {\cs37\ul\cf2 raw}}}
);\par
01274 \par
01275     {\cf19 if} (seek_start == {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 AM_SEEK_START}}}
)\par
01276     \{\par
01277         Wire.write(0x00); {\cf20 // Always 0}\par
01278         Wire.write(0x00); {\cf20 // Always 0}\par
01279         Wire.write(0x00); {\cf20 // Tuning Capacitor: The tuning capacitor value}\par
01280         Wire.write(0x00); {\cf20 //                   will be selected automatically.}\par
01281     \}\par
01282 \par
01283     Wire.endTransmission();\par
01284     delay(100);\par
01285 \}\par
}
{
\ql
References SI4735::waitToSend().}\par
}
{\xe \v seekStationDown\:Tune}
{\xe \v Tune\:seekStationDown}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::seekStationDown ()}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Search the previous station. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJT" }{}}{\fldrslt {\cs37\ul\cf2 seekStation(uint8_t SEEKUP, uint8_t WRAP)}}} \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01309 \{\par
01310     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJT" }{}}{\fldrslt {\cs37\ul\cf2 seekStation}}}
(0, 1);\par
01311     delay(50);\par
01312     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGX" }{}}{\fldrslt {\cs37\ul\cf2 getFrequency}}}
();\par
01313 \}\par
}
}
{\xe \v seekStationUp\:Tune}
{\xe \v Tune\:seekStationUp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::seekStationUp ()}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Search for the next station. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJT" }{}}{\fldrslt {\cs37\ul\cf2 seekStation(uint8_t SEEKUP, uint8_t WRAP)}}} \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01295 \{\par
01296     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJT" }{}}{\fldrslt {\cs37\ul\cf2 seekStation}}}
(1, 1);\par
01297     delay(50);\par
01298     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGX" }{}}{\fldrslt {\cs37\ul\cf2 getFrequency}}}
();\par
01299 \}\par
}
}
{\xe \v setSeekAmLimits\:Tune}
{\xe \v Tune\:setSeekAmLimits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setSeekAmLimits (uint16_t  {\i bottom}, uint16_t  {\i top})}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the bottom frequency and top frequency of the AM band for seek. Default is 520 to 1710. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 127, 161, and 162\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint16_t} \cell }{bottom - the bottom of the AM band for seek \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint16_t} \cell }{top - the top of the AM band for seek \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01326 \{\par
01327     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 sendProperty}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEO" }{}}{\fldrslt {\cs37\ul\cf2 AM_SEEK_BAND_BOTTOM}}}
, bottom);\par
01328     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 sendProperty}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEP" }{}}{\fldrslt {\cs37\ul\cf2 AM_SEEK_BAND_TOP}}}
, top);\par
01329 \}\par
}
}
{\xe \v setSeekAmSpacing\:Tune}
{\xe \v Tune\:setSeekAmSpacing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setSeekAmSpacing (uint16_t  {\i spacing})}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selects frequency spacingfor AM seek. Default is 10 kHz spacing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; pages 163, 229 and 283\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uint16_t} \cell }{spacing - step in KHz \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01341 \{\par
01342     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 sendProperty}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEQ" }{}}{\fldrslt {\cs37\ul\cf2 AM_SEEK_FREQ_SPACING}}}
, spacing);\par
01343 \}\par
}
}
{\xe \v setSeekRssiThreshold\:Tune}
{\xe \v Tune\:setSeekRssiThreshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setSeekRssiThreshold (uint16_t  {\i value})}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the RSSI threshold for a valid AM Seek/Tune. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If the value is zero then RSSI threshold is not considered when doing a seek. Default value is 25 dB\'CE\'BCV.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; page 127 \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01369 \{\par
01370     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 sendProperty}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 AM_SEEK_RSSI_THRESHOLD}}}
, value);\par
01371 \}\par
}
}
{\xe \v setSeekSrnThreshold\:Tune}
{\xe \v Tune\:setSeekSrnThreshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SI4735::setSeekSrnThreshold (uint16_t  {\i value})}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the SNR threshold for a valid AM Seek/Tune. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If the value is zero then SNR threshold is not considered when doing a seek. Default value is 5 dB.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE; AN332; page 127 \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01355 \{\par
01356     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 sendProperty}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAER" }{}}{\fldrslt {\cs37\ul\cf2 AM_SEEK_SNR_THRESHOLD}}}
, value);\par
01357 \}\par
}
}

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SI4735/SI4735.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v SI4735/SI4735.cpp}
{\xe \v SI4735/SI4735.cpp}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <SI4735.h>}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SI4735/SI4735.h File Reference\par \pard\plain 
{\tc\tcl2 \v SI4735/SI4735.h}
{\xe \v SI4735/SI4735.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <Arduino.h>}\par
{\f2 #include <Wire.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAC" }{}}{\fldrslt {\cs37\ul\cf2 si473x_powerup}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Power Up arguments data type. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAC" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 si47x_frequency}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents how the frequency is stored in the si4735. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 si47x_antenna_capacitor}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Antenna Tuning Capacitor data type manupulation. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 si47x_set_frequency}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AM Tune frequency data type command (AM_TUNE_FREQ command) } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAG" }{}}{\fldrslt {\cs37\ul\cf2 si47x_seek}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seek frequency (automatic tuning) } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAG" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 si47x_response_status}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Response status command. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 si47x_firmware_information}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data representation for Firmware Information (GET_REV) } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 si47x_firmware_query_library}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Firmware Query Library ID response. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 si47x_tune_status}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seek station status. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 si47x_property}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data type to deal with SET_PROPERTY command. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rqs_status}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Radio Signal Quality data representation. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_command}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data type for RDS Status command and response information. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_status}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Response data type for current channel and reads an entry from the RDS FIFO. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_int_source}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FM_RDS_INT_SOURCE property data type. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAQ" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_config}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data type for FM_RDS_CONFIG Property. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAQ" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAR" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blocka}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Block A data type. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAR" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAS" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blockb}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Block B data type. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAS" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_date_time}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 si47x_agc_status}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 si47x_agc_overrride}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 si47x_bandwidth_config}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 si47x_ssb_mode}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAY" }{}}{\fldrslt {\cs37\ul\cf2 si4735_digital_output_format}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Digital audio output format data structure (Property 0x0102. DIGITAL_OUTPUT_FORMAT). } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAY" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAZ" }{}}{\fldrslt {\cs37\ul\cf2 si4735_digital_output_sample_rate}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Digital audio output sample structure (Property 0x0104. DIGITAL_OUTPUT_SAMPLE_RATE). } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAZ" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735}}} Class. } {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 More...}}}
\par}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 si473x_powerup.arg}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 si47x_frequency.raw}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 si47x_antenna_capacitor.raw}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABE" }{}}{\fldrslt {\cs37\ul\cf2 si47x_set_frequency.arg}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABF" }{}}{\fldrslt {\cs37\ul\cf2 si47x_seek.arg}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 si47x_response_status.resp}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 si47x_firmware_information.resp}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 si47x_firmware_query_library.resp}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 si47x_tune_status.arg}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 si47x_property.raw}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABL" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rqs_status.resp}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_command.arg}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_status.resp}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_int_source.refined}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_config.arg}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABQ" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blocka.refined}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABR" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blocka.raw}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABS" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blockb.group0}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blockb.group2}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blockb.refined}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABV" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_blockb.raw}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABW" }{}}{\fldrslt {\cs37\ul\cf2 si47x_rds_date_time.refined}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABX" }{}}{\fldrslt {\cs37\ul\cf2 si47x_agc_status.refined}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABY" }{}}{\fldrslt {\cs37\ul\cf2 si47x_agc_overrride.arg}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABZ" }{}}{\fldrslt {\cs37\ul\cf2 si47x_bandwidth_config.param}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 si47x_ssb_mode.param}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACB" }{}}{\fldrslt {\cs37\ul\cf2 si4735_digital_output_format.refined}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 POWER_UP_FM}}}
\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACD" }{}}{\fldrslt {\cs37\ul\cf2 POWER_UP_AM}}}
\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACE" }{}}{\fldrslt {\cs37\ul\cf2 POWER_UP_WB}}}
\~ 3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 POWER_PATCH}}}
\~ 15\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACG" }{}}{\fldrslt {\cs37\ul\cf2 SI473X_ADDR_SEN_LOW}}}
\~ 0x11\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACH" }{}}{\fldrslt {\cs37\ul\cf2 SI473X_ADDR_SEN_HIGH}}}
\~ 0x63\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACI" }{}}{\fldrslt {\cs37\ul\cf2 POWER_UP}}}
\~ 0x01\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACJ" }{}}{\fldrslt {\cs37\ul\cf2 GET_REV}}}
\~ 0x10\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACK" }{}}{\fldrslt {\cs37\ul\cf2 POWER_DOWN}}}
\~ 0x11\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 SET_PROPERTY}}}
\~ 0x12\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACM" }{}}{\fldrslt {\cs37\ul\cf2 GET_PROPERTY}}}
\~ 0x13\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACN" }{}}{\fldrslt {\cs37\ul\cf2 GET_INT_STATUS}}}
\~ 0x14\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 FM_TUNE_FREQ}}}
\~ 0x20\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 FM_SEEK_START}}}
\~ 0x21\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 FM_TUNE_STATUS}}}
\~ 0x22\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACR" }{}}{\fldrslt {\cs37\ul\cf2 FM_AGC_STATUS}}}
\~ 0x27\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACS" }{}}{\fldrslt {\cs37\ul\cf2 FM_AGC_OVERRIDE}}}
\~ 0x28\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACT" }{}}{\fldrslt {\cs37\ul\cf2 FM_RSQ_STATUS}}}
\~ 0x23\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACU" }{}}{\fldrslt {\cs37\ul\cf2 FM_RDS_STATUS}}}
\~ 0x24\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 FM_RDS_INT_SOURCE}}}
\~ 0x1500\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 FM_RDS_INT_FIFO_COUNT}}}
\~ 0x1501\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 FM_RDS_CONFIG}}}
\~ 0x1502\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACY" }{}}{\fldrslt {\cs37\ul\cf2 FM_RDS_CONFIDENCE}}}
\~ 0x1503\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACZ" }{}}{\fldrslt {\cs37\ul\cf2 FM_BLEND_STEREO_THRESHOLD}}}
\~ 0x1105\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADA" }{}}{\fldrslt {\cs37\ul\cf2 FM_BLEND_MONO_THRESHOLD}}}
\~ 0x1106\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADB" }{}}{\fldrslt {\cs37\ul\cf2 FM_BLEND_RSSI_STEREO_THRESHOLD}}}
\~ 0x1800\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADC" }{}}{\fldrslt {\cs37\ul\cf2 FM_BLEND_RSSI_MONO_THRESHOLD}}}
\~ 0x1801\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 FM_BLEND_SNR_STEREO_THRESHOLD}}}
\~ 0x1804\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 FM_BLEND_SNR_MONO_THRESHOLD}}}
\~ 0x1805\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADF" }{}}{\fldrslt {\cs37\ul\cf2 FM_BLEND_MULTIPATH_STEREO_THRESHOLD}}}
\~ 0x1808\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 FM_BLEND_MULTIPATH_MONO_THRESHOLD}}}
\~ 0x1809\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADH" }{}}{\fldrslt {\cs37\ul\cf2 AM_TUNE_FREQ}}}
\~ 0x40\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 AM_SEEK_START}}}
\~ 0x41\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 AM_TUNE_STATUS}}}
\~ 0x42\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADK" }{}}{\fldrslt {\cs37\ul\cf2 AM_RSQ_STATUS}}}
\~ 0x43\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADL" }{}}{\fldrslt {\cs37\ul\cf2 AM_AGC_STATUS}}}
\~ 0x47\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADM" }{}}{\fldrslt {\cs37\ul\cf2 AM_AGC_OVERRIDE}}}
\~ 0x48\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADN" }{}}{\fldrslt {\cs37\ul\cf2 GPIO_CTL}}}
\~ 0x80\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADO" }{}}{\fldrslt {\cs37\ul\cf2 GPIO_SET}}}
\~ 0x81\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADP" }{}}{\fldrslt {\cs37\ul\cf2 SSB_TUNE_FREQ}}}
\~ 0x40\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADQ" }{}}{\fldrslt {\cs37\ul\cf2 SSB_TUNE_STATUS}}}
\~ 0x42\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADR" }{}}{\fldrslt {\cs37\ul\cf2 SSB_RSQ_STATUS}}}
\~ 0x43\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADS" }{}}{\fldrslt {\cs37\ul\cf2 SSB_AGC_STATUS}}}
\~ 0x47\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADT" }{}}{\fldrslt {\cs37\ul\cf2 SSB_AGC_OVERRIDE}}}
\~ 0x48\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADU" }{}}{\fldrslt {\cs37\ul\cf2 DIGITAL_OUTPUT_FORMAT}}}
\~ 0x0102\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADV" }{}}{\fldrslt {\cs37\ul\cf2 DIGITAL_OUTPUT_SAMPLE_RATE}}}
\~ 0x0104\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADW" }{}}{\fldrslt {\cs37\ul\cf2 REFCLK_FREQ}}}
\~ 0x0201\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADX" }{}}{\fldrslt {\cs37\ul\cf2 REFCLK_PRESCALE}}}
\~ 0x0202\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADY" }{}}{\fldrslt {\cs37\ul\cf2 AM_DEEMPHASIS}}}
\~ 0x3100\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADZ" }{}}{\fldrslt {\cs37\ul\cf2 AM_CHANNEL_FILTER}}}
\~ 0x3102\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEA" }{}}{\fldrslt {\cs37\ul\cf2 AM_AUTOMATIC_VOLUME_CONTROL_MAX_GAIN}}}
\~ 0x3103\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEB" }{}}{\fldrslt {\cs37\ul\cf2 AM_MODE_AFC_SW_PULL_IN_RANGE}}}
\~ 0x3104\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEC" }{}}{\fldrslt {\cs37\ul\cf2 AM_MODE_AFC_SW_LOCK_IN_RANGE}}}
\~ 0x3105\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAED" }{}}{\fldrslt {\cs37\ul\cf2 AM_RSQ_INTERRUPTS}}}
\~ 0x3200\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEE" }{}}{\fldrslt {\cs37\ul\cf2 AM_RSQ_SNR_HIGH_THRESHOLD}}}
\~ 0x3201\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEF" }{}}{\fldrslt {\cs37\ul\cf2 AM_RSQ_SNR_LOW_THRESHOLD}}}
\~ 0x3202\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEG" }{}}{\fldrslt {\cs37\ul\cf2 AM_RSQ_RSSI_HIGH_THRESHOLD}}}
\~ 0x3203\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEH" }{}}{\fldrslt {\cs37\ul\cf2 AM_RSQ_RSSI_LOW_THRESHOLD}}}
\~ 0x3204\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEI" }{}}{\fldrslt {\cs37\ul\cf2 AM_SOFT_MUTE_RATE}}}
\~ 0x3300\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEJ" }{}}{\fldrslt {\cs37\ul\cf2 AM_SOFT_MUTE_SLOPE}}}
\~ 0x3301\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEK" }{}}{\fldrslt {\cs37\ul\cf2 AM_SOFT_MUTE_MAX_ATTENUATION}}}
\~ 0x3302\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEL" }{}}{\fldrslt {\cs37\ul\cf2 AM_SOFT_MUTE_SNR_THRESHOLD}}}
\~ 0x3303\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEM" }{}}{\fldrslt {\cs37\ul\cf2 AM_SOFT_MUTE_RELEASE_RATE}}}
\~ 0x3304\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEN" }{}}{\fldrslt {\cs37\ul\cf2 AM_SOFT_MUTE_ATTACK_RATE}}}
\~ 0x3305\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEO" }{}}{\fldrslt {\cs37\ul\cf2 AM_SEEK_BAND_BOTTOM}}}
\~ 0x3400\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEP" }{}}{\fldrslt {\cs37\ul\cf2 AM_SEEK_BAND_TOP}}}
\~ 0x3401\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEQ" }{}}{\fldrslt {\cs37\ul\cf2 AM_SEEK_FREQ_SPACING}}}
\~ 0x3402\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAER" }{}}{\fldrslt {\cs37\ul\cf2 AM_SEEK_SNR_THRESHOLD}}}
\~ 0x3403\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 AM_SEEK_RSSI_THRESHOLD}}}
\~ 0x3404\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAET" }{}}{\fldrslt {\cs37\ul\cf2 AM_AGC_ATTACK_RATE}}}
\~ 0x3702\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEU" }{}}{\fldrslt {\cs37\ul\cf2 AM_AGC_RELEASE_RATE}}}
\~ 0x3703\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEV" }{}}{\fldrslt {\cs37\ul\cf2 AM_FRONTEND_AGC_CONTROL}}}
\~ 0x3705\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEW" }{}}{\fldrslt {\cs37\ul\cf2 AM_NB_DETECT_THRESHOLD}}}
\~ 0x3900\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEX" }{}}{\fldrslt {\cs37\ul\cf2 AM_NB_INTERVAL}}}
\~ 0x3901\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEY" }{}}{\fldrslt {\cs37\ul\cf2 AM_NB_RATE}}}
\~ 0x3902\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEZ" }{}}{\fldrslt {\cs37\ul\cf2 AM_NB_IIR_FILTER}}}
\~ 0x3903\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 AM_NB_DELAY}}}
\~ 0x3904\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 RX_VOLUME}}}
\~ 0x4000\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFC" }{}}{\fldrslt {\cs37\ul\cf2 RX_HARD_MUTE}}}
\~ 0x4001\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFD" }{}}{\fldrslt {\cs37\ul\cf2 GPO_IEN}}}
\~ 0x0001\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFE" }{}}{\fldrslt {\cs37\ul\cf2 SSB_BFO}}}
\~ 0x0100\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFF" }{}}{\fldrslt {\cs37\ul\cf2 SSB_MODE}}}
\~ 0x0101\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFG" }{}}{\fldrslt {\cs37\ul\cf2 SSB_RSQ_INTERRUPTS}}}
\~ 0x3200\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFH" }{}}{\fldrslt {\cs37\ul\cf2 SSB_RSQ_SNR_HI_THRESHOLD}}}
\~ 0x3201\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFI" }{}}{\fldrslt {\cs37\ul\cf2 SSB_RSQ_SNR_LO_THRESHOLD}}}
\~ 0x3202\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFJ" }{}}{\fldrslt {\cs37\ul\cf2 SSB_RSQ_RSSI_HI_THRESHOLD}}}
\~ 0x3203\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFK" }{}}{\fldrslt {\cs37\ul\cf2 SSB_RSQ_RSSI_LO_THRESHOLD}}}
\~ 0x3204\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFL" }{}}{\fldrslt {\cs37\ul\cf2 SSB_SOFT_MUTE_RATE}}}
\~ 0x3300\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFM" }{}}{\fldrslt {\cs37\ul\cf2 SSB_SOFT_MUTE_MAX_ATTENUATION}}}
\~ 0x3302\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFN" }{}}{\fldrslt {\cs37\ul\cf2 SSB_SOFT_MUTE_SNR_THRESHOLD}}}
\~ 0x3303\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFO" }{}}{\fldrslt {\cs37\ul\cf2 SSB_RF_AGC_ATTACK_RATE}}}
\~ 0x3700\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFP" }{}}{\fldrslt {\cs37\ul\cf2 SSB_RF_AGC_RELEASE_RATE}}}
\~ 0x3701\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFQ" }{}}{\fldrslt {\cs37\ul\cf2 SSB_RF_IF_AGC_ATTACK_RATE}}}
\~ 0x3702\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFR" }{}}{\fldrslt {\cs37\ul\cf2 SSB_RF_IF_AGC_RELEASE_RATE}}}
\~ 0x3703\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 LSB_MODE}}}
\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFT" }{}}{\fldrslt {\cs37\ul\cf2 USB_MODE}}}
\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFU" }{}}{\fldrslt {\cs37\ul\cf2 SI473X_ANALOG_AUDIO}}}
\~ 0b00000101\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 SI473X_DIGITAL_AUDIO1}}}
\~ 0b00001011\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFW" }{}}{\fldrslt {\cs37\ul\cf2 SI473X_DIGITAL_AUDIO2}}}
\~ 0b10110000\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFX" }{}}{\fldrslt {\cs37\ul\cf2 SI473X_DIGITAL_AUDIO3}}}
\~ 0b10110101\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 FM_CURRENT_MODE}}}
\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFZ" }{}}{\fldrslt {\cs37\ul\cf2 AM_CURRENT_MODE}}}
\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGA" }{}}{\fldrslt {\cs37\ul\cf2 SSB_CURRENT_MODE}}}
\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGB" }{}}{\fldrslt {\cs37\ul\cf2 MAX_DELAY_AFTER_SET_FREQUENCY}}}
\~ 30\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGC" }{}}{\fldrslt {\cs37\ul\cf2 MIN_DELAY_WAIT_SEND_LOOP}}}
\~ 300\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v AM_AGC_ATTACK_RATE\:SI4735.h}
{\xe \v SI4735.h\:AM_AGC_ATTACK_RATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_AGC_ATTACK_RATE\~ 0x3702}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_AGC_OVERRIDE\:SI4735.h}
{\xe \v SI4735.h\:AM_AGC_OVERRIDE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_AGC_OVERRIDE\~ 0x48}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_AGC_RELEASE_RATE\:SI4735.h}
{\xe \v SI4735.h\:AM_AGC_RELEASE_RATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_AGC_RELEASE_RATE\~ 0x3703}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_AGC_STATUS\:SI4735.h}
{\xe \v SI4735.h\:AM_AGC_STATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_AGC_STATUS\~ 0x47}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_AUTOMATIC_VOLUME_CONTROL_MAX_GAIN\:SI4735.h}
{\xe \v SI4735.h\:AM_AUTOMATIC_VOLUME_CONTROL_MAX_GAIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_AUTOMATIC_VOLUME_CONTROL_MAX_GAIN\~ 0x3103}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_CHANNEL_FILTER\:SI4735.h}
{\xe \v SI4735.h\:AM_CHANNEL_FILTER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_CHANNEL_FILTER\~ 0x3102}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_CURRENT_MODE\:SI4735.h}
{\xe \v SI4735.h\:AM_CURRENT_MODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_CURRENT_MODE\~ 1}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_DEEMPHASIS\:SI4735.h}
{\xe \v SI4735.h\:AM_DEEMPHASIS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_DEEMPHASIS\~ 0x3100}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_FRONTEND_AGC_CONTROL\:SI4735.h}
{\xe \v SI4735.h\:AM_FRONTEND_AGC_CONTROL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_FRONTEND_AGC_CONTROL\~ 0x3705}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_MODE_AFC_SW_LOCK_IN_RANGE\:SI4735.h}
{\xe \v SI4735.h\:AM_MODE_AFC_SW_LOCK_IN_RANGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_MODE_AFC_SW_LOCK_IN_RANGE\~ 0x3105}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_MODE_AFC_SW_PULL_IN_RANGE\:SI4735.h}
{\xe \v SI4735.h\:AM_MODE_AFC_SW_PULL_IN_RANGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_MODE_AFC_SW_PULL_IN_RANGE\~ 0x3104}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_NB_DELAY\:SI4735.h}
{\xe \v SI4735.h\:AM_NB_DELAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_NB_DELAY\~ 0x3904}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_NB_DETECT_THRESHOLD\:SI4735.h}
{\xe \v SI4735.h\:AM_NB_DETECT_THRESHOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_NB_DETECT_THRESHOLD\~ 0x3900}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_NB_IIR_FILTER\:SI4735.h}
{\xe \v SI4735.h\:AM_NB_IIR_FILTER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_NB_IIR_FILTER\~ 0x3903}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_NB_INTERVAL\:SI4735.h}
{\xe \v SI4735.h\:AM_NB_INTERVAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_NB_INTERVAL\~ 0x3901}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_NB_RATE\:SI4735.h}
{\xe \v SI4735.h\:AM_NB_RATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_NB_RATE\~ 0x3902}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_RSQ_INTERRUPTS\:SI4735.h}
{\xe \v SI4735.h\:AM_RSQ_INTERRUPTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_RSQ_INTERRUPTS\~ 0x3200}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_RSQ_RSSI_HIGH_THRESHOLD\:SI4735.h}
{\xe \v SI4735.h\:AM_RSQ_RSSI_HIGH_THRESHOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_RSQ_RSSI_HIGH_THRESHOLD\~ 0x3203}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_RSQ_RSSI_LOW_THRESHOLD\:SI4735.h}
{\xe \v SI4735.h\:AM_RSQ_RSSI_LOW_THRESHOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_RSQ_RSSI_LOW_THRESHOLD\~ 0x3204}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_RSQ_SNR_HIGH_THRESHOLD\:SI4735.h}
{\xe \v SI4735.h\:AM_RSQ_SNR_HIGH_THRESHOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_RSQ_SNR_HIGH_THRESHOLD\~ 0x3201}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_RSQ_SNR_LOW_THRESHOLD\:SI4735.h}
{\xe \v SI4735.h\:AM_RSQ_SNR_LOW_THRESHOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_RSQ_SNR_LOW_THRESHOLD\~ 0x3202}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_RSQ_STATUS\:SI4735.h}
{\xe \v SI4735.h\:AM_RSQ_STATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_RSQ_STATUS\~ 0x43}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_SEEK_BAND_BOTTOM\:SI4735.h}
{\xe \v SI4735.h\:AM_SEEK_BAND_BOTTOM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_SEEK_BAND_BOTTOM\~ 0x3400}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_SEEK_BAND_TOP\:SI4735.h}
{\xe \v SI4735.h\:AM_SEEK_BAND_TOP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_SEEK_BAND_TOP\~ 0x3401}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_SEEK_FREQ_SPACING\:SI4735.h}
{\xe \v SI4735.h\:AM_SEEK_FREQ_SPACING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_SEEK_FREQ_SPACING\~ 0x3402}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_SEEK_RSSI_THRESHOLD\:SI4735.h}
{\xe \v SI4735.h\:AM_SEEK_RSSI_THRESHOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_SEEK_RSSI_THRESHOLD\~ 0x3404}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_SEEK_SNR_THRESHOLD\:SI4735.h}
{\xe \v SI4735.h\:AM_SEEK_SNR_THRESHOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_SEEK_SNR_THRESHOLD\~ 0x3403}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_SEEK_START\:SI4735.h}
{\xe \v SI4735.h\:AM_SEEK_START}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_SEEK_START\~ 0x41}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_SOFT_MUTE_ATTACK_RATE\:SI4735.h}
{\xe \v SI4735.h\:AM_SOFT_MUTE_ATTACK_RATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_SOFT_MUTE_ATTACK_RATE\~ 0x3305}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_SOFT_MUTE_MAX_ATTENUATION\:SI4735.h}
{\xe \v SI4735.h\:AM_SOFT_MUTE_MAX_ATTENUATION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_SOFT_MUTE_MAX_ATTENUATION\~ 0x3302}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_SOFT_MUTE_RATE\:SI4735.h}
{\xe \v SI4735.h\:AM_SOFT_MUTE_RATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_SOFT_MUTE_RATE\~ 0x3300}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_SOFT_MUTE_RELEASE_RATE\:SI4735.h}
{\xe \v SI4735.h\:AM_SOFT_MUTE_RELEASE_RATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_SOFT_MUTE_RELEASE_RATE\~ 0x3304}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_SOFT_MUTE_SLOPE\:SI4735.h}
{\xe \v SI4735.h\:AM_SOFT_MUTE_SLOPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_SOFT_MUTE_SLOPE\~ 0x3301}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_SOFT_MUTE_SNR_THRESHOLD\:SI4735.h}
{\xe \v SI4735.h\:AM_SOFT_MUTE_SNR_THRESHOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_SOFT_MUTE_SNR_THRESHOLD\~ 0x3303}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_TUNE_FREQ\:SI4735.h}
{\xe \v SI4735.h\:AM_TUNE_FREQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_TUNE_FREQ\~ 0x40}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AM_TUNE_STATUS\:SI4735.h}
{\xe \v SI4735.h\:AM_TUNE_STATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AM_TUNE_STATUS\~ 0x42}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DIGITAL_OUTPUT_FORMAT\:SI4735.h}
{\xe \v SI4735.h\:DIGITAL_OUTPUT_FORMAT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DIGITAL_OUTPUT_FORMAT\~ 0x0102}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DIGITAL_OUTPUT_SAMPLE_RATE\:SI4735.h}
{\xe \v SI4735.h\:DIGITAL_OUTPUT_SAMPLE_RATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DIGITAL_OUTPUT_SAMPLE_RATE\~ 0x0104}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FM_AGC_OVERRIDE\:SI4735.h}
{\xe \v SI4735.h\:FM_AGC_OVERRIDE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FM_AGC_OVERRIDE\~ 0x28}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FM_AGC_STATUS\:SI4735.h}
{\xe \v SI4735.h\:FM_AGC_STATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FM_AGC_STATUS\~ 0x27}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FM_BLEND_MONO_THRESHOLD\:SI4735.h}
{\xe \v SI4735.h\:FM_BLEND_MONO_THRESHOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FM_BLEND_MONO_THRESHOLD\~ 0x1106}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FM_BLEND_MULTIPATH_MONO_THRESHOLD\:SI4735.h}
{\xe \v SI4735.h\:FM_BLEND_MULTIPATH_MONO_THRESHOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FM_BLEND_MULTIPATH_MONO_THRESHOLD\~ 0x1809}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FM_BLEND_MULTIPATH_STEREO_THRESHOLD\:SI4735.h}
{\xe \v SI4735.h\:FM_BLEND_MULTIPATH_STEREO_THRESHOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FM_BLEND_MULTIPATH_STEREO_THRESHOLD\~ 0x1808}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FM_BLEND_RSSI_MONO_THRESHOLD\:SI4735.h}
{\xe \v SI4735.h\:FM_BLEND_RSSI_MONO_THRESHOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FM_BLEND_RSSI_MONO_THRESHOLD\~ 0x1801}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FM_BLEND_RSSI_STEREO_THRESHOLD\:SI4735.h}
{\xe \v SI4735.h\:FM_BLEND_RSSI_STEREO_THRESHOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FM_BLEND_RSSI_STEREO_THRESHOLD\~ 0x1800}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FM_BLEND_SNR_MONO_THRESHOLD\:SI4735.h}
{\xe \v SI4735.h\:FM_BLEND_SNR_MONO_THRESHOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FM_BLEND_SNR_MONO_THRESHOLD\~ 0x1805}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FM_BLEND_SNR_STEREO_THRESHOLD\:SI4735.h}
{\xe \v SI4735.h\:FM_BLEND_SNR_STEREO_THRESHOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FM_BLEND_SNR_STEREO_THRESHOLD\~ 0x1804}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FM_BLEND_STEREO_THRESHOLD\:SI4735.h}
{\xe \v SI4735.h\:FM_BLEND_STEREO_THRESHOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FM_BLEND_STEREO_THRESHOLD\~ 0x1105}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FM_CURRENT_MODE\:SI4735.h}
{\xe \v SI4735.h\:FM_CURRENT_MODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FM_CURRENT_MODE\~ 0}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FM_RDS_CONFIDENCE\:SI4735.h}
{\xe \v SI4735.h\:FM_RDS_CONFIDENCE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FM_RDS_CONFIDENCE\~ 0x1503}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FM_RDS_CONFIG\:SI4735.h}
{\xe \v SI4735.h\:FM_RDS_CONFIG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FM_RDS_CONFIG\~ 0x1502}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FM_RDS_INT_FIFO_COUNT\:SI4735.h}
{\xe \v SI4735.h\:FM_RDS_INT_FIFO_COUNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FM_RDS_INT_FIFO_COUNT\~ 0x1501}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FM_RDS_INT_SOURCE\:SI4735.h}
{\xe \v SI4735.h\:FM_RDS_INT_SOURCE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FM_RDS_INT_SOURCE\~ 0x1500}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FM_RDS_STATUS\:SI4735.h}
{\xe \v SI4735.h\:FM_RDS_STATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FM_RDS_STATUS\~ 0x24}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FM_RSQ_STATUS\:SI4735.h}
{\xe \v SI4735.h\:FM_RSQ_STATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FM_RSQ_STATUS\~ 0x23}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FM_SEEK_START\:SI4735.h}
{\xe \v SI4735.h\:FM_SEEK_START}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FM_SEEK_START\~ 0x21}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FM_TUNE_FREQ\:SI4735.h}
{\xe \v SI4735.h\:FM_TUNE_FREQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FM_TUNE_FREQ\~ 0x20}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FM_TUNE_STATUS\:SI4735.h}
{\xe \v SI4735.h\:FM_TUNE_STATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FM_TUNE_STATUS\~ 0x22}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GET_INT_STATUS\:SI4735.h}
{\xe \v SI4735.h\:GET_INT_STATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GET_INT_STATUS\~ 0x14}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GET_PROPERTY\:SI4735.h}
{\xe \v SI4735.h\:GET_PROPERTY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GET_PROPERTY\~ 0x13}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GET_REV\:SI4735.h}
{\xe \v SI4735.h\:GET_REV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GET_REV\~ 0x10}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GPIO_CTL\:SI4735.h}
{\xe \v SI4735.h\:GPIO_CTL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GPIO_CTL\~ 0x80}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GPIO_SET\:SI4735.h}
{\xe \v SI4735.h\:GPIO_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GPIO_SET\~ 0x81}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GPO_IEN\:SI4735.h}
{\xe \v SI4735.h\:GPO_IEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GPO_IEN\~ 0x0001}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LSB_MODE\:SI4735.h}
{\xe \v SI4735.h\:LSB_MODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LSB_MODE\~ 1}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAX_DELAY_AFTER_SET_FREQUENCY\:SI4735.h}
{\xe \v SI4735.h\:MAX_DELAY_AFTER_SET_FREQUENCY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_DELAY_AFTER_SET_FREQUENCY\~ 30}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MIN_DELAY_WAIT_SEND_LOOP\:SI4735.h}
{\xe \v SI4735.h\:MIN_DELAY_WAIT_SEND_LOOP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MIN_DELAY_WAIT_SEND_LOOP\~ 300}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v POWER_DOWN\:SI4735.h}
{\xe \v SI4735.h\:POWER_DOWN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define POWER_DOWN\~ 0x11}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v POWER_PATCH\:SI4735.h}
{\xe \v SI4735.h\:POWER_PATCH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define POWER_PATCH\~ 15}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v POWER_UP\:SI4735.h}
{\xe \v SI4735.h\:POWER_UP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define POWER_UP\~ 0x01}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v POWER_UP_AM\:SI4735.h}
{\xe \v SI4735.h\:POWER_UP_AM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define POWER_UP_AM\~ 1}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v POWER_UP_FM\:SI4735.h}
{\xe \v SI4735.h\:POWER_UP_FM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define POWER_UP_FM\~ 0}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 SI4735}}} ARDUINO LIBRARY \par
 Const, Data type and Methods definitions\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Si47XX PROGRAMMING GUIDE AN332 {\field {\*\fldinst { HYPERLINK "https://www.silabs.com/documents/public/application-notes/AN332.pdf" }{}}{\fldrslt {\cs37\ul\cf2 https://www.silabs.com/documents/public/application-notes/AN332.pdf}}}
 \par
AN332 REV 0.8 UNIVERSAL PROGRAMMING GUIDE \par
documentation on {\field {\*\fldinst { HYPERLINK "https://github.com/pu2clr/SI4735" }{}}{\fldrslt {\cs37\ul\cf2 https://github.com/pu2clr/SI4735}}}
\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
PU2CLR - Ricardo Lima Caratti\par
}}By Ricardo Lima Caratti, Nov 2019 \par
}}
{\xe \v POWER_UP_WB\:SI4735.h}
{\xe \v SI4735.h\:POWER_UP_WB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define POWER_UP_WB\~ 3}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REFCLK_FREQ\:SI4735.h}
{\xe \v SI4735.h\:REFCLK_FREQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REFCLK_FREQ\~ 0x0201}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v REFCLK_PRESCALE\:SI4735.h}
{\xe \v SI4735.h\:REFCLK_PRESCALE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REFCLK_PRESCALE\~ 0x0202}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RX_HARD_MUTE\:SI4735.h}
{\xe \v SI4735.h\:RX_HARD_MUTE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RX_HARD_MUTE\~ 0x4001}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RX_VOLUME\:SI4735.h}
{\xe \v SI4735.h\:RX_VOLUME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RX_VOLUME\~ 0x4000}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SET_PROPERTY\:SI4735.h}
{\xe \v SI4735.h\:SET_PROPERTY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SET_PROPERTY\~ 0x12}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SI473X_ADDR_SEN_HIGH\:SI4735.h}
{\xe \v SI4735.h\:SI473X_ADDR_SEN_HIGH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI473X_ADDR_SEN_HIGH\~ 0x63}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SI473X_ADDR_SEN_LOW\:SI4735.h}
{\xe \v SI4735.h\:SI473X_ADDR_SEN_LOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI473X_ADDR_SEN_LOW\~ 0x11}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SI473X_ANALOG_AUDIO\:SI4735.h}
{\xe \v SI4735.h\:SI473X_ANALOG_AUDIO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI473X_ANALOG_AUDIO\~ 0b00000101}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SI473X_DIGITAL_AUDIO1\:SI4735.h}
{\xe \v SI4735.h\:SI473X_DIGITAL_AUDIO1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI473X_DIGITAL_AUDIO1\~ 0b00001011}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SI473X_DIGITAL_AUDIO2\:SI4735.h}
{\xe \v SI4735.h\:SI473X_DIGITAL_AUDIO2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI473X_DIGITAL_AUDIO2\~ 0b10110000}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SI473X_DIGITAL_AUDIO3\:SI4735.h}
{\xe \v SI4735.h\:SI473X_DIGITAL_AUDIO3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI473X_DIGITAL_AUDIO3\~ 0b10110101}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SSB_AGC_OVERRIDE\:SI4735.h}
{\xe \v SI4735.h\:SSB_AGC_OVERRIDE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SSB_AGC_OVERRIDE\~ 0x48}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SSB_AGC_STATUS\:SI4735.h}
{\xe \v SI4735.h\:SSB_AGC_STATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SSB_AGC_STATUS\~ 0x47}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SSB_BFO\:SI4735.h}
{\xe \v SI4735.h\:SSB_BFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SSB_BFO\~ 0x0100}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SSB_CURRENT_MODE\:SI4735.h}
{\xe \v SI4735.h\:SSB_CURRENT_MODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SSB_CURRENT_MODE\~ 2}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SSB_MODE\:SI4735.h}
{\xe \v SI4735.h\:SSB_MODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SSB_MODE\~ 0x0101}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SSB_RF_AGC_ATTACK_RATE\:SI4735.h}
{\xe \v SI4735.h\:SSB_RF_AGC_ATTACK_RATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SSB_RF_AGC_ATTACK_RATE\~ 0x3700}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SSB_RF_AGC_RELEASE_RATE\:SI4735.h}
{\xe \v SI4735.h\:SSB_RF_AGC_RELEASE_RATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SSB_RF_AGC_RELEASE_RATE\~ 0x3701}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SSB_RF_IF_AGC_ATTACK_RATE\:SI4735.h}
{\xe \v SI4735.h\:SSB_RF_IF_AGC_ATTACK_RATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SSB_RF_IF_AGC_ATTACK_RATE\~ 0x3702}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SSB_RF_IF_AGC_RELEASE_RATE\:SI4735.h}
{\xe \v SI4735.h\:SSB_RF_IF_AGC_RELEASE_RATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SSB_RF_IF_AGC_RELEASE_RATE\~ 0x3703}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SSB_RSQ_INTERRUPTS\:SI4735.h}
{\xe \v SI4735.h\:SSB_RSQ_INTERRUPTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SSB_RSQ_INTERRUPTS\~ 0x3200}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SSB_RSQ_RSSI_HI_THRESHOLD\:SI4735.h}
{\xe \v SI4735.h\:SSB_RSQ_RSSI_HI_THRESHOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SSB_RSQ_RSSI_HI_THRESHOLD\~ 0x3203}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SSB_RSQ_RSSI_LO_THRESHOLD\:SI4735.h}
{\xe \v SI4735.h\:SSB_RSQ_RSSI_LO_THRESHOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SSB_RSQ_RSSI_LO_THRESHOLD\~ 0x3204}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SSB_RSQ_SNR_HI_THRESHOLD\:SI4735.h}
{\xe \v SI4735.h\:SSB_RSQ_SNR_HI_THRESHOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SSB_RSQ_SNR_HI_THRESHOLD\~ 0x3201}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SSB_RSQ_SNR_LO_THRESHOLD\:SI4735.h}
{\xe \v SI4735.h\:SSB_RSQ_SNR_LO_THRESHOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SSB_RSQ_SNR_LO_THRESHOLD\~ 0x3202}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SSB_RSQ_STATUS\:SI4735.h}
{\xe \v SI4735.h\:SSB_RSQ_STATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SSB_RSQ_STATUS\~ 0x43}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SSB_SOFT_MUTE_MAX_ATTENUATION\:SI4735.h}
{\xe \v SI4735.h\:SSB_SOFT_MUTE_MAX_ATTENUATION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SSB_SOFT_MUTE_MAX_ATTENUATION\~ 0x3302}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SSB_SOFT_MUTE_RATE\:SI4735.h}
{\xe \v SI4735.h\:SSB_SOFT_MUTE_RATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SSB_SOFT_MUTE_RATE\~ 0x3300}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SSB_SOFT_MUTE_SNR_THRESHOLD\:SI4735.h}
{\xe \v SI4735.h\:SSB_SOFT_MUTE_SNR_THRESHOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SSB_SOFT_MUTE_SNR_THRESHOLD\~ 0x3303}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SSB_TUNE_FREQ\:SI4735.h}
{\xe \v SI4735.h\:SSB_TUNE_FREQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SSB_TUNE_FREQ\~ 0x40}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SSB_TUNE_STATUS\:SI4735.h}
{\xe \v SI4735.h\:SSB_TUNE_STATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SSB_TUNE_STATUS\~ 0x42}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v USB_MODE\:SI4735.h}
{\xe \v SI4735.h\:USB_MODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define USB_MODE\~ 2}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}